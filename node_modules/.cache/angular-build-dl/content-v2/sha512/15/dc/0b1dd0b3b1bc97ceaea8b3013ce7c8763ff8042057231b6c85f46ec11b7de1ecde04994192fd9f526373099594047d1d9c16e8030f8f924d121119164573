function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["signs-and-symptoms-signs-and-symptoms-module"], {
  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.html":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.html ***!
    \*************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppPagesSignsAndSymptomsSignsAndSymptomsPageHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-headerbar title=\"Pertinent Signs and Symptoms\"></app-headerbar>\r\n\r\n<ion-content>\r\n  <ion-refresher slot=\"fixed\" pullFactor=\"0.5\" pullMin=\"100\" pullMax=\"200\" (ionRefresh)=\"doRefreshSignsAndSymptoms($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n  <div class=\"testServer\" *ngIf=\"loginService.inTestServer\">\r\n    TEST SERVER CONNECTED\r\n  </div>\r\n  <div class=\"wrapper\">\r\n    <ion-list>\r\n      <ion-list-header class=\"underlined-header\">\r\n        <ion-label>Symptoms List: <app-modified-b-toast [modifiedBy]=\"psigns_modified.modified_by\" [modifiedDate]=\"psigns_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n      </ion-list-header>\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col size-sm=\"12\" size-md=\"6\" size-lg=\"3\">\r\n            <ng-container  *ngFor=\"let symptom of symptoms; let i = index\" >\r\n              <ion-item lines=\"none\" *ngIf=\"symptom.id <= 9\" >\r\n                <div class=\"symptomsCheckBoxGroup\" >\r\n                  <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"symptom.checked\"></ion-checkbox>\r\n                  <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'dark'\">{{symptom.value}}</ion-label>\r\n                </div>\r\n              </ion-item>\r\n            </ng-container>\r\n          </ion-col>\r\n          <ion-col  size-sm=\"12\" size-md=\"6\" size-lg=\"3\">\r\n            <ng-container  *ngFor=\"let symptom of symptoms; let i = index\" >\r\n              <ion-item lines=\"none\" *ngIf=\"symptom.id > 9 && symptom.id <= 18\" >\r\n                <div class=\"symptomsCheckBoxGroup\" >\r\n                  <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"symptom.checked\"></ion-checkbox>\r\n                  <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'dark'\">{{symptom.value}}</ion-label>\r\n                </div>\r\n              </ion-item>\r\n            </ng-container>\r\n          </ion-col>\r\n          <ion-col  size-sm=\"12\" size-md=\"6\" size-lg=\"3\">\r\n            <ng-container  *ngFor=\"let symptom of symptoms; let i = index\" >\r\n              <ion-item lines=\"none\" *ngIf=\"symptom.id > 18 && symptom.id <= 26\" >\r\n                <div class=\"symptomsCheckBoxGroup\" >\r\n                  <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"symptom.checked\"></ion-checkbox>\r\n                  <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'dark'\">{{symptom.value}}</ion-label>\r\n                </div>\r\n              </ion-item>\r\n            </ng-container>\r\n            <ion-item lines=\"none\" >\r\n              <div class=\"symptomsCheckBoxGroup\" >\r\n                <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"isPains\"></ion-checkbox>\r\n                <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) || (isPains && painsTagInvalid) ? 'danger':'dark'\">Pains</ion-label>\r\n              </div>\r\n            </ion-item>\r\n            <div class=\"tagInputSection\" [hidden]=\"!isPains\">\r\n              <tag-input\r\n                [disable]=\"!pSignsSave || !psignsAllowEdit\"\r\n                [required]=\"isPains\"\r\n                class=\"smallTextarea\"\r\n                placeholder=\"\"\r\n                secondaryPlaceholder=\"Enter type of pain symptom\"\r\n                [(ngModel)]=\"pains\"\r\n                [theme]=\"'tag-input-theme'\"\r\n                clearOnBlur=true\r\n                (onTextChange)=\"validatePains($event)\"\r\n                (onAdd)=\"validatePains()\"\r\n                (onBlur)=\"painsOnBlur()\"\r\n                (onFocus)=\"painsOnFocus()\"\r\n                (onRemove)=\"validatePains()\"\r\n                modelAsStrings=true>\r\n                <tag-input-dropdown\r\n                  [autocompleteObservable]=\"searchPains\"\r\n                  identifyBy=\"text\"\r\n                  displayBy=\"text\">\r\n                </tag-input-dropdown>\r\n              </tag-input>\r\n              <p class=\"warning-message\" [hidden]=\"!(isPains && painsTagInvalid)\">{{painsErrorMessage}}</p>\r\n            </div>\r\n          </ion-col>\r\n          <ion-col  size-sm=\"12\" size-md=\"6\" size-lg=\"3\">\r\n            <ng-container  *ngFor=\"let symptom of symptoms; let i = index\" >\r\n              <ion-item lines=\"none\" *ngIf=\"symptom.id > 27 && symptom.id <= 35\" >\r\n                <div class=\"symptomsCheckBoxGroup\" >\r\n                  <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"symptom.checked\"></ion-checkbox>\r\n                  <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'dark'\">{{symptom.value}}</ion-label>\r\n                </div>\r\n              </ion-item>\r\n            </ng-container>\r\n            <ion-item lines=\"none\" >\r\n              <div class=\"symptomsCheckBoxGroup\" >\r\n                <ion-checkbox [disabled]=\"!pSignsSave || !psignsAllowEdit\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ? 'danger':'medium'\" slot=\"end\" [(ngModel)]=\"isOthers\"></ion-checkbox>\r\n                <ion-label class=\"textLabel\" [color]=\"(getSelectedPsings().length == 0 && !isPains && !isOthers) ||(isOthers && othersTagInvalid) ? 'danger':'dark'\">Others</ion-label>\r\n              </div>\r\n            </ion-item>\r\n            <div class=\"tagInputSection\" [hidden]=\"!isOthers\">\r\n              <tag-input\r\n                [disable]=\"!pSignsSave || !psignsAllowEdit\"\r\n                class=\"smallTextarea\"\r\n                [required]=\"isOthers\"\r\n                placeholder=\"\"\r\n                secondaryPlaceholder=\"Enter type of Other symptom\"\r\n                [(ngModel)]=\"others\"\r\n                [theme]=\"'tag-input-theme'\"\r\n                clearOnBlur=true\r\n                (onTextChange)=\"validateOthers($event)\"\r\n                (onAdd)=\"validateOthers()\"\r\n                (onBlur)=\"othersOnBlur()\"\r\n                (onFocus)=\"othersOnFocus()\"\r\n                (onRemove)=\"validateOthers()\"\r\n                modelAsStrings=true>\r\n                <tag-input-dropdown\r\n                  [autocompleteObservable]=\"searchOthers\"\r\n                  identifyBy=\"text\"\r\n                  displayBy=\"text\">\r\n                </tag-input-dropdown>\r\n              </tag-input>\r\n              <p class=\"warning-message\" [hidden]=\"!(isOthers && othersTagInvalid)\">{{othersErrorMessage}}</p>\r\n            </div>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-list>\r\n\r\n    <div class=\"ion-padding\">\r\n      <p class=\"warning-message\" [hidden]=\"!(getSelectedPsings().length == 0 && !isPains && !isOthers)\">Select atleast 1.</p>\r\n      <ion-button expand=\"block\" [hidden]=\"!psignsAllowEdit\" [disabled]=\"!pSignsSave || !psignsAllowEdit || ((getSelectedPsings().length == 0 && !isPains && !isOthers) || (isPains && painsTagInvalid) || (isOthers && othersTagInvalid))\" (click)=\"saveSignsAndSymptoms()\"><ion-icon name=\"paper-plane\"></ion-icon> Save</ion-button>\r\n      <ion-button type=\"button\" expand=\"block\" (click)=\"psignsAllowEdit = !psignsAllowEdit\" [hidden]=\"psignsAllowEdit\" [disabled]=\"!pSignsSave\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n";
    /***/
  },

  /***/
  "./src/app/app/services/alert-service.service.ts":
  /*!*******************************************************!*\
    !*** ./src/app/app/services/alert-service.service.ts ***!
    \*******************************************************/

  /*! exports provided: AlertServiceService */

  /***/
  function srcAppAppServicesAlertServiceServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AlertServiceService", function () {
      return AlertServiceService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/pages/prompt-modal/prompt-modal.page */
    "./src/app/pages/prompt-modal/prompt-modal.page.ts");
    /* harmony import */


    var src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/pages/prompt-modal-c/prompt-modal-c.page */
    "./src/app/pages/prompt-modal-c/prompt-modal-c.page.ts");

    var AlertServiceService =
    /*#__PURE__*/
    function () {
      function AlertServiceService(toastCtrl, modalController, alertController) {
        _classCallCheck(this, AlertServiceService);

        this.toastCtrl = toastCtrl;
        this.modalController = modalController;
        this.alertController = alertController;
      }

      _createClass(AlertServiceService, [{
        key: "alertToast",
        value: function alertToast(message) {
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee() {
            var toast;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    console.log('AlertToast Message:', message);
                    _context.next = 3;
                    return this.toastCtrl.create({
                      message: message,
                      duration: 8000
                    });

                  case 3:
                    toast = _context.sent;

                    toast.onclick = function (ev) {
                      toast.dismiss();
                    };

                    toast.present();

                  case 6:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
        }
      }, {
        key: "openAlertModalValidation",
        value: function openAlertModalValidation(alert, title, message, messageArray) {
          var ok = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Done';
          var okCallBack = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (result) {};
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee2() {
            var modal;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return this.modalController.create({
                      component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                      cssClass: 'my-custom-modal-array-css',
                      componentProps: {
                        alert: alert,
                        title: title,
                        message: message,
                        messageArray: messageArray,
                        ok: ok
                      }
                    });

                  case 2:
                    modal = _context2.sent;
                    modal.onDidDismiss().then(function (result) {
                      okCallBack(result);
                    });
                    _context2.next = 6;
                    return modal.present();

                  case 6:
                    return _context2.abrupt("return", _context2.sent);

                  case 7:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, this);
          }));
        }
      }, {
        key: "openSearchModal",
        value: function openSearchModal() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
          var placeholder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Enter here...";
          var maxLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
          var okCallBack = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (result) {};
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee3() {
            var modal;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return this.modalController.create({
                      component: src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__["PromptModalCPage"],
                      cssClass: 'my-custom-modal-css',
                      componentProps: {
                        searchData: {
                          isForSearch: true,
                          libs: options,
                          searchQuery: value,
                          maxLength: maxLength,
                          placeholder: placeholder
                        }
                      }
                    });

                  case 2:
                    modal = _context3.sent;
                    modal.onDidDismiss().then(function (result) {
                      okCallBack(result);
                    });
                    _context3.next = 6;
                    return modal.present();

                  case 6:
                    return _context3.abrupt("return", _context3.sent);

                  case 7:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
        }
      }, {
        key: "openPromptModal",
        value: function openPromptModal(title, message) {
          var ok = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Save';
          var okCallBack = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (result) {};
          var cancel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Cancel';
          var cancelCallBack = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (result) {};
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee4() {
            var modal;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _context4.next = 2;
                    return this.modalController.create({
                      component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                      cssClass: 'my-custom-modal-css',
                      componentProps: {
                        prompt: prompt,
                        title: title,
                        message: message,
                        cancel: cancel,
                        ok: ok
                      }
                    });

                  case 2:
                    modal = _context4.sent;
                    modal.onDidDismiss().then(function (result) {
                      okCallBack(result);
                      cancelCallBack(result);
                    });
                    _context4.next = 6;
                    return modal.present();

                  case 6:
                    return _context4.abrupt("return", _context4.sent);

                  case 7:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, this);
          }));
        }
      }, {
        key: "openAlertModal",
        value: function openAlertModal(alert, title, message) {
          var ok = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Done';
          var okCallBack = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (result) {};
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee5() {
            var modal;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return this.modalController.create({
                      component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                      // cssClass: 'auto-height',
                      cssClass: 'my-custom-modal-css',
                      componentProps: {
                        alert: alert,
                        title: title,
                        message: message,
                        ok: ok
                      }
                    });

                  case 2:
                    modal = _context5.sent;
                    modal.onDidDismiss().then(function (result) {
                      okCallBack(result);
                    });
                    _context5.next = 6;
                    return modal.present();

                  case 6:
                    return _context5.abrupt("return", _context5.sent);

                  case 7:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, this);
          }));
        }
      }, {
        key: "prompNAlert",
        value: function prompNAlert() {
          var header = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var subHeader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
          var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
          var inputs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
          var buttons = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
          var backdropDismiss = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
          var keyboardClose = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee6() {
            var _this = this;

            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    this.nativeAlert = this.alertController.create({
                      header: header,
                      subHeader: subHeader,
                      message: message,
                      backdropDismiss: backdropDismiss,
                      keyboardClose: keyboardClose,
                      inputs: inputs,
                      buttons: buttons
                    }).then(function (alert) {
                      _this.nativeAlert.present();
                    });

                  case 1:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6, this);
          }));
        }
      }, {
        key: "prompInputNAlert",
        value: function prompInputNAlert() {
          var header = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var subHeader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
          var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
          var backdropDismiss = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
          var keyboardClose = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
          var inputs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
          var buttons = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
          var callBackOk = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : function () {};
          var callBackNo = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : function () {};
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee7() {
            var _this2 = this;

            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    if (buttons.length == 0) buttons = [{
                      text: 'OK',
                      handler: function handler(data) {
                        callBackOk();
                      }
                    }, {
                      text: 'Cancel',
                      handler: function handler(data) {
                        callBackNo();
                      }
                    }];
                    this.nativeAlert = this.alertController.create({
                      header: '',
                      subHeader: '',
                      backdropDismiss: backdropDismiss,
                      keyboardClose: keyboardClose,
                      message: '',
                      inputs: inputs,
                      buttons: buttons
                    }).then(function (alert) {
                      _this2.nativeAlert.present();
                    });

                  case 2:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, this);
          }));
        }
      }]);

      return AlertServiceService;
    }();

    AlertServiceService.ctorParameters = function () {
      return [{
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"]
      }];
    };

    AlertServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"], _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"], _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"]])], AlertServiceService);
    /***/
  },

  /***/
  "./src/app/pages/signs-and-symptoms/signs-and-symptoms.module.ts":
  /*!***********************************************************************!*\
    !*** ./src/app/pages/signs-and-symptoms/signs-and-symptoms.module.ts ***!
    \***********************************************************************/

  /*! exports provided: SignsAndSymptomsPageModule */

  /***/
  function srcAppPagesSignsAndSymptomsSignsAndSymptomsModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignsAndSymptomsPageModule", function () {
      return SignsAndSymptomsPageModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _signs_and_symptoms_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./signs-and-symptoms.page */
    "./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.ts");
    /* harmony import */


    var ngx_chips__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-chips */
    "./node_modules/ngx-chips/fesm2015/ngx-chips.js");
    /* harmony import */


    var _components_components_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./../../components/components.module */
    "./src/app/components/components.module.ts");

    var routes = [{
      path: '',
      component: _signs_and_symptoms_page__WEBPACK_IMPORTED_MODULE_6__["SignsAndSymptomsPage"]
    }];

    var SignsAndSymptomsPageModule = function SignsAndSymptomsPageModule() {
      _classCallCheck(this, SignsAndSymptomsPageModule);
    };

    SignsAndSymptomsPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes), ngx_chips__WEBPACK_IMPORTED_MODULE_7__["TagInputModule"], _components_components_module__WEBPACK_IMPORTED_MODULE_8__["ComponentsModule"]],
      declarations: [_signs_and_symptoms_page__WEBPACK_IMPORTED_MODULE_6__["SignsAndSymptomsPage"]]
    })], SignsAndSymptomsPageModule);
    /***/
  },

  /***/
  "./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.scss":
  /*!***********************************************************************!*\
    !*** ./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.scss ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppPagesSignsAndSymptomsSignsAndSymptomsPageScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ":root {\n  --signs-and-symptoms-button-margin-bottom: 0px;\n}\n\nion-title {\n  text-align: center;\n  color: #0096c6;\n  font-size: 2.3vh;\n  margin-right: 15vw;\n  max-width: 65vw;\n}\n\nion-refresher {\n  z-index: 1;\n}\n\nion-refresher-content {\n  background-color: transparent;\n}\n\n::-webkit-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::-moz-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::-ms-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n.headerIcons {\n  top: 2.2vh;\n  right: 2.5vw;\n  position: fixed;\n  font-size: 2.8vh;\n}\n\n.headerIcons ion-icon {\n  margin: 0.6vw;\n}\n\nion-content {\n  background: #f9f9f9;\n  --ion-background-color: #f9f9f9;\n}\n\nion-content .wrapper {\n  padding: 10px;\n  margin-top: 0px;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 20px;\n}\n\nion-content .wrapper .tagInputSection {\n  margin-top: 1vh;\n  border-radius: 10px;\n  border: none;\n  padding: 10px !important;\n  background: white;\n}\n\nion-content .wrapper .tagInputSection .smallTextarea {\n  width: 100%;\n  border: none;\n}\n\nion-content .wrapper ion-list .symptomsCheckBoxGroup {\n  display: -webkit-box;\n  display: flex;\n}\n\nion-content .wrapper ion-list .symptomsCheckBoxGroup ion-checkbox {\n  margin: 0px;\n}\n\nion-content .wrapper ion-list .symptomsCheckBoxGroup .textLabel {\n  margin-left: 20px;\n}\n\nion-content .wrapper ion-list .checkbox {\n  margin-top: 2vh;\n  margin-bottom: 2vh;\n}\n\nion-content .wrapper ion-list .checkbox ion-checkbox {\n  margin-right: 2vw;\n  height: 3vh;\n  width: 3vh;\n}\n\nion-content .wrapper .ion-padding ion-button {\n  height: 48px;\n  margin-top: 50px;\n  margin-bottom: var(--signs-and-symptoms-button-margin-bottom);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2lnbnMtYW5kLXN5bXB0b21zL0Q6XFxwcm9qZWN0c1xcaW9uaWNzXFxlaHItbW9iaWxlL3NyY1xcYXBwXFxwYWdlc1xcc2lnbnMtYW5kLXN5bXB0b21zXFxzaWducy1hbmQtc3ltcHRvbXMucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9zaWducy1hbmQtc3ltcHRvbXMvc2lnbnMtYW5kLXN5bXB0b21zLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDhDQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ0NGOztBREVBO0VBQ0UsVUFBQTtBQ0NGOztBREVBO0VBQ0UsNkJBQUE7QUNDRjs7QURFQTtFQUFnQix5Q0FBQTtFQUNkLGNBQUE7RUFDQSxrQkFBQTtBQ0VGOztBREpBO0VBQWdCLHlDQUFBO0VBQ2QsY0FBQTtFQUNBLGtCQUFBO0FDRUY7O0FESkE7RUFBZ0IseUNBQUE7RUFDZCxjQUFBO0VBQ0Esa0JBQUE7QUNFRjs7QURKQTtFQUFnQix5Q0FBQTtFQUNkLGNBQUE7RUFDQSxrQkFBQTtBQ0VGOztBRENBO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNFRjs7QURBRTtFQUNFLGFBQUE7QUNFSjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsK0JBQUE7QUNDRjs7QURDRTtFQUNFLGFBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUk7RUFDRSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0Esd0JBQUE7RUFDQSxpQkFBQTtBQ0FOOztBREVNO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNBUjs7QURNTTtFQUNFLG9CQUFBO0VBQUEsYUFBQTtBQ0pSOztBRE1RO0VBQ0ksV0FBQTtBQ0paOztBRE9RO0VBQ0UsaUJBQUE7QUNMVjs7QURTTTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtBQ1BSOztBRFNRO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtBQ1BWOztBRGFNO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsNkRBQUE7QUNYUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ25zLWFuZC1zeW1wdG9tcy9zaWducy1hbmQtc3ltcHRvbXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOnJvb3Qge1xyXG4gIC0tc2lnbnMtYW5kLXN5bXB0b21zLWJ1dHRvbi1tYXJnaW4tYm90dG9tOiAwcHg7XHJcbn1cclxuICBcclxuaW9uLXRpdGxlIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICMwMDk2YzY7XHJcbiAgZm9udC1zaXplOiAyLjN2aDtcclxuICBtYXJnaW4tcmlnaHQ6IDE1dnc7XHJcbiAgbWF4LXdpZHRoOiA2NXZ3O1xyXG59XHJcblxyXG5pb24tcmVmcmVzaGVyIHtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG5pb24tcmVmcmVzaGVyLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG46OnBsYWNlaG9sZGVyIHsgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXHJcbiAgY29sb3I6ICNjOGM4Yzg7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4uaGVhZGVySWNvbnMge1xyXG4gIHRvcDogMi4ydmg7XHJcbiAgcmlnaHQ6IDIuNXZ3O1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBmb250LXNpemU6IDIuOHZoO1xyXG5cclxuICBpb24taWNvbiB7XHJcbiAgICBtYXJnaW46IDAuNnZ3O1xyXG4gIH1cclxufVxyXG5cclxuaW9uLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQ6ICNmOWY5Zjk7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuXHJcbiAgLndyYXBwZXIge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuXHJcblxyXG4gICAgLnRhZ0lucHV0U2VjdGlvbiB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDF2aDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG5cclxuICAgICAgLnNtYWxsVGV4dGFyZWEge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlvbi1saXN0IHtcclxuICAgICAgXHJcbiAgICAgIC5zeW1wdG9tc0NoZWNrQm94R3JvdXAge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgIGlvbi1jaGVja2JveCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnRleHRMYWJlbCB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5jaGVja2JveCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMnZoO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJ2aDtcclxuXHJcbiAgICAgICAgaW9uLWNoZWNrYm94IHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMnZ3O1xyXG4gICAgICAgICAgaGVpZ2h0OiAzdmg7XHJcbiAgICAgICAgICB3aWR0aDogM3ZoO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5pb24tcGFkZGluZyB7XHJcbiAgICAgIGlvbi1idXR0b24ge1xyXG4gICAgICAgIGhlaWdodDogNDhweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLXNpZ25zLWFuZC1zeW1wdG9tcy1idXR0b24tbWFyZ2luLWJvdHRvbSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiOnJvb3Qge1xuICAtLXNpZ25zLWFuZC1zeW1wdG9tcy1idXR0b24tbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuXG5pb24tdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMDA5NmM2O1xuICBmb250LXNpemU6IDIuM3ZoO1xuICBtYXJnaW4tcmlnaHQ6IDE1dnc7XG4gIG1heC13aWR0aDogNjV2dztcbn1cblxuaW9uLXJlZnJlc2hlciB7XG4gIHotaW5kZXg6IDE7XG59XG5cbmlvbi1yZWZyZXNoZXItY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG46OnBsYWNlaG9sZGVyIHtcbiAgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXG4gIGNvbG9yOiAjYzhjOGM4O1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5oZWFkZXJJY29ucyB7XG4gIHRvcDogMi4ydmg7XG4gIHJpZ2h0OiAyLjV2dztcbiAgcG9zaXRpb246IGZpeGVkO1xuICBmb250LXNpemU6IDIuOHZoO1xufVxuLmhlYWRlckljb25zIGlvbi1pY29uIHtcbiAgbWFyZ2luOiAwLjZ2dztcbn1cblxuaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xufVxuaW9uLWNvbnRlbnQgLndyYXBwZXIge1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5pb24tY29udGVudCAud3JhcHBlciAudGFnSW5wdXRTZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMXZoO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5pb24tY29udGVudCAud3JhcHBlciAudGFnSW5wdXRTZWN0aW9uIC5zbWFsbFRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbn1cbmlvbi1jb250ZW50IC53cmFwcGVyIGlvbi1saXN0IC5zeW1wdG9tc0NoZWNrQm94R3JvdXAge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuaW9uLWNvbnRlbnQgLndyYXBwZXIgaW9uLWxpc3QgLnN5bXB0b21zQ2hlY2tCb3hHcm91cCBpb24tY2hlY2tib3gge1xuICBtYXJnaW46IDBweDtcbn1cbmlvbi1jb250ZW50IC53cmFwcGVyIGlvbi1saXN0IC5zeW1wdG9tc0NoZWNrQm94R3JvdXAgLnRleHRMYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuaW9uLWNvbnRlbnQgLndyYXBwZXIgaW9uLWxpc3QgLmNoZWNrYm94IHtcbiAgbWFyZ2luLXRvcDogMnZoO1xuICBtYXJnaW4tYm90dG9tOiAydmg7XG59XG5pb24tY29udGVudCAud3JhcHBlciBpb24tbGlzdCAuY2hlY2tib3ggaW9uLWNoZWNrYm94IHtcbiAgbWFyZ2luLXJpZ2h0OiAydnc7XG4gIGhlaWdodDogM3ZoO1xuICB3aWR0aDogM3ZoO1xufVxuaW9uLWNvbnRlbnQgLndyYXBwZXIgLmlvbi1wYWRkaW5nIGlvbi1idXR0b24ge1xuICBoZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLXNpZ25zLWFuZC1zeW1wdG9tcy1idXR0b24tbWFyZ2luLWJvdHRvbSk7XG59Il19 */";
    /***/
  },

  /***/
  "./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.ts":
  /*!*********************************************************************!*\
    !*** ./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.ts ***!
    \*********************************************************************/

  /*! exports provided: SignsAndSymptomsPage */

  /***/
  function srcAppPagesSignsAndSymptomsSignsAndSymptomsPageTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignsAndSymptomsPage", function () {
      return SignsAndSymptomsPage;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _services_signs_symptoms_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./../../services/signs-symptoms-api.service */
    "./src/app/services/signs-symptoms-api.service.ts");
    /* harmony import */


    var _services_patient_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./../../services/patient.service */
    "./src/app/services/patient.service.ts");
    /* harmony import */


    var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./../../services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _services_login_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./../../services/login.service */
    "./src/app/services/login.service.ts");
    /* harmony import */


    var _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./../../services/permission-validator.service */
    "./src/app/services/permission-validator.service.ts");
    /* harmony import */


    var _services_loading_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./../../services/loading.service */
    "./src/app/services/loading.service.ts");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_string_utils_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./../../services/string-utils.service */
    "./src/app/services/string-utils.service.ts");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @ionic-native/http/ngx */
    "./node_modules/@ionic-native/http/ngx/index.js");
    /* harmony import */


    var src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! src/app/app/services/alert-service.service */
    "./src/app/app/services/alert-service.service.ts");

    var SignsAndSymptomsPage =
    /*#__PURE__*/
    function () {
      function SignsAndSymptomsPage(events, signsApi, patientService, apiService, loginService, loadingService, permissionValidatorService, stringUtilsService, httpClient, http, platform, alertServ, menuController) {
        var _this3 = this;

        _classCallCheck(this, SignsAndSymptomsPage);

        this.events = events;
        this.signsApi = signsApi;
        this.patientService = patientService;
        this.apiService = apiService;
        this.loginService = loginService;
        this.loadingService = loadingService;
        this.permissionValidatorService = permissionValidatorService;
        this.stringUtilsService = stringUtilsService;
        this.httpClient = httpClient;
        this.http = http;
        this.platform = platform;
        this.alertServ = alertServ;
        this.menuController = menuController;
        this.symptoms = [];
        this.isPains = false;
        this.isOthers = false;
        this.selectedSigns = [];
        this.pains = [];
        this.others = [];
        this.pSignsSave = true;
        this.pSignsView = true;
        this.othersTagInvalid = false;
        this.painsTagInvalid = false;
        this.psigns_modified = {
          modified_by: null,
          modified_dt: null
        };
        this.psignsAllowEdit = true;
        this.othersErrorMessage = '';
        this.painsErrorMessage = '';
        this.searchPainsPath = '/api/doctor/patient/psigns/pains/options';
        this.searchOthersPath = '/api/doctor/patient/psigns/others/options';
        this.SAVE_SIGNS_AND_SYMPTOMS = 1;

        this.searchPains = function (keyword) {
          if (_this3.platform.is('ios') || _this3.platform.is('android')) {
            console.log('native');
            var params = {
              q: keyword
            };
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + _this3.loginService.getAuthentication().token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["from"])(_this3.http.get(_this3.apiService.getUrl() + _this3.searchPainsPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (response) {
              var painList = JSON.parse(response.data);
              console.log('Pain List: ', painList);
              return painList;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {// do nothing
                }
              }

              console.log('Pain List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["throwError"])(err);
            }));
          } else {
            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpParams"]().set('q', keyword),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + _this3.loginService.getAuthentication().token
              })
            };
            return _this3.httpClient.get(_this3.apiService.getUrl() + _this3.searchPainsPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (response) {
              console.log('Pain List: ', response);
              return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err, caught) {
              console.log('Pain List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["throwError"])(err);
            }));
          }
        };

        this.searchOthers = function (keyword) {
          if (_this3.platform.is('ios') || _this3.platform.is('android')) {
            console.log('native');
            var params = {
              q: keyword
            };
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + _this3.loginService.getAuthentication().token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["from"])(_this3.http.get(_this3.apiService.getUrl() + _this3.searchOthersPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (response) {
              var othersList = JSON.parse(response.data);
              console.log('Others List: ', othersList);
              return othersList;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {// do nothing
                }
              }

              console.log('Others List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["throwError"])(err);
            }));
          } else {
            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpParams"]().set('q', keyword),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + _this3.loginService.getAuthentication().token
              })
            };
            return _this3.httpClient.get(_this3.apiService.getUrl() + _this3.searchOthersPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (response) {
              console.log('Others List: ', response);
              return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err, caught) {
              console.log('Others List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["throwError"])(err);
            }));
          }
        };

        this.pSignsConfigAndDefaults = this.loginService.getConfigAndDefaults().psigns;
        this.defaultOptions = this.pSignsConfigAndDefaults['m-patient-psigns']['default-options'].psigns;
        this.initOptions();
        this.selectedEncounterNo = this.patientService.getSelectedEncounterNo();
        console.log(this.selectedEncounterNo);
        this.signsApi.setUrl(this.apiService.getUrl());
        this.signsApi.setToken(this.loginService.getAuthentication().token);
      }

      _createClass(SignsAndSymptomsPage, [{
        key: "initOptions",
        value: function initOptions() {
          for (var i in this.defaultOptions) {
            if (this.defaultOptions[i] === 'Pains' || this.defaultOptions[i] === 'Others') {
              continue;
            }

            this.symptoms.push({
              id: i,
              value: this.defaultOptions[i],
              checked: false
            });
          }
        }
      }, {
        key: "initializeUserInterfaceByRole",
        value: function initializeUserInterfaceByRole() {
          this.pSignsSave = this.permissionValidatorService.hasPSignsEdit();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this4 = this;

          this.menuController.swipeGesture(true, 'mainMenu');
          this.menuController.swipeGesture(true, 'accountMenu');
          this.initializeUserInterfaceByRole();
          this.getSignsandSymptomsOptions().then(function (_) {
            _this4.getSignsandSymptoms(_this4.selectedEncounterNo).then(function (_) {
              _this4.validateOthers();

              _this4.validatePains();
            });
          });
        }
      }, {
        key: "validateOthers",
        value: function validateOthers() {
          var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          this.others.forEach(function (element) {
            value = value + (value.length == 0 ? element : ', ' + element);
          });

          if (value.length > 2000) {
            this.othersTagInvalid = true;
            this.othersErrorMessage = 'Others remarks has reached maximum character length.';
          } else if (value.length == 0) {
            this.othersTagInvalid = true;
            this.othersErrorMessage = 'Others is required.';
          } else {
            this.othersTagInvalid = false;
          }
        }
      }, {
        key: "validatePains",
        value: function validatePains() {
          var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          this.pains.forEach(function (element) {
            value = value + (value.length == 0 ? element : ', ' + element);
          });

          if (value.length > 2000) {
            this.painsTagInvalid = true;
            this.painsErrorMessage = 'Pains remarks has reached maximum character length.';
          } else if (value.length === 0) {
            this.painsTagInvalid = true;
            this.painsErrorMessage = 'Pains is required.';
          } else {
            this.painsTagInvalid = false;
          }
        }
      }, {
        key: "ionViewWillEnter",
        value: function ionViewWillEnter() {
          console.log('ionViewWillEnter');
          var tempSelectedEncounterNo = this.patientService.getSelectedEncounterNo();

          if (this.selectedEncounterNo !== tempSelectedEncounterNo) {
            console.log('selected patient changed');
            this.selectedEncounterNo = tempSelectedEncounterNo;
            this.initializeUserInterfaceByRole();
            this.getSignsandSymptoms(this.selectedEncounterNo);
          }
        }
      }, {
        key: "ionViewWillLeave",
        value: function ionViewWillLeave() {
          console.log('ionViewWillLeave');
        }
      }, {
        key: "saveSignsAndSymptoms",
        value: function saveSignsAndSymptoms() {
          this.openPromptModal(this.SAVE_SIGNS_AND_SYMPTOMS, {}, 'Pertinent Signs and Symptoms', 'Would you like to save your changes?');
        }
      }, {
        key: "getSelectedPsings",
        value: function getSelectedPsings() {
          var selected = [];

          for (var i = 0; i < this.symptoms.length; i++) {
            if (this.symptoms[i].checked) {
              selected.push(parseInt(this.symptoms[i].id));
            }
          }

          return selected;
        }
      }, {
        key: "saveSignsAndSymptomsFunction",
        value: function saveSignsAndSymptomsFunction() {
          var _this5 = this;

          var selected = this.getSelectedPsings();

          if (this.isPains) {
            selected.push(27);
          }

          if (this.isOthers) {
            selected.push(36);
          }

          console.log(selected);
          console.log(this.pains);
          console.log(this.others);
          this.loadingService.present();
          this.signsApi.saveSignsAndSymptoms(this.selectedEncounterNo, selected, this.pains, this.others).subscribe(function (response) {
            console.log(response);

            _this5.loadingService.dismiss().then(function (_) {
              if (response && response.code === 200 && response.saved) {
                _this5.psigns_modified.modified_by = response.modified_by;
                _this5.psigns_modified.modified_dt = response.modified_dt;
                _this5.psignsAllowEdit = false;

                _this5.alertServ.openAlertModal('success', 'Success', response.message);
              } else {
                _this5.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
              }
            });
          }, function (err) {
            console.log(err);

            _this5.loadingService.dismiss().then(function (_) {
              var message = _this5.stringUtilsService.parseErrorMessage(err);

              _this5.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
          });
        }
      }, {
        key: "getSignsandSymptomsOptions",
        value: function getSignsandSymptomsOptions() {
          var _this6 = this;

          return new Promise(function (resolve, reject) {
            console.log('psigns optinos', _this6.defaultOptions, _this6.defaultOptions.length);

            if (_this6.symptoms.length > 0) {
              resolve(_this6.defaultOptions);
            } else {
              _this6.loadingService.present();

              _this6.signsApi.getPsignsOptions().subscribe(function (response) {
                console.log(response);

                _this6.loadingService.dismiss().then(function (_) {
                  try {
                    if (!response) {
                      _this6.alertServ.openAlertModal('fail', 'Failed', 'Cannot parse signs and symptoms options!', 'Ok');
                    } else {
                      _this6.pSignsConfigAndDefaults['m-patient-psigns']['default-options'].psigns = response;
                      _this6.defaultOptions = response;

                      _this6.initOptions();
                    }

                    resolve(response);
                  } catch (err) {
                    reject(err);
                  }
                });
              }, function (err) {
                console.log(err);

                _this6.loadingService.dismiss().then(function (_) {
                  reject(err);

                  var message = _this6.stringUtilsService.parseErrorMessage(err);

                  _this6.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                });
              });
            }
          });
        }
      }, {
        key: "resetForm",
        value: function resetForm() {
          this.psignsAllowEdit = true;
          this.psigns_modified.modified_by = null;
          this.psigns_modified.modified_dt = null;
        }
      }, {
        key: "getSignsandSymptoms",
        value: function getSignsandSymptoms(encounter_no) {
          var _this7 = this;

          return new Promise(function (resolve, reject) {
            _this7.loadingService.present();

            _this7.signsApi.getSignsandSymptoms(encounter_no).subscribe(function (response) {
              console.log(response);

              _this7.loadingService.dismiss().then(function (_) {
                _this7.resetForm();

                try {
                  if (response) {
                    // Reset Signs and Symptoms options
                    _this7.symptoms.forEach(function (symptoms) {
                      symptoms.checked = false;
                    });

                    _this7.isPains = false;
                    _this7.pains = [];
                    _this7.isOthers = false;
                    _this7.others = [];

                    if (response.pains.length > 0) {
                      _this7.isPains = true;
                      _this7.pains = response.pains;
                    }

                    if (response.others.length > 0) {
                      _this7.isOthers = true;
                      _this7.others = response.others;
                    }

                    _this7.psigns_modified.modified_by = response.modified_by;
                    _this7.psigns_modified.modified_dt = response.modified_dt;
                    _this7.psignsAllowEdit = response.modified_by == null || response.modified_by == '';
                    console.error('this.psigns_modified.modified_by', _this7.psigns_modified.modified_by, _this7.psignsAllowEdit);

                    if (response.selected.length > 0) {
                      _this7.selectedSigns = response.selected;
                      console.log('this.symptoms: ', _this7.symptoms);
                      console.log('this.selectedSigns: ', _this7.selectedSigns);
                      var _iteratorNormalCompletion = true;
                      var _didIteratorError = false;
                      var _iteratorError = undefined;

                      try {
                        for (var _iterator = _this7.selectedSigns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                          var selected = _step.value;
                          var _iteratorNormalCompletion2 = true;
                          var _didIteratorError2 = false;
                          var _iteratorError2 = undefined;

                          try {
                            for (var _iterator2 = _this7.symptoms[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                              var symptom = _step2.value;
                              console.log(symptom.id, ' === ', selected); // tslint:disable-next-line: max-line-length

                              if (typeof symptom.id === 'number' && symptom.id === selected || typeof symptom.id === 'string' && Number(symptom.id) === selected) {
                                symptom.checked = true;
                                break;
                              }
                            }
                          } catch (err) {
                            _didIteratorError2 = true;
                            _iteratorError2 = err;
                          } finally {
                            try {
                              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                                _iterator2.return();
                              }
                            } finally {
                              if (_didIteratorError2) {
                                throw _iteratorError2;
                              }
                            }
                          }
                        }
                      } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                      } finally {
                        try {
                          if (!_iteratorNormalCompletion && _iterator.return != null) {
                            _iterator.return();
                          }
                        } finally {
                          if (_didIteratorError) {
                            throw _iteratorError;
                          }
                        }
                      }
                    }
                  } else {
                    _this7.alertServ.openAlertModal('fail', 'Failed', 'Cannot parse signs and symptoms values!', 'Ok');
                  }

                  resolve(response);
                } catch (err) {
                  reject(err);
                }
              });
            }, function (err) {
              console.log(err);

              _this7.loadingService.dismiss().then(function (_) {
                reject(err);

                var message = _this7.stringUtilsService.parseErrorMessage(err);

                _this7.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
              });
            });
          });
        }
      }, {
        key: "doRefreshSignsAndSymptoms",
        value: function doRefreshSignsAndSymptoms(event) {
          this.getSignsandSymptoms(this.selectedEncounterNo).then(function (response) {
            event.target.complete();
          }).catch(function (_) {
            event.target.complete();
          });
        }
      }, {
        key: "painsOnFocus",
        value: function painsOnFocus() {
          setTimeout(function () {
            document.documentElement.style.setProperty('--signs-and-symptoms-button-margin-bottom', '50vh');
          }, 500);
        }
      }, {
        key: "painsOnBlur",
        value: function painsOnBlur() {
          this.validatePains();
          document.documentElement.style.setProperty('--signs-and-symptoms-button-margin-bottom', '0px');
        }
      }, {
        key: "othersOnFocus",
        value: function othersOnFocus() {
          setTimeout(function () {
            document.documentElement.style.setProperty('--signs-and-symptoms-button-margin-bottom', '50vh');
          }, 500);
        }
      }, {
        key: "othersOnBlur",
        value: function othersOnBlur() {
          this.validateOthers();
          document.documentElement.style.setProperty('--signs-and-symptoms-button-margin-bottom', '0px');
        }
      }, {
        key: "openPromptModal",
        value: function openPromptModal(option, data, title, message) {
          var _this8 = this;

          var ok = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Save';
          var cancel = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'Cancel';
          this.alertServ.openPromptModal(title, message, ok, function (result) {
            if (result !== null) {
              console.log('result.data: ', result.data);

              if (result.data && result.data.button === 'Save') {
                if (option === _this8.SAVE_SIGNS_AND_SYMPTOMS) {
                  _this8.saveSignsAndSymptomsFunction();
                }
              }
            }
          });
        }
      }]);

      return SignsAndSymptomsPage;
    }();

    SignsAndSymptomsPage.ctorParameters = function () {
      return [{
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Events"]
      }, {
        type: _services_signs_symptoms_api_service__WEBPACK_IMPORTED_MODULE_3__["SignsSymptomsApiService"]
      }, {
        type: _services_patient_service__WEBPACK_IMPORTED_MODULE_4__["PatientService"]
      }, {
        type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]
      }, {
        type: _services_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"]
      }, {
        type: _services_loading_service__WEBPACK_IMPORTED_MODULE_8__["LoadingService"]
      }, {
        type: _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_7__["PermissionValidatorService"]
      }, {
        type: _services_string_utils_service__WEBPACK_IMPORTED_MODULE_10__["StringUtilsService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpClient"]
      }, {
        type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_13__["HTTP"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"]
      }, {
        type: src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__["AlertServiceService"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["MenuController"]
      }];
    };

    SignsAndSymptomsPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-signs-and-symptoms',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./signs-and-symptoms.page.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.html")).default,
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./signs-and-symptoms.page.scss */
      "./src/app/pages/signs-and-symptoms/signs-and-symptoms.page.scss")).default, tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./tag-input-theme.scss */
      "./src/app/pages/signs-and-symptoms/tag-input-theme.scss")).default]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Events"], _services_signs_symptoms_api_service__WEBPACK_IMPORTED_MODULE_3__["SignsSymptomsApiService"], _services_patient_service__WEBPACK_IMPORTED_MODULE_4__["PatientService"], _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"], _services_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"], _services_loading_service__WEBPACK_IMPORTED_MODULE_8__["LoadingService"], _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_7__["PermissionValidatorService"], _services_string_utils_service__WEBPACK_IMPORTED_MODULE_10__["StringUtilsService"], _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpClient"], _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_13__["HTTP"], _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"], src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__["AlertServiceService"], _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["MenuController"]])], SignsAndSymptomsPage);
    /***/
  },

  /***/
  "./src/app/pages/signs-and-symptoms/tag-input-theme.scss":
  /*!***************************************************************!*\
    !*** ./src/app/pages/signs-and-symptoms/tag-input-theme.scss ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppPagesSignsAndSymptomsTagInputThemeScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "::ng-deep tag-input .ng2-tag-input.tag-input-theme {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 1px solid var(--ion-color-primary);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme:focus {\n  outline: 0;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--dropping {\n  opacity: 0.7;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--loading {\n  border: none;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme .ng2-tags-container {\n  flex-wrap: wrap;\n  display: -webkit-box;\n  display: flex;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n  color: #fff;\n  border-radius: 5px;\n  height: auto !important;\n  background: var(--ion-color-primary);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(.readonly):not(.tag--editing):focus {\n  background: var(--ion-color-primary-shade);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(.readonly):not(.tag--editing):active {\n  background: var(--ion-color-primary-shade);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n  background: var(--ion-color-primary-shade);\n  color: #fff;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.readonly {\n  cursor: default;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.readonly:focus, ::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:focus {\n  outline: 0;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.tag--editing {\n  cursor: text;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag .tag__text {\n  white-space: normal !important;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon {\n  -webkit-transition: all 0.35s;\n  transition: all 0.35s;\n  text-align: right;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon path {\n  fill: #fff;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon svg {\n  vertical-align: bottom;\n  height: 34px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/services/signs-symptoms-api.service.ts":
  /*!********************************************************!*\
    !*** ./src/app/services/signs-symptoms-api.service.ts ***!
    \********************************************************/

  /*! exports provided: SignsSymptomsApiService */

  /***/
  function srcAppServicesSignsSymptomsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignsSymptomsApiService", function () {
      return SignsSymptomsApiService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @ionic-native/http/ngx */
    "./node_modules/@ionic-native/http/ngx/index.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");

    var SignsSymptomsApiService =
    /*#__PURE__*/
    function () {
      function SignsSymptomsApiService(httpClient, http, platform) {
        _classCallCheck(this, SignsSymptomsApiService);

        this.httpClient = httpClient;
        this.http = http;
        this.platform = platform;
        this.url = 'http://localhost:3000';
        this.optionsPath = '/api/doctor/patient/psigns/options';
        this.getSignsandSymptomsPath = '/api/doctor/patient/psigns/get';
        this.saveSignsAndSymptomsPath = '/api/doctor/patient/psigns/save';
        this.searchPainsPath = '/api/doctor/patient/psigns/pains/options';
        this.searchOthersPath = '/api/doctor/patient/psigns/others/options';
      }

      _createClass(SignsSymptomsApiService, [{
        key: "setUrl",
        value: function setUrl(url) {
          this.url = url;
        }
      }, {
        key: "setToken",
        value: function setToken(token) {
          this.token = token;
        }
      }, {
        key: "getSignsandSymptoms",
        value: function getSignsandSymptoms(encounter_no) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              id: encounter_no
            };
            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.getSignsandSymptomsPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Signs and Symptoms: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Signs and symptoms error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]().set('id', encounter_no),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                Accept: 'application/json',
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token,
                'Access-Control-Allow-Origin': '*'
              })
            };
            return this.httpClient.get(this.url + this.getSignsandSymptomsPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              console.log('Entered getSignsandSymptoms API:', response);
              return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              console.log(err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "saveSignsAndSymptoms",
        value: function saveSignsAndSymptoms(encounter_no, selected, pains, others) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var body = {
              psa_names: [],
              pains: [],
              others: []
            };

            for (var i = 0; i < selected.length; i++) {
              body.psa_names.push({
                psa_name: selected[i]
              });
            }

            for (var _i = 0; _i < pains.length; _i++) {
              body.pains.push(pains[_i]);
            }

            for (var _i2 = 0; _i2 < others.length; _i2++) {
              body.others.push(others[_i2]);
            }

            console.log(body);
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            this.http.setDataSerializer('json');
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.post(this.url + this.saveSignsAndSymptomsPath + '?id=' + encounter_no, body, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Signs and symptoms: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Signs and symptopms error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            var input = new FormData();

            for (var _i3 = 0; _i3 < selected.length; _i3++) {
              input.append('psa_names[' + _i3 + '][psa_name]', selected[_i3]);
            }

            for (var j = 0; j < pains.length; j++) {
              input.append('pains[' + j + ']', pains[j]);
            }

            for (var k = 0; k < others.length; k++) {
              input.append('others[' + k + ']', others[k]);
            }

            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]().set('id', encounter_no),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token,
                'Access-Control-Allow-Origin': '*'
              })
            };
            return this.httpClient.post(this.url + this.saveSignsAndSymptomsPath, input, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              console.log('Entered saveSignsAndSymptoms API:', response);
              return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              console.log(err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "getPsignsOptions",
        value: function getPsignsOptions() {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {};
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.optionsPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');
            var httpOptions = {
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.optionsPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (results) {
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "searchPains",
        value: function searchPains(keyword) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              q: keyword
            };
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.searchPainsPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Search pains: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');

            var _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]().set('q', keyword);

            console.log('params: ', _params);
            var httpOptions = {
              params: _params,
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.searchPainsPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (results) {
              console.log('Search pains: ', results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "searchOthers",
        value: function searchOthers(keyword) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              q: keyword
            };
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.searchOthersPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Search pains: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');

            var _params2 = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]().set('q', keyword);

            console.log('params: ', _params2);
            var httpOptions = {
              params: _params2,
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.searchOthersPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (results) {
              console.log('Search pains: ', results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err, caught) {
              console.log('Search pains error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }]);

      return SignsSymptomsApiService;
    }();

    SignsSymptomsApiService.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]
      }, {
        type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__["HTTP"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["Platform"]
      }];
    };

    SignsSymptomsApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"], _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__["HTTP"], _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["Platform"]])], SignsSymptomsApiService);
    /***/
  }
}]);
//# sourceMappingURL=signs-and-symptoms-signs-and-symptoms-module-es5.js.map