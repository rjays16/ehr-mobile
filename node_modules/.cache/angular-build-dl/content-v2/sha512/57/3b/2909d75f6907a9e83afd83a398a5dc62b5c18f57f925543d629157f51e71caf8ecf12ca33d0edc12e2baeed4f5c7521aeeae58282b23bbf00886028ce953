(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["soap-soap-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/soap/soap.page.html":
/*!*********************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/soap/soap.page.html ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<app-headerbar title=\"{{selectedTab}}\"></app-headerbar>\r\n<ion-content>\r\n  <ion-refresher slot=\"fixed\" pullFactor=\"0.5\" pullMin=\"100\" pullMax=\"200\" (ionRefresh)=\"doRefreshSoap($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n  <div class=\"testServer\" *ngIf=\"loginService.inTestServer\">\r\n    TEST SERVER CONNECTED\r\n  </div>\r\n  <ion-slides #slides (ionSlideDidChange)=\"onSlideChange($event)\" [options]=\"options\">\r\n    <!-- Subjective Tab -->\r\n    <ion-slide class=\"slideSection\" *ngIf=\"subjectiveView\"> \r\n      <div class=\"wrapper\">\r\n        <form #subjective=\"ngForm\" (ngSubmit)=\"saveSubjective(subjective)\">\r\n          <div class=\"complaintSection\">\r\n            <ion-label class=\"textLabel\" [color]=\"subjectivePageExceedMax || subjectivePageIsEmpty ? 'danger':'dark'\">Chief Complaint * <app-modified-b-toast [modifiedBy]=\"subjective_modified.modified_by\" [modifiedDate]=\"subjective_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n            <div class=\"tagInputSection\">\r\n              <tag-input\r\n                [required]=\"!other_complaint\"\r\n                [disable]=\"!subjectiveSave || !subjective_allowEdit\"\r\n                class=\"smallTextarea\"\r\n                placeholder=\"\"\r\n                [theme]=\"'tag-input-theme'\"\r\n                secondaryPlaceholder=\"\"\r\n                [(ngModel)]=\"chief_complaint\"\r\n                name=\"chief-chief_complaint\"\r\n                theme=\"bootstrap\"\r\n                modelAsStrings=true\r\n                clearOnBlur=true\r\n                (onTextChange)=\"validateChiefComplaint($event)\"\r\n                (onAdd)=\"validateChiefComplaintOther()\"\r\n                (onBlur)=\"validateChiefComplaintOther()\"\r\n                (onRemove)=\"validateChiefComplaintOther()\"\r\n                [onlyFromAutocomplete]=\"true\">\r\n                  <tag-input-dropdown\r\n                    [showDropdownIfEmpty]=\"true\"\r\n                    [autocompleteItems]=\"chiefcomp\"\r\n                    identifyBy=\"name\"\r\n                    displayBy=\"name\">\r\n                  </tag-input-dropdown>\r\n              </tag-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"complaintSection\">\r\n            <ion-label class=\"textLabel\" [color]=\"subjectivePageExceedMax || subjectivePageIsEmpty ? 'danger':'dark'\">Other Complaint</ion-label>\r\n            <ion-textarea [required]=\"!chief_complaint\" (ionChange)=\"validateChiefComplaintOther()\" rows=\"8\" [disabled]=\"!subjectiveSave || !subjective_allowEdit\" class=\"bigTextarea\" placeholder=\"Other Chief Complaint\" [(ngModel)]=\"other_complaint\" name=\"other-complaint\"></ion-textarea>\r\n          </div>\r\n          <div class=\"ion-padding\">\r\n            <p class=\"warning-message\" *ngIf=\"subjectivePageExceedMax\">You have reached the character limit.</p>\r\n            <p class=\"warning-message\" *ngIf=\"subjectivePageIsEmpty\">Chief complaint is required.</p>\r\n            <ion-button type=\"submit\" expand=\"block\" [hidden]=\"!subjective_allowEdit\" [disabled]=\" !subjectiveSave || subjectivePageExceedMax || subjectivePageIsEmpty\"><ion-icon name=\"paper-plane\"></ion-icon> Save</ion-button>\r\n            <ion-button type=\"button\" expand=\"block\" (click)=\"subjective_allowEdit = !subjective_allowEdit\" [hidden]=\"subjective_allowEdit\" [disabled]=\"subjective.invalid || !subjectiveSave  || other_complaint.length > 2000\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ion-slide>\r\n\r\n    <!-- Objective Tab -->\r\n    <ion-slide class=\"slideSection\" *ngIf=\"objectiveView\">\r\n      <div class=\"wrapper\">\r\n        <div class=\"complaintSection\">\r\n          <ion-label class=\"textLabel\" [color]=\"(pertinent_physical_exam && pertinent_physical_exam.length > 2000) ? 'danger':'dark'\">Pertinent Physical Examination <app-modified-b-toast [modifiedBy]=\"objective_modified.modified_by\" [modifiedDate]=\"objective_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n          <ion-textarea rows=\"8\" [disabled]=\"!objectiveSave || !objective_allowEdit\" class=\"bigTextarea\" placeholder=\"Enter your text here . . .\" [(ngModel)]=\"pertinent_physical_exam\"></ion-textarea>\r\n          <p class=\"warning-message\" *ngIf=\"(pertinent_physical_exam && pertinent_physical_exam.length > 2000)\">You have reached the character limit.</p>\r\n        </div>\r\n        <div class=\"ion-padding\">\r\n          <ion-button expand=\"block\" (click)=\"saveObjective()\" [hidden]=\"!objective_allowEdit\" [disabled]=\"!objectiveSave || !objective_allowEdit  || (pertinent_physical_exam.length > 2000)\"><ion-icon name=\"paper-plane\"></ion-icon> Save</ion-button>\r\n          <ion-button type=\"button\" expand=\"block\" (click)=\"objective_allowEdit = !objective_allowEdit\" [hidden]=\"objective_allowEdit\" [disabled]=\"!objectiveSave  || (pertinent_physical_exam && pertinent_physical_exam.length > 2000)\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n        </div>\r\n      </div>\r\n    </ion-slide>\r\n\r\n    <!-- Assessment Tab -->\r\n    <ion-slide class=\"slideSection\" *ngIf=\"assessmentView\">\r\n      <div class=\"wrapper\">\r\n        <form #assessmentImpression=\"ngForm\" (ngSubmit)=\"saveClinicalImpression()\">\r\n          <div class=\"complaintSection\" *ngIf=\"impressionView\">\r\n            <ion-label class=\"textLabel\"  [color]=\"(clinical_impression && clinical_impression.length > 2000) ? 'danger':'dark'\">Clinical Impression <app-modified-b-toast [modifiedBy]=\"clinical_modified.modified_by\" [modifiedDate]=\"clinical_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n            <ion-textarea rows=\"5\" [disabled]=\"!impressionSave || !clinical_allowEdit\" class=\"mediumTextarea\" placeholder=\"All Diagnosis\" [(ngModel)]=\"clinical_impression\" name=\"clinical-impression\"></ion-textarea>\r\n            <p class=\"warning-message\" *ngIf=\"(clinical_impression && clinical_impression.length > 2000)\">You have reached the character limit.</p>\r\n            <div class=\"ion-padding\">\r\n              <ion-button expand=\"block\" type=\"submit\" [hidden]=\"!clinical_allowEdit\" [disabled]=\"(!impressionSave || !clinical_allowEdit  || (clinical_impression && clinical_impression.length > 2000)) || assessmentImpression.invalid\"><ion-icon name=\"paper-plane\"></ion-icon> Save </ion-button>\r\n              <ion-button type=\"button\" expand=\"block\" (click)=\"clinical_allowEdit = !clinical_allowEdit\" [hidden]=\"clinical_allowEdit\" [disabled]=\"!impressionSave || (clinical_impression && clinical_impression.length > 2000)\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      \r\n        <div class=\"complaintSection\" *ngIf=\"icdView\">\r\n          <ion-label class=\"textLabel\">ICD Code <app-modified-b-toast [modifiedBy]=\"icd_modified.modified_by\" [modifiedDate]=\"icd_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n          <ion-item>\r\n            <ionic-selectable\r\n              [(ngModel)]=\"icd_code\"\r\n              [items]=\"icd_list\"\r\n              itemValueField=\"id\"\r\n              itemTextField=\"text\"\r\n              [canSearch]=\"true\"\r\n              placeholder=\"Search ICD\"\r\n              class=\"normalTextarea\"\r\n              (onSearch)=\"searchIcd($event)\"\r\n              isOnSearchEnabled=\"true\">\r\n            </ionic-selectable>\r\n          </ion-item>\r\n          <div class=\"ion-padding\">\r\n            <ion-button expand=\"block\" [disabled]=\"!this.icd_code || !this.icdSave\" (click)=\"addICD()\">Add ICD</ion-button>\r\n          </div>\r\n          <p class=\"paginationText\">Displaying {{icds.length}} of {{icds.length}} results</p>\r\n          <ion-list class=\"icdList\">\r\n            <ion-item-sliding *ngFor=\"let icd of icds\" [disabled]=\"!icdRemove\">\r\n              <ion-item>\r\n                <ion-grid>\r\n                  <ion-row class=\"icdCont\">\r\n                    <ion-col size=\"3\" class=\"icd_code\">{{icd.icd_code}}</ion-col>\r\n                    <ion-col size=\"9\">\r\n                      <span class=\"icd_desc\">{{icd.alt_diagnosis}}</span>\r\n                      <p class=\"icd_date\">{{icd.modify_dt}}</p>\r\n                    </ion-col>\r\n                  </ion-row>\r\n                </ion-grid>\r\n              </ion-item>\r\n              <ion-item-options side=\"end\">\r\n                <ion-item-option (click)=\"removeICD(icd.id)\"><ion-icon ios=\"ios-trash\" md=\"md-trash\"></ion-icon></ion-item-option>\r\n              </ion-item-options>\r\n            </ion-item-sliding>\r\n          </ion-list>\r\n        </div>\r\n        <form [formGroup]=\"formAssDiag\">\r\n          <div class=\"complaintSection\" *ngIf=\"assessmentView\">\r\n            <ion-label class=\"textLabel\" [color]=\"formAssDiag.get('final_diagnosis')?.valid ? 'dark':'danger'\">Final Diagnosis *</ion-label>\r\n            <div class=\"right\" [hidden]=\"!diagnsosisTrailView\">\r\n              Audit Trail<ion-icon ios=\"ios-albums\" md=\"md-albums\"  (click)=\"showAuditTrail()\"></ion-icon>\r\n            </div>\r\n            <ion-textarea  required  rows=\"8\" [disabled]=\"!diagnsosisSave || !diagnosis_allowEdit\" class=\"bigTextarea\" placeholder=\"Enter your text here . . .\" formControlName=\"final_diagnosis\"  [value]=\"final_diagnosis\" name=\"final_diagnosis\"></ion-textarea>\r\n            <p class=\"warning-message\" *ngIf=\"formAssDiag.get('final_diagnosis')?.hasError('maxlength')\">You have reached the character limit.</p>\r\n            <p class=\"warning-message\" *ngIf=\"formAssDiag.get('final_diagnosis')?.hasError('required')\">Final diagnosis is required.</p>\r\n          </div>\r\n          <div class=\"complaintSection\" *ngIf=\"assessmentView\">\r\n            <ion-label class=\"textLabel\" [color]=\"formAssDiag.get('other_diagnosis')?.valid ? 'dark':'danger'\">Other Diagnosis</ion-label>\r\n            <ion-textarea rows=\"8\" [disabled]=\"!diagnsosisSave || !diagnosis_allowEdit\" class=\"bigTextarea\" placeholder=\"Enter your text here . . .\" formControlName=\"other_diagnosis\" [value]=\"other_diagnosis\" name=\"other_diagnosis\"></ion-textarea>\r\n            <p class=\"warning-message\" *ngIf=\"formAssDiag.get('other_diagnosis')?.hasError('maxlength')\">You have reached the character limit.</p>\r\n          </div>\r\n          <div class=\"ion-padding\">\r\n            <ion-button expand=\"block\" (click)=\"saveDiagnosis()\" [hidden]=\"!diagnosis_allowEdit\" [disabled]=\"formAssDiag.invalid || !diagnsosisSave || !diagnosis_allowEdit\"><ion-icon name=\"paper-plane\"></ion-icon> Save Diagnosis</ion-button>\r\n            <ion-button type=\"button\" expand=\"block\" (click)=\"diagnosis_allowEdit = !diagnosis_allowEdit\" [hidden]=\"diagnosis_allowEdit\" [disabled]=\"!diagnsosisSave\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ion-slide>\r\n\r\n    <!-- Plan Tab -->\r\n    <ion-slide class=\"slideSection\" *ngIf=\"planView\">\r\n      <div class=\"wrapper\">\r\n        <div class=\"complaintSection\">\r\n          <ion-label class=\"textLabel\"  [color]=\"(clinical_summary && clinical_summary.length > 2000) ? 'danger':'dark'\">Progress Notes/Clinical Summary <app-modified-b-toast [modifiedBy]=\"plan_modified.modified_by\" [modifiedDate]=\"plan_modified.modified_dt\"></app-modified-b-toast></ion-label>\r\n          <ion-textarea rows=\"8\" [disabled]=\"!planSave || !plan_allowEdit\" class=\"bigTextarea\" placeholder=\"Enter your text here . . .\" [(ngModel)]=\"clinical_summary\"></ion-textarea>\r\n          <p class=\"warning-message\" *ngIf=\"(clinical_summary && clinical_summary.length > 2000)\">You have reached the character limit.</p>\r\n        </div>\r\n        <div class=\"ion-padding\">\r\n          <ion-button expand=\"block\" (click)=\"saveClinicalSummary()\" [hidden]=\"!plan_allowEdit\" [disabled]=\"!planSave || !plan_allowEdit || clinical_summary.length > 2000\"><ion-icon name=\"paper-plane\"></ion-icon> Save</ion-button>\r\n          <ion-button type=\"button\" expand=\"block\" (click)=\"plan_allowEdit = !plan_allowEdit\" [hidden]=\"plan_allowEdit\" [disabled]=\"!planSave || (clinical_summary && clinical_summary.length > 2000)\"><ion-icon name=\"create\"></ion-icon> Edit</ion-button>\r\n        </div>\r\n      </div>\r\n    </ion-slide>\r\n  </ion-slides>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-segment [(ngModel)]=\"selectedTab\" (ionChange)=\"onSegmentChange($event)\" scrollable>\r\n      <ion-segment-button id=\"Subjective\" value=\"Subjective\" style=\"text-transform: none;\" *ngIf=\"subjectiveView\">\r\n        <p>Subjective</p>\r\n      </ion-segment-button>\r\n      <ion-segment-button id=\"Objective\" value=\"Objective\" style=\"text-transform: none;\" *ngIf=\"objectiveView\">\r\n        <p>Objective</p>\r\n      </ion-segment-button>\r\n      <ion-segment-button id=\"Assessment\" value=\"Assessment\" style=\"text-transform: none;\" *ngIf=\"assessmentView\">\r\n        <p>Assessment</p>\r\n      </ion-segment-button>\r\n      <ion-segment-button id=\"Plan\" value=\"Plan\" style=\"text-transform: none;\" *ngIf=\"planView\">\r\n        <p>Plan</p>\r\n      </ion-segment-button>\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n");

/***/ }),

/***/ "./src/app/pages/soap/soap.module.ts":
/*!*******************************************!*\
  !*** ./src/app/pages/soap/soap.module.ts ***!
  \*******************************************/
/*! exports provided: SoapPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SoapPageModule", function() { return SoapPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _soap_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./soap.page */ "./src/app/pages/soap/soap.page.ts");
/* harmony import */ var _components_components_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../components/components.module */ "./src/app/components/components.module.ts");
/* harmony import */ var ngx_chips__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-chips */ "./node_modules/ngx-chips/fesm2015/ngx-chips.js");
/* harmony import */ var ionic_selectable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ionic-selectable */ "./node_modules/ionic-selectable/esm2015/ionic-selectable.min.js");










const routes = [
    {
        path: '',
        component: _soap_page__WEBPACK_IMPORTED_MODULE_6__["SoapPage"]
    },
    {
        path: '',
        children: [
            {
                path: 'audit-trail',
                loadChildren: '../audit-trail/audit-trail.module#AuditTrailPageModule'
            }
        ]
    }
];
let SoapPageModule = class SoapPageModule {
};
SoapPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes),
            ngx_chips__WEBPACK_IMPORTED_MODULE_8__["TagInputModule"],
            _components_components_module__WEBPACK_IMPORTED_MODULE_7__["ComponentsModule"],
            ionic_selectable__WEBPACK_IMPORTED_MODULE_9__["IonicSelectableModule"]
        ],
        declarations: [_soap_page__WEBPACK_IMPORTED_MODULE_6__["SoapPage"]]
    })
], SoapPageModule);



/***/ }),

/***/ "./src/app/pages/soap/soap.page.scss":
/*!*******************************************!*\
  !*** ./src/app/pages/soap/soap.page.scss ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-title {\n  text-align: center;\n  color: #0096c6;\n  font-size: 2.3vh;\n  margin-right: 15vw;\n}\n\nion-refresher {\n  z-index: 1;\n}\n\nion-refresher-content {\n  background-color: transparent;\n}\n\n::-webkit-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::-moz-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::-ms-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #c8c8c8;\n  font-style: italic;\n}\n\n.headerIcons {\n  top: 2.2vh;\n  right: 2.5vw;\n  position: fixed;\n  font-size: 2.8vh;\n}\n\n.headerIcons ion-icon {\n  margin: 0.6vw;\n}\n\nion-content {\n  background: #f9f9f9;\n  --ion-background-color: #f9f9f9;\n}\n\nion-content .slideSection {\n  min-height: 90vh;\n  display: block;\n}\n\nion-content .wrapper {\n  margin-top: 20px;\n  padding: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 20px;\n  text-align: left;\n}\n\nion-content .wrapper .paginationText {\n  font-style: italic;\n  font-size: small;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\nion-content .wrapper ion-list {\n  margin-bottom: 2vh;\n  margin-left: -5%;\n  margin-right: -5%;\n}\n\nion-content .wrapper ion-list ion-item-sliding {\n  --background: white;\n  background: white;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item {\n  color: #777777;\n  border-left: solid 1vw #0096c6;\n  height: 10vh;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item ion-grid {\n  height: 10vh;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item ion-grid .icdCont .icd_code {\n  font-size: 3vh;\n  font-weight: 600;\n  padding-top: 3vh;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item ion-grid .icdCont ion-col .icd_desc {\n  font-size: small;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item ion-grid .icdCont ion-col .icd_date {\n  margin-top: unset;\n  font-size: xx-small;\n}\n\nion-content .wrapper ion-list ion-item-sliding ion-item-options ion-item-option {\n  --background: #ff4d4d;\n}\n\nion-content .wrapper .complaintSection {\n  margin-bottom: 2vh;\n}\n\nion-content .wrapper .complaintSection .tagInputSection {\n  margin-top: 1vh;\n  border-radius: 10px;\n  border: none;\n  padding: 10px !important;\n  background: white;\n}\n\nion-content .wrapper .complaintSection .tagInputSection .smallTextarea {\n  width: 100%;\n  border: none;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\nion-content .wrapper .complaintSection .normalTextarea {\n  height: 5vh;\n  width: 100%;\n  border: none;\n  margin-top: 1.5vh;\n  --background: #ffffff;\n}\n\nion-content .wrapper .complaintSection .smallTextarea {\n  width: 100%;\n  border: none;\n  margin-top: 1.5vh;\n  margin-bottom: 5vh;\n}\n\nion-content .wrapper .complaintSection .mediumTextarea {\n  background: white;\n  width: 100%;\n  border: none;\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 1.5vh;\n}\n\nion-content .wrapper .complaintSection .bigTextarea {\n  background: white;\n  padding: 10px;\n  width: 100%;\n  border: none;\n  border-radius: 10px;\n  margin-top: 1.5vh;\n}\n\nion-content .wrapper .complaintSection .redLabel {\n  color: #ff5757;\n  font-weight: bold;\n}\n\nion-content .wrapper .complaintSection .right {\n  float: right;\n}\n\nion-content .wrapper .complaintSection .right ion-button {\n  margin-right: 0px !important;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important;\n  margin-left: 5px !important;\n  height: 25px;\n  width: 50px;\n  padding: 0px !important;\n}\n\nion-content .wrapper .complaintSection .right ion-icon {\n  background-color: #0096c6;\n  border-radius: 25%;\n  color: white;\n}\n\nion-content .wrapper .ion-padding ion-button {\n  height: 48px;\n  margin-top: 10px;\n}\n\nion-segment ion-segment-button {\n  max-width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/pages/soap/soap.page.ts":
/*!*****************************************!*\
  !*** ./src/app/pages/soap/soap.page.ts ***!
  \*****************************************/
/*! exports provided: SoapPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SoapPage", function() { return SoapPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _services_soap_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../services/soap-api.service */ "./src/app/services/soap-api.service.ts");
/* harmony import */ var _services_patient_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../services/patient.service */ "./src/app/services/patient.service.ts");
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../services/api.service */ "./src/app/services/api.service.ts");
/* harmony import */ var _services_login_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../services/login.service */ "./src/app/services/login.service.ts");
/* harmony import */ var _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../services/string-utils.service */ "./src/app/services/string-utils.service.ts");
/* harmony import */ var _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../services/permission-validator.service */ "./src/app/services/permission-validator.service.ts");
/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../services/loading.service */ "./src/app/services/loading.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../pages/prompt-modal/prompt-modal.page */ "./src/app/pages/prompt-modal/prompt-modal.page.ts");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/app/services/alert-service.service */ "./src/app/app/services/alert-service.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
















let SoapPage = class SoapPage {
    constructor(events, patientService, apiService, loginService, soapApi, menuService, loadingService, permissionValidatorService, stringUtilsService, router, alertServ, menuController, formBuilder, modalController) {
        this.events = events;
        this.patientService = patientService;
        this.apiService = apiService;
        this.loginService = loginService;
        this.soapApi = soapApi;
        this.menuService = menuService;
        this.loadingService = loadingService;
        this.permissionValidatorService = permissionValidatorService;
        this.stringUtilsService = stringUtilsService;
        this.router = router;
        this.alertServ = alertServ;
        this.menuController = menuController;
        this.formBuilder = formBuilder;
        this.modalController = modalController;
        this.selectedTab = 'Subjective';
        this.subjective_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.subjectivePageIsEmpty = false;
        this.subjectivePageExceedMax = false;
        this.subjectiveDataWhole = '';
        this.subjective_allowEdit = true;
        this.objective_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.objective_allowEdit = true;
        this.plan_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.plan_allowEdit = true;
        this.clinical_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.clinical_allowEdit = true;
        this.icd_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.icd_allowEdit = true;
        this.diagnosis_allowEdit = true;
        this.chief_complaint = [];
        this.other_complaint = '';
        this.pertinent_physical_exam = '';
        this.clinical_impression = '';
        this.icd_code = null;
        this.icds = [];
        this.final_diagnosis = '';
        this.other_diagnosis = '';
        this.clinical_summary = '';
        this.icd_list = [];
        this.timeout = null;
        this.tabs = [
            'Subjective',
            'Objective',
            'Assessment',
            'Plan'
        ];
        this.options = {
            noSwiping: true,
            noSwipingClass: 'icdList',
            autoHeight: true
        };
        this.subjectiveView = true;
        this.subjectiveSave = true;
        this.objectiveView = true;
        this.objectiveSave = true;
        this.assessmentView = true;
        this.impressionView = true;
        this.impressionSave = true;
        this.icdView = true;
        this.icdSave = true;
        this.icdRemove = true;
        this.diagnsosisView = true;
        this.diagnsosisSave = true;
        this.diagnsosisTrailView = true;
        this.planView = true;
        this.planSave = true;
        this.SAVE_SUBJECTIVE = 1;
        this.SAVE_OBJECTIVE = 2;
        this.SAVE_CLINICAL_IMPRESSION = 3;
        this.ADD_ICD = 4;
        this.REMOVE_ICD = 5;
        this.SAVE_ASSESSTMENT = 6;
        this.SAVE_PLAN = 7;
        // tslint:disable-next-line: max-line-length
        this.config = this.loginService.getConfigAndDefaults().soap;
        this.chiefcomp = this.config['m-patient-soap-subjective']['default-options'].subjective.chiefcomp;
        this.selectedEncounterNo = this.patientService.getSelectedEncounterNo();
        this.authentication = this.loginService.getAuthentication();
        this.soapApi.setUrl(this.apiService.getUrl());
        this.soapApi.setToken(this.authentication.token);
    }
    initUserInterfaceByRole() {
        console.log('this.permissionValidatorService.hasSoapEdit()', this.permissionValidatorService.hasSoapEdit());
        console.log('this.permissionValidatorService.hasSoapView()', this.permissionValidatorService.hasSoapView());
        this.subjectiveSave = this.permissionValidatorService.hasSoapEdit();
        this.objectiveSave = this.permissionValidatorService.hasSoapEdit();
        this.icdSave = this.permissionValidatorService.hasSoapEdit();
        this.icdRemove = this.permissionValidatorService.hasSoapEdit();
        this.diagnsosisSave = this.permissionValidatorService.hasSoapDiagEdit() || this.subjectiveSave;
        // tslint:disable-next-line: max-line-length
        // this.diagnsosisTrailView = this.permissionValidatorService.hasSoapView();
        this.planSave = this.permissionValidatorService.hasSoapEdit();
        // this.subjectiveView = this.permissionValidatorService.hasSoapView() || this.subjectiveSave ;
        // if (!this.subjectiveView) {
        //   const i = this.tabs.indexOf('Subjective');
        //   if (i >= 0) { this.tabs.splice(i, 1); }
        // }
        // this.objectiveView = this.permissionValidatorService.hasSoapView() || this.objectiveSave;
        // if (!this.objectiveView) {
        //   const i = this.tabs.indexOf('Objective');
        //   if (i >= 0) { this.tabs.splice(i, 1); }
        // }
        // this.impressionView = this.permissionValidatorService.hasSoapView();
        // this.icdView = this.permissionValidatorService.hasSoapView();
        // this.diagnsosisView = this.permissionValidatorService.hasSoapView();
        // // tslint:disable-next-line: max-line-length
        // this.diagnsosisTrailView = this.permissionValidatorService.hasSoapView();
        // // tslint:disable-next-line: max-line-length
        // this.assessmentView = this.permissionValidatorService.hasSoapView() || this.diagnsosisSave;
        // if (!this.assessmentView) {
        //   const i = this.tabs.indexOf('Assessment');
        //   if (i >= 0) { this.tabs.splice(i, 1); }
        // }
        // this.planView = this.permissionValidatorService.hasSoapView();
        // if (!this.planView) {
        //   const i = this.tabs.indexOf('Plan');
        //   if (i >= 0) { this.tabs.splice(i, 1); }
        // }
        if (this.tabs.length > 0) {
            this.selectedTab = this.tabs[0];
        }
        const selectedPatient = this.patientService.getSelectedPatientBriefInformation();
        // tslint:disable-next-line: max-line-length
        const patientImpressionSave = this.permissionValidatorService.hasSoapEdit() && !(selectedPatient.current_dept_encounter.deptenc_code === 'ipe' || selectedPatient.current_dept_encounter.deptenc_code === 'IPD');
        // tslint:disable-next-line: max-line-length
        // const roleImpressionSave = this.permissionValidatorService.validateRole(this.config['m-patient-soap-assessment']['impression-save']);
        this.impressionSave = patientImpressionSave;
    }
    getPatientSoapData() {
        return new Promise((resolve, reject) => {
            this.loadingService.present();
            this.soapApi.getPatientSoapData(this.selectedEncounterNo).subscribe(response => {
                this.loadingService.dismiss().then(_ => {
                    try {
                        this.initializeSoapData(response);
                        resolve(response);
                    }
                    catch (err) {
                        this.alertServ.openAlertModal('fail', 'Failed', 'Cannot parse SOAP values!', 'Ok');
                        reject(err);
                    }
                });
            }, err => {
                console.log(err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                    reject(err);
                });
            });
        });
    }
    getPatientSoapOptions() {
        return new Promise((resolve, reject) => {
            if (this.chiefcomp.length > 0) {
                console.log('Use Subjective previous options......');
                resolve(this.chiefcomp);
            }
            else {
                this.loadingService.present();
                this.soapApi.getPatientSoapOptions().subscribe(response => {
                    this.loadingService.dismiss().then(_ => {
                        try {
                            resolve(response);
                        }
                        catch (err) {
                            this.alertServ.openAlertModal('fail', 'Failed', 'Cannot parse SOAP options!', 'Ok');
                            reject(err);
                        }
                    });
                }, err => {
                    console.log(err);
                    this.loadingService.dismiss().then(_ => {
                        const message = this.stringUtilsService.parseErrorMessage(err);
                        this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                        reject(err);
                    });
                });
            }
        });
    }
    validateAssessmentDiagnosis() {
        // (ionChange)="validateChiefComplaintOther()"
    }
    validateSubjective(cheifComplaintText = '') {
        this.subjectivePageIsEmpty = false;
        this.subjectivePageExceedMax = false;
        this.subjectiveDataWhole = cheifComplaintText;
        console.error('validateSubjective() this.subjectiveDataWhole', this.subjectiveDataWhole);
        if (this.subjectiveDataWhole.length - 3 > 2000) { // traps on 1997 since on CF4 it add ' - ' in between others and cheifcomplaint
            this.subjectivePageExceedMax = true;
        }
        else if (this.subjectiveDataWhole.length - 3 <= 0) {
            this.subjectivePageIsEmpty = true;
        }
    }
    validateChiefComplaint(value) {
        console.error('trigger chiefcomplaint change event validateChiefComplaint(value)');
        this.validateSubjective((this.getChiefCompListAsText(value + ' - ' + this.other_complaint.replace(/^\s+|\s+$/g, ''))));
    }
    validateChiefComplaintOther() {
        console.error('trigger other chiefcomplaint change event validateChiefComplaintOther()');
        this.validateSubjective((this.getChiefCompListAsText(' - ' + this.other_complaint.replace(/^\s+|\s+$/g, ''))));
    }
    getChiefCompListAsText(currentText = '') {
        this.chief_complaint.forEach((element) => {
            currentText = currentText + (currentText.length === 0 ? element : ', ' + element);
        });
        return currentText;
    }
    ngOnInit() {
        this.formAssDiag = this.formBuilder.group({
            final_diagnosis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_14__["Validators"].compose([
                    _angular_forms__WEBPACK_IMPORTED_MODULE_14__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_14__["Validators"].maxLength(2000)
                ])],
            other_diagnosis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_14__["Validators"].compose([
                    _angular_forms__WEBPACK_IMPORTED_MODULE_14__["Validators"].maxLength(2000)
                ])],
        });
        this.menuController.swipeGesture(true, 'mainMenu');
        this.menuController.swipeGesture(false, 'accountMenu');
        this.getPatientSoapOptions().then(chiefCompOptions => {
            this.config['m-patient-soap-subjective']['default-options'].subjective.chiefcomp = chiefCompOptions;
            this.chiefcomp = chiefCompOptions;
            this.initUserInterfaceByRole();
            this.getPatientSoapData();
        });
    }
    doRefreshSoap(event) {
        this.getPatientSoapData().then(_ => {
            event.target.complete();
        }).catch(_ => {
            event.target.complete();
        });
    }
    ionViewWillEnter() {
        console.log('ionViewWillEnter');
        const tempSelectedEncounterNo = this.patientService.getSelectedEncounterNo();
        if (this.selectedEncounterNo !== tempSelectedEncounterNo) {
            console.log('selected patient changed');
            this.selectedEncounterNo = tempSelectedEncounterNo;
            this.initUserInterfaceByRole();
            this.getPatientSoapData();
        }
        this.menuService.initMenuByConfig(this.patientService.getSelectedPatientBriefInformation());
        window.addEventListener('native.keyboardshow', this.keyboardShowHandler);
        window.addEventListener('native.keyboardhide', this.keyboardHideHandler);
    }
    ionViewWillLeave() {
        console.log('ionViewWillLeave');
        window.removeEventListener('native.keyboardshow', this.keyboardShowHandler);
        window.removeEventListener('native.keyboardhide', this.keyboardHideHandler);
        this.removeIonAppStyles();
    }
    resetData() {
        this.subjective_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.subjectivePageIsEmpty = false;
        this.subjectivePageExceedMax = false;
        this.subjective_allowEdit = true;
        this.objective_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.objective_allowEdit = true;
        this.plan_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.plan_allowEdit = true;
        this.clinical_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.clinical_allowEdit = true;
        this.icd_modified = {
            modified_by: null,
            modified_dt: null
        };
        this.icd_allowEdit = true;
        this.diagnosis_allowEdit = true;
        this.chief_complaint = [];
        this.other_complaint = '';
        this.pertinent_physical_exam = '';
        this.clinical_impression = '';
        this.icd_code = null;
        this.icds = [];
        this.final_diagnosis = '';
        this.other_diagnosis = '';
        this.clinical_summary = '';
    }
    initializeSoapData(data) {
        this.resetData();
        if (data.subjective) {
            this.chief_complaint = data.subjective.ids;
            if (data.subjective.others) {
                this.other_complaint = data.subjective.others.value ? data.subjective.others.value : '';
            }
            this.subjective_modified.modified_by = data.subjective.modified_by;
            this.subjective_modified.modified_dt = data.subjective.modified_dt;
            this.subjective_allowEdit = (this.other_complaint.length || this.chief_complaint.length) ? false : true;
            this.validateChiefComplaintOther();
        }
        if (data.objective) {
            this.pertinent_physical_exam = data.objective.value ? data.objective.value : '';
            this.objective_modified.modified_by = data.objective.modified_by;
            this.objective_modified.modified_dt = data.objective.modified_dt;
            this.objective_allowEdit = this.pertinent_physical_exam && this.pertinent_physical_exam.length ? false : true;
        }
        if (data.clinical_imp) {
            this.clinical_impression = data.clinical_imp.clinical_imp ? data.clinical_imp.clinical_imp : '';
            this.icds = data.clinical_imp.icds.filter(function (element, index, array) {
                return element.is_deleted == 0;
            });
            this.clinical_modified.modified_by = data.clinical_imp.admitting_diag_modified_by;
            this.clinical_modified.modified_dt = data.clinical_imp.admitting_diag_modified_dt;
            this.clinical_allowEdit = this.clinical_impression && this.clinical_impression.length ? false : true;
            this.icd_modified.modified_by = data.clinical_imp.icdEncoded.name_en;
            this.icd_modified.modified_dt = data.clinical_imp.icdEncoded.date_en;
            this.icd_allowEdit = this.icds.length ? false : true;
        }
        if (data.final_diag) {
            this.final_diagnosis = data.final_diag.value ? data.final_diag.value : '';
            this.formAssDiag.get('final_diagnosis').setValue(this.final_diagnosis);
        }
        if (data.other_diag) {
            this.other_diagnosis = data.other_diag.value ? data.other_diag.value : '';
            this.formAssDiag.get('other_diagnosis').setValue(this.other_diagnosis);
        }
        this.diagnosis_allowEdit = (this.other_diagnosis.length || this.final_diagnosis.length) ? false : true;
        if (data.plan) {
            this.clinical_summary = data.plan.value ? data.plan.value : '';
            this.plan_modified.modified_by = data.plan.modified_by;
            this.plan_modified.modified_dt = data.plan.modified_dt;
            this.plan_allowEdit = this.clinical_summary && this.clinical_summary.length ? false : true;
        }
    }
    saveSubjective(event) {
        console.log(event);
        if (this.chief_complaint.length === 0 && (this.other_complaint === null || this.other_complaint === '')) {
            this.alertServ.openAlertModal('fail', 'SOAP SUBJECTIVE', 'Complaint is required!');
            return;
        }
        this.openPromptModal(this.SAVE_SUBJECTIVE, {}, 'SOAP SUBJECTIVE', 'Would you like to save your changes?');
    }
    saveSubjectiveFunction() {
        this.loadingService.present();
        this.soapApi.saveSubjective(this.selectedEncounterNo, this.chief_complaint, this.other_complaint).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.subjective_modified.modified_by = response.modified_by;
                    this.subjective_modified.modified_dt = response.modified_dt;
                    this.subjective_allowEdit = false;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                if (err.error.code == this.permissionValidatorService.throwsErrorCode) {
                }
            });
        });
    }
    saveObjective() {
        this.openPromptModal(this.SAVE_OBJECTIVE, {}, 'SOAP OBJECTIVE', 'Would you like to save your changes?');
    }
    saveObjectiveFunction() {
        this.loadingService.present();
        this.soapApi.saveObjective(this.selectedEncounterNo, this.pertinent_physical_exam).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.objective_modified.modified_by = response.modified_by;
                    this.objective_modified.modified_dt = response.modified_dt;
                    this.objective_allowEdit = false;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    saveClinicalImpression() {
        if (!this.clinical_impression) {
            this.alertServ.openAlertModal('fail', 'Failed', 'Clinical Impression must not be empty', 'Ok');
            return;
        }
        this.openPromptModal(this.SAVE_CLINICAL_IMPRESSION, {}, 'SOAP CLINICAL IMPRESSION', 'Would you like to save your changes?');
    }
    saveClinicalImpressionFunction() {
        this.loadingService.present();
        this.soapApi.saveClinicalImpression(this.selectedEncounterNo, this.clinical_impression).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.clinical_modified.modified_by = response.modified_by;
                    this.clinical_modified.modified_dt = response.modified_dt;
                    this.clinical_allowEdit = false;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    searchIcd(event) {
        if (event.text.length > 3) {
            clearTimeout(this.timeout);
            this.timeout = setTimeout(() => {
                console.log('Executing search ...');
                event.component.startSearch();
                this.soapApi.searchIcd(event.text).subscribe((response) => {
                    event.component.items = response;
                    event.component.endSearch();
                }, err => {
                    console.log(err);
                    event.component.endSearch();
                });
            }, 2000);
        }
    }
    addICD() {
        if (!this.icd_code) {
            this.alertServ.openAlertModal('fail', 'Failed', 'Select an ICD!', 'Done');
            return;
        }
        this.openPromptModal(this.ADD_ICD, {}, 'SOAP ICD', 'Would you like to save your changes?');
    }
    addICDFunction() {
        this.loadingService.present();
        this.soapApi.addICD(this.selectedEncounterNo, this.icd_code.id).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.icds = response.clinicalimp_new.icds.filter(function (element, index, array) {
                        return element.is_deleted == 0;
                    });
                    ;
                    this.icd_code = null;
                    this.icd_modified.modified_by = response.encoded.name_en;
                    this.icd_modified.modified_dt = response.encoded.date_en;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    removeICD(id) {
        this.openPromptModal(this.REMOVE_ICD, { id }, 'SOAP ICD', 'Are you sure you want to delete this item?', 'Delete');
    }
    removeICDFunction(id) {
        this.loadingService.present();
        this.soapApi.removeICD(id).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.icds = response.clinicalimp_new.icds.filter(function (element, index, array) {
                        return element.is_deleted == 0;
                    });
                    ;
                    this.icd_modified.modified_by = response.encoded.name_en;
                    this.icd_modified.modified_dt = response.encoded.date_en;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    saveDiagnosis() {
        if (!(this.formAssDiag.get('final_diagnosis').value)) {
            this.alertServ.openAlertModal('fail', 'Failed', 'Diagnosis is required!', 'Ok');
            return;
        }
        this.openPromptModal(this.SAVE_ASSESSTMENT, {}, 'SOAP ASSESSMENT', 'Would you like to save your changes?');
    }
    saveDiagnosisFuction() {
        this.loadingService.present();
        this.soapApi.saveDiagnosis(this.selectedEncounterNo, this.formAssDiag.get('final_diagnosis').value, this.formAssDiag.get('other_diagnosis').value).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.diagnosis_allowEdit = false;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    saveClinicalSummary() {
        this.openPromptModal(this.SAVE_PLAN, {}, 'SOAP PLAN', 'Would you like to save your changes?');
    }
    saveClinicalSummaryFunction() {
        this.loadingService.present();
        this.soapApi.saveClinicalSummary(this.selectedEncounterNo, this.clinical_summary).subscribe((response) => {
            this.loadingService.dismiss().then(_ => {
                if (response && response.code === 200 && response.saved) {
                    this.plan_modified.modified_by = response.modified_by;
                    this.plan_modified.modified_dt = response.modified_dt;
                    this.plan_allowEdit = false;
                    this.alertServ.openAlertModal('success', 'Success', response.message, 'Done');
                }
                else {
                    this.alertServ.openAlertModal('fail', 'Failed', response.message, 'Ok');
                }
            });
        }, err => {
            console.log(err);
            this.loadingService.dismiss().then(_ => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        });
    }
    showAuditTrail() {
        this.router.navigate(['/menu/soap/audit-trail']);
    }
    focusSegment(segmentId) {
        document.getElementById(segmentId).scrollIntoView({
            behavior: 'smooth',
            block: 'start',
            inline: 'start'
        });
    }
    onSegmentChange(event) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const segment = this.tabs.indexOf(this.selectedTab);
            this.focusSegment(event.srcElement.children[segment].id);
            yield this.slider.slideTo(segment);
        });
    }
    onSlideChange(event) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            yield this.slider.getActiveIndex().then(index => {
                this.selectedTab = this.tabs[index];
                if (this.selectedTab === 'Subjective') {
                    this.menuController.swipeGesture(true, 'mainMenu');
                    this.menuController.swipeGesture(false, 'accountMenu');
                }
                else if (this.selectedTab === 'Objective') {
                    this.menuController.swipeGesture(false, 'mainMenu');
                    this.menuController.swipeGesture(false, 'accountMenu');
                }
                else if (this.selectedTab === 'Assessment') {
                    this.menuController.swipeGesture(false, 'mainMenu');
                    this.menuController.swipeGesture(false, 'accountMenu');
                }
                else if (this.selectedTab === 'Plan') {
                    this.menuController.swipeGesture(false, 'mainMenu');
                    this.menuController.swipeGesture(true, 'accountMenu');
                }
            });
        });
    }
    openPromptModal(option, data, title, message, ok = 'Save', cancel = 'Cancel') {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.alertServ.openPromptModal(title, message, ok, (result) => {
                if (result !== null) {
                    console.log('result.data: ', result.data);
                    if (result.data && result.data.button === 'Save') {
                        if (option === this.SAVE_SUBJECTIVE) {
                            this.saveSubjectiveFunction();
                        }
                        else if (option === this.SAVE_OBJECTIVE) {
                            this.saveObjectiveFunction();
                        }
                        else if (option === this.SAVE_CLINICAL_IMPRESSION) {
                            this.saveClinicalImpressionFunction();
                        }
                        else if (option === this.ADD_ICD) {
                            this.addICDFunction();
                        }
                        else if (option === this.SAVE_ASSESSTMENT) {
                            this.saveDiagnosisFuction();
                        }
                        else if (option === this.SAVE_PLAN) {
                            this.saveClinicalSummaryFunction();
                        }
                    }
                    else if (result.data && result.data.button === 'Delete') {
                        if (option === this.REMOVE_ICD) {
                            this.removeICDFunction(data.id);
                        }
                    }
                }
            });
        });
    }
    openAlertModal(alert, title, message, ok = 'Done') {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: _pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_11__["PromptModalPage"],
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    alert,
                    title,
                    message,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                if (result !== null) {
                    console.log('result.data: ', result.data);
                }
            });
            return yield modal.present();
        });
    }
    tapCoordinates(e) {
        this.y = e.touches[0].clientY;
        this.h = window.innerHeight;
        this.offsetY = (this.h - this.y);
        console.log('offset: ', this.offsetY);
    }
    keyboardShowHandler(e) {
        const kH = e.keyboardHeight;
        console.log('show: ', e.keyboardHeight);
        const bodyMove = document.querySelector('ion-app'), bodyMoveStyle = bodyMove.style;
        // Adjust full keyboard height
        bodyMoveStyle.bottom = kH + 'px';
        /*
        if (this.offsetY < kH + 40) {
          bodyMoveStyle.bottom = (kH - this.offsetY + 40) + 'px';
          // bodyMoveStyle.top = 'initial';
        }
        */
        console.log(bodyMoveStyle.bottom);
    }
    keyboardHideHandler() {
        console.log('gone');
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
    removeIonAppStyles() {
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
};
SoapPage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Events"] },
    { type: _services_patient_service__WEBPACK_IMPORTED_MODULE_4__["PatientService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: _services_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"] },
    { type: _services_soap_api_service__WEBPACK_IMPORTED_MODULE_3__["SoapApiService"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_12__["MenuService"] },
    { type: _services_loading_service__WEBPACK_IMPORTED_MODULE_9__["LoadingService"] },
    { type: _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_8__["PermissionValidatorService"] },
    { type: _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__["StringUtilsService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_10__["Router"] },
    { type: src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_13__["AlertServiceService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["MenuController"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_14__["FormBuilder"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('slides', { static: true }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["IonSlides"])
], SoapPage.prototype, "slider", void 0);
SoapPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-soap',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./soap.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/soap/soap.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./soap.page.scss */ "./src/app/pages/soap/soap.page.scss")).default, tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./tag-input-theme.scss */ "./src/app/pages/soap/tag-input-theme.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Events"],
        _services_patient_service__WEBPACK_IMPORTED_MODULE_4__["PatientService"],
        _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"],
        _services_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"],
        _services_soap_api_service__WEBPACK_IMPORTED_MODULE_3__["SoapApiService"],
        src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_12__["MenuService"],
        _services_loading_service__WEBPACK_IMPORTED_MODULE_9__["LoadingService"],
        _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_8__["PermissionValidatorService"],
        _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__["StringUtilsService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_10__["Router"],
        src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_13__["AlertServiceService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["MenuController"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_14__["FormBuilder"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"]])
], SoapPage);



/***/ }),

/***/ "./src/app/pages/soap/tag-input-theme.scss":
/*!*************************************************!*\
  !*** ./src/app/pages/soap/tag-input-theme.scss ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("::ng-deep tag-input .ng2-tag-input.tag-input-theme {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 1px solid var(--ion-color-primary);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme:focus {\n  outline: 0;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--dropping {\n  opacity: 0.7;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--loading {\n  border: none;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme.ng2-tag-input--disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme .ng2-tags-container {\n  flex-wrap: wrap;\n  display: -webkit-box;\n  display: flex;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n  color: #fff;\n  border-radius: 5px;\n  height: auto !important;\n  background: var(--ion-color-primary);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(.readonly):not(.tag--editing):focus {\n  background: var(--ion-color-primary-shade);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(.readonly):not(.tag--editing):active {\n  background: var(--ion-color-primary-shade);\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n  background: var(--ion-color-primary-shade);\n  color: #fff;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.readonly {\n  cursor: default;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.readonly:focus, ::ng-deep tag-input .ng2-tag-input.tag-input-theme tag:focus {\n  outline: 0;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag.tag--editing {\n  cursor: text;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag .tag__text {\n  white-space: normal !important;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon {\n  -webkit-transition: all 0.35s;\n  transition: all 0.35s;\n  text-align: right;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon path {\n  fill: #fff;\n}\n::ng-deep tag-input .ng2-tag-input.tag-input-theme tag delete-icon svg {\n  vertical-align: bottom;\n  height: 34px;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ })

}]);
//# sourceMappingURL=soap-soap-module-es2015.js.map