{"version":3,"sources":["./src/app/services/soap-api.service.ts"],"names":[],"mappings":"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","file":"default~audit-trail-audit-trail-module~soap-soap-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map, catchError, timeout } from 'rxjs/operators';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { PatientSoapData } from '../models/patient-soap-data';\r\nimport { IcdSearch } from '../models/icd-search';\r\nimport { AuditTrail } from '../models/audit-trail';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SoapApiService {\r\n  private url = 'http://localhost:3000';\r\n  private token: string;\r\n  private patientSoapPath = '/api/doctor/patient/soap/data';\r\n  private patientSoapOptionsPath = '/api/doctor/patient/soap/options';\r\n  private saveSubjectivePath = '/api/doctor/patient/soap/subjective/save';\r\n  private saveObjectivePath = '/api/doctor/patient/soap/objective/save';\r\n  private saveClinicalImpressionPath = '/api/doctor/patient/soap/assessment/clinicalimp/save';\r\n  private saveDiagnosisPath = '/api/doctor/patient/soap/assessment/diagnosis/save';\r\n  private saveClinicalSummaryPath = '/api/doctor/patient/soap/plan/save';\r\n  private searchIcdPath = '/api/selectData/GetICDFinalDiagnosisWho';\r\n  private addIcdPath = '/api/doctor/patient/soap/assessment/icd/save';\r\n  private removeIcdPath = '/api/doctor/patient/soap/assessment/icd/delete';\r\n  private getAuditTrailPath = '/api/doctor/patient/soap/assessment/diagnosis/trail';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private http: HTTP,\r\n    private platform: Platform\r\n  ) { }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public getPatientSoapData(encounter_no: string): Observable<PatientSoapData> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        id: encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.patientSoapPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Sopa error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<PatientSoapData>(this.url + this.patientSoapPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: PatientSoapData) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  public getPatientSoapOptions(): Observable<PatientSoapData> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {};\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.patientSoapOptionsPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Sopa error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const httpOptions = {\r\n        // params: new HttpParams(),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<PatientSoapData>(this.url + this.patientSoapOptionsPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: PatientSoapData) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveSubjective(encounter_no: string, chiefComplaint_tag: any, chiefComplaint_others: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        chiefComplaint_others: '',\r\n        chiefComplaint_tag:[]\r\n      };\r\n      \r\n      for (let i = 0; i < chiefComplaint_tag.length; i++) {\r\n        body.chiefComplaint_tag.push(chiefComplaint_tag[i]);\r\n      }\r\n      body.chiefComplaint_others = chiefComplaint_others;\r\n\r\n      console.log('body: ', body);\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.saveSubjectivePath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap Subj: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap Subj error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      for (let i = 0; i < chiefComplaint_tag.length; i++) {\r\n        input.append('chiefComplaint_tag[' + i + ']', chiefComplaint_tag[i]);\r\n      }\r\n      input.append('chiefComplaint_others', chiefComplaint_others);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      console.log(httpOptions);\r\n  \t\t  return this.httpClient.post(this.url + this.saveSubjectivePath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveSubjective API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveObjective(encounter_no: string, objective: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-objective': objective\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveObjectivePath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap Obj: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap Obj error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-objective', objective);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.post(this.url + this.saveObjectivePath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveObjective API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveClinicalImpression(encounter_no: string, impression: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        impression\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveClinicalImpressionPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap clinical: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap clinical error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('impression', impression);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.post(this.url + this.saveClinicalImpressionPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveClinicalImpression API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public searchIcd(keyword: string): Observable<IcdSearch[]> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        q: keyword\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.searchIcdPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('q', keyword),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<IcdSearch[]>(this.url + this.searchIcdPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: IcdSearch[]) => {\r\n          console.log('Entered searchIcd API:', results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public addICD(encounter_no: string, icd_code: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        id: encounter_no,\r\n        icd_code\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.addIcdPath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('id', encounter_no);\r\n      input.append('icd_code', icd_code);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.addIcdPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered addICD API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public removeICD(id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        id,\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.removeIcdPath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('id', id);\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.removeIcdPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered removeICD API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveDiagnosis(encounter_no: string, final_diagnosis: string, other_diagnosis: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-assessment-final': final_diagnosis,\r\n        'text-assessment-other': other_diagnosis\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveDiagnosisPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap diagnostics: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap diagnostics error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-assessment-final', final_diagnosis);\r\n      input.append('text-assessment-other', other_diagnosis);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.saveDiagnosisPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveDiagnosis API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveClinicalSummary(encounter_no: string, clinical_summary: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-assessment-plan': clinical_summary\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveClinicalSummaryPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap clinical summary: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap clinical summary error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-assessment-plan', clinical_summary);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.saveClinicalSummaryPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveClinicalSummary API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public getAuditTrail(encounter_no: string): Observable<AuditTrail[]> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        id: encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getAuditTrailPath + '?id=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap audit trails: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap audit trails error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<AuditTrail[]>(this.url + this.getAuditTrailPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: AuditTrail[]) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}