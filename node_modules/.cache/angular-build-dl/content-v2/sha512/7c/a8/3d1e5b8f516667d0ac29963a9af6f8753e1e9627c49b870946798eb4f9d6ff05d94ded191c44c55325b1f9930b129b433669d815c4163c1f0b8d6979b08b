{"version":3,"sources":["src/app/services/plan-management-api.service.ts","src/app/services/plan-management-data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { map, catchError, timeout, tap} from 'rxjs/operators';\r\nimport { Platform } from '@ionic/angular';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanManagementApiService {\r\n  private url = 'http://localhost:3000';\r\n  private getAllOrdersPath = '/api/doctor/planmanagement/getAllOrders';\r\n  private postFinalizeRequrestOrdersPath = '/api/doctor/planmanagement/finalize/orders';\r\n  private postMedicineSearchPath = '/api/doctor/medicine/search';\r\n  private postPrescriptionSavePath = '/api/doctor/prescription/save';\r\n  private getPrescriptionPrintFilePath = '/api/doctor/patient/prescription/file/path';\r\n  private postCoursewardSavePath = '/api/doctor/courseward/save';\r\n  private postCoursewardDeletePath = '/api/doctor/courseward/delete';\r\n  private postReferralSavePath = '/api/doctor/referral/save';\r\n  private postReferralDeletePath = '/api/doctor/referral/delete';\r\n  private postDiagnosticLaboratorySavePath = '/api/doctor/diagnostic/lab/save';\r\n  private postDiagnosticLaboratoryDeletePath = '/api/doctor/diagnostic/lab/delete';\r\n  private postDiagnosticRadiologySavePath = '/api/doctor/diagnostic/rad/save';\r\n  private postDiagnosticRadiologyDeletePath = '/api/doctor/diagnostic/rad/delete';\r\n  private postRepetitiveDeletePath = '/api/doctor/repetitive/delete';\r\n  private postRepetitiveSavePath = '/api/doctor/repetitive/save';\r\n  private postFinalizedRepetitiveDeletePath = '/api/doctor/finalized/repetitive/delete';\r\n\r\n  private token: string;\r\n  constructor(private platform: Platform,\r\n              private httpClient: HttpClient,\r\n              private http: HTTP) {\r\n\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public finalizeRequestOrders(encounter_no: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postFinalizeRequrestOrdersPath + '?encounterNo=' + encounter_no, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postFinalizeRequrestOrdersPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public getAllOrders(encounter_no: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.getAllOrdersPath + '?encounterNo=' + encounter_no, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.getAllOrdersPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public searchMedicine(query: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postMedicineSearchPath + '?q=' + query, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('q', query);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postMedicineSearchPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public savePrescription(encounter_no: string, prescription_list: any[]): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders: prescription_list\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postPrescriptionSavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders: prescription_list\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postPrescriptionSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveCourseward(courseward: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(courseward).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = courseward[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postCoursewardSavePath + '?encounterNo=' + courseward.encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(courseward).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = courseward[key];\r\n        }\r\n      });\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', courseward.encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postCoursewardSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteCourseward(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postCoursewardDeletePath + '?encounterNo=' + encounter_no + '&orders=' + id, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no)\r\n        .set('orders', id);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postCoursewardDeletePath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveReferral(referral: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(referral).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = referral[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postReferralSavePath + '?encounterNo=' + referral.encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(referral).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = referral[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', referral.encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postReferralSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteReferral(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const body = {\r\n        'data': {\r\n          'id': id\r\n        } \r\n      };\r\n      this.http.setDataSerializer('json');\r\n      console.log('body: ', body);\r\n      return from(this.http.post(this.url + this.postReferralDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postReferralDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveDiagnosticLaboratory(encounter_no: string, orders: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postDiagnosticLaboratorySavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticLaboratorySavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteDiagnosticLaboratory(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postDiagnosticLaboratoryDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticLaboratoryDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveDiagnosticRadiology(encounter_no: string, orders: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postDiagnosticRadiologySavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticRadiologySavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteDiagnosticRadiology(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postDiagnosticRadiologyDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticRadiologyDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public saveRepetitive(encounter_no: string, repetitiveData: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      \r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(repetitiveData).forEach(key => {\r\n        data[key] = repetitiveData[key];\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n\r\n      console.log('body: ', body);\r\n\r\n      this.http.setDataSerializer('json');\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postRepetitiveSavePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(repetitiveData).forEach(key => {\r\n        data[key] = repetitiveData[key];\r\n      });\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postRepetitiveSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteRepetitive(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postRepetitiveDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postRepetitiveDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteFinalizedRepetitive(encounter_no: string, id: string, encounterCourseWardID: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data': id,\r\n        'encounterCourseWardID' : encounterCourseWardID\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postFinalizedRepetitiveDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data', id);\r\n      body.append('encounterCourseWardID', encounterCourseWardID);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postFinalizedRepetitiveDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public getPrescriptionPrintFile(encounter_no: string, prescriptions: any): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params: any = {\r\n        encounter_no,\r\n        is_group: '1',\r\n      };\r\n      Object.keys(prescriptions).forEach(key => {\r\n        params[key] = prescriptions[key];\r\n      });\r\n      console.log('params: ', params);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      console.log('headers: ', headers);\r\n      return from(this.http.get(this.url + this.getPrescriptionPrintFilePath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Prescription Print File: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Prescription Print File error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      let params: HttpParams;\r\n      params = new HttpParams()\r\n        .set('encounterNo', encounter_no)\r\n        .set('is_group', '1');\r\n      Object.keys(prescriptions).forEach(key => {\r\n        params.append(key, prescriptions[key]);\r\n      });\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.get(this.url + this.getPrescriptionPrintFilePath, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Courseward } from '../models/courseward';\r\nimport { Prescription } from '../models/prescription';\r\nimport { Referral } from '../models/referral-order';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanManagementDataService {\r\n  batch: any;\r\n\r\n\r\n  constructor() { }\r\n\r\n  public setUnfinalizedBatch(batch: any) {\r\n    this.batch = batch;\r\n  }\r\n\r\n  public getUnfinalizedBatch(): any {\r\n    return this.batch;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~doctor-order-doctor-order-module~laboratory-order-laboratory-order-module~plan-management-pl~5fb2b03d-es5.js"}