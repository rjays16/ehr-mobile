function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~dashboard-dashboard-module~pages-menu-menu-module~soap-soap-module"], {
  /***/
  "./src/app/services/menu.service.ts":
  /*!******************************************!*\
    !*** ./src/app/services/menu.service.ts ***!
    \******************************************/

  /*! exports provided: MenuService */

  /***/
  function srcAppServicesMenuServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MenuService", function () {
      return MenuService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _login_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./login.service */
    "./src/app/services/login.service.ts");
    /* harmony import */


    var _permission_validator_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./permission-validator.service */
    "./src/app/services/permission-validator.service.ts");

    var MenuService =
    /*#__PURE__*/
    function () {
      function MenuService(loginService, permissionValidatorService) {
        _classCallCheck(this, MenuService);

        this.loginService = loginService;
        this.permissionValidatorService = permissionValidatorService;
        this.soapViewable = true;
        this.pastMedicalHistoryViewable = true;
        this.signsAndSymptomsViewable = true;
        this.vitalSignsViewable = true;
        this.hciReferralViewable = true;
        this.physicalExaminationsViewable = true;
        this.viewResultsViewable = true;
        this.drugsAndMedicinesViewable = true;
        this.planManagementViewable = true;
        this.encounterHistoryViewable = true;
        this.referralsViewable = true;
        this.endOfCareViewable = true;
        this.patientListDefaultOptions = {};
      }

      _createClass(MenuService, [{
        key: "initMenuByConfig",
        value: function initMenuByConfig() {
          var patient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var configAndDefaults = this.loginService.getConfigAndDefaults();
          this.patientListDefaultOptions = configAndDefaults.patientlist['m-patient-list']['default-options'];
          this.patient = patient;

          if (this.patient) {
            if (this.patient.is_discharged == 1) {
              // tslint:disable-next-line: max-line-length
              document.documentElement.style.setProperty('--patient-card-color', this.patientListDefaultOptions['encounter-types-color'].discharged); // tslint:disable-next-line: max-line-length
            } else if (this.patient.current_dept_encounter.deptenc_code === 'ere' || this.patient.current_dept_encounter.deptenc_code === this.patientListDefaultOptions['encounter-types'].ere) {
              document.documentElement.style.setProperty('--patient-card-color', this.patientListDefaultOptions['encounter-types-color'].ere); // tslint:disable-next-line: max-line-length
            } else if (this.patient.current_dept_encounter.deptenc_code === 'ipe' || this.patient.current_dept_encounter.deptenc_code === this.patientListDefaultOptions['encounter-types'].ipe) {
              document.documentElement.style.setProperty('--patient-card-color', this.patientListDefaultOptions['encounter-types-color'].ipe); // tslint:disable-next-line: max-line-length
            } else if (this.patient.current_dept_encounter.deptenc_code === 'ope' || this.patient.current_dept_encounter.deptenc_code === this.patientListDefaultOptions['encounter-types'].ope) {
              document.documentElement.style.setProperty('--patient-card-color', this.patientListDefaultOptions['encounter-types-color'].ope); // tslint:disable-next-line: max-line-length
            } else if (this.patient.current_dept_encounter.deptenc_code === 'phs' || this.patient.current_dept_encounter.deptenc_code === this.patientListDefaultOptions['other-encounter-types'].phs) {
              document.documentElement.style.setProperty('--patient-card-color', this.patientListDefaultOptions['encounter-types-color'].phs);
            }
          } // // tslint:disable-next-line: max-line-length
          // const subjectiveViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // const objectiveViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // const assessmentImpressionViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // const assessmentIcdViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // const assessmentDiagnsosisViewable = this.permissionValidatorService.hasSoapView() || this.permissionValidatorService.hasSoapDiagEdit();
          // // tslint:disable-next-line: max-line-length
          // const assessmentDiagnsosisTrailViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // const assessmentViewable = assessmentImpressionViewable || assessmentIcdViewable || assessmentDiagnsosisViewable;
          // const planViewable = this.permissionValidatorService.hasSoapView();
          // // tslint:disable-next-line: max-line-length
          // this.soapViewable = subjectiveViewable || objectiveViewable || assessmentViewable ||  planViewable;
          // // tslint:disable-next-line: max-line-length
          // const presentIllnessViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-presentillness']['p-illness-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const pastMedicalHistoryViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-pastmedicalhistory']['p-pastmedicalhistory-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const surgicalHistoryViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-surgicalhistory']['p-surgicalhistory-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const familyHistoryViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-familyhistory']['p-familyhistory-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const socialHistoryViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-socialhistory']['p-socialhistory-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const menstrualViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-menstrual']['p-menstrual-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const pregnantViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-pregnant']['p-pregnant-view'], false);
          // // tslint:disable-next-line: max-line-length
          // const immunizationViewable = this.permissionValidatorService.validateRole(configAndDefaults.pastmedical['m-patient-immunization']['p-immunization-view'], false);
          // // tslint:disable-next-line: max-line-length
          // this.pastMedicalHistoryViewable = presentIllnessViewable || pastMedicalHistoryViewable || surgicalHistoryViewable || familyHistoryViewable || socialHistoryViewable || menstrualViewable || pregnantViewable || immunizationViewable;
          // // tslint:disable-next-line: max-line-length
          // this.signsAndSymptomsViewable = this.permissionValidatorService.validateRole(configAndDefaults.psigns['m-patient-psigns']['psigns-view'], false);
          // // tslint:disable-next-line: max-line-length
          // this.vitalSignsViewable = this.permissionValidatorService.validateRole(configAndDefaults.vitalsign['m-patient-vital-signs']['p-vital-signs-view'], false);
          // if (configAndDefaults.ref_from_hci[' m-patient-reffromotherhci']) {
          //   // tslint:disable-next-line: max-line-length
          //   this.hciReferralViewable = this.permissionValidatorService.validateRole(configAndDefaults.ref_from_hci[' m-patient-reffromotherhci']['reffromotherhci-view'], false);
          // } else {
          //   // tslint:disable-next-line: max-line-length
          //   this.hciReferralViewable = this.permissionValidatorService.validateRole(configAndDefaults.ref_from_hci['m-patient-reffromotherhci']['reffromotherhci-view'], false);
          // }
          // // tslint:disable-next-line: max-line-length
          // this.physicalExaminationsViewable = this.permissionValidatorService.validateRole(configAndDefaults.examination['m-patient-examination']['examination-view'], false);
          // // tslint:disable-next-line: max-line-length
          // this.drugsAndMedicinesViewable = this.permissionValidatorService.validateRole(configAndDefaults.medication['m-patient-medication']['p-medication-view'], false);
          // // tslint:disable-next-line: max-line-length
          // this.endOfCareViewable = this.permissionValidatorService.validateRole(configAndDefaults.endcare['m-patient-endofcare']['p-endofcare-view'], false);


          this.account = [{
            title: 'Settings',
            icon: 'settings'
          }, {
            title: 'Update app Configuration',
            icon: 'download'
          }, {
            title: 'Pull hot fixes',
            icon: 'download'
          }, {
            title: 'Logout',
            icon: 'exit'
          }];
          var doctorPages = [{
            title: 'Doctors',
            icon: 'contact',
            visible: true,
            open: true,
            children: [{
              title: 'Dashboard',
              url: '/menu/dashboard',
              icon: 'list-box',
              viewable: true
            }, {
              title: 'User Manual',
              icon: 'list',
              viewable: true
            }]
          }, {
            title: 'Patient',
            icon: 'contact',
            visible: false,
            open: true,
            children: [{
              title: 'Patient Profile',
              url: '/menu/patient-profile',
              icon: 'person',
              viewable: true
            }, {
              title: 'SOAP',
              url: '/menu/soap',
              icon: 'heart',
              viewable: this.soapViewable
            }, {
              title: 'Past Medical History',
              url: '/menu/past-medical-history',
              icon: 'clipboard',
              viewable: this.pastMedicalHistoryViewable
            }, {
              title: 'Pertinent Signs and Symptoms',
              url: '/menu/signs-and-symptoms',
              icon: 'list',
              viewable: this.signsAndSymptomsViewable
            }, {
              title: 'Vital Signs',
              url: '/menu/vital-signs',
              icon: 'pulse',
              viewable: this.vitalSignsViewable
            }, {
              title: 'Referred from another HCI',
              url: '/menu/hci-referral',
              icon: 'heart-empty',
              viewable: this.hciReferralViewable
            }, {
              title: 'Physical Examinations',
              url: '/menu/physical-examinations',
              icon: 'body',
              viewable: this.physicalExaminationsViewable
            }, {
              title: 'Result',
              url: '/menu/view-result',
              icon: 'ios-book',
              viewable: this.viewResultsViewable
            }, {
              title: 'Drugs and Medicines',
              url: '/menu/drugs-and-medicines',
              icon: 'medkit',
              viewable: this.drugsAndMedicinesViewable
            }, {
              title: 'Plan Management',
              url: '/menu/plan-management',
              icon: 'save',
              viewable: this.planManagementViewable
            }, {
              title: 'Encounter History',
              url: '/menu/encounter-history',
              icon: 'ios-paper',
              viewable: this.encounterHistoryViewable
            }, {
              title: 'Referrals',
              url: '/menu/referrals',
              icon: 'ios-photos',
              viewable: this.referralsViewable
            }, {
              title: 'End of care',
              url: '/menu/end-of-care',
              icon: 'today',
              viewable: this.endOfCareViewable
            }]
          }];
          var nursePages = [{
            title: 'Doctors',
            icon: 'contact',
            visible: true,
            open: true,
            children: [{
              title: 'Dashboard',
              url: '/menu/dashboard',
              icon: 'list-box',
              viewable: true
            }, {
              title: 'User Manual',
              icon: 'list',
              viewable: true
            }]
          }, {
            title: 'Patient',
            icon: 'contact',
            visible: false,
            open: true,
            children: [{
              title: 'Patient Chart',
              url: '/menu/patient-chart',
              icon: 'person',
              viewable: true
            }, {
              title: 'Patient Profile',
              url: '/menu/patient-profile-nurse',
              icon: 'person',
              viewable: true
            }, {
              title: 'SOAP',
              url: '/menu/soap',
              icon: 'heart',
              viewable: this.soapViewable
            }, {
              title: 'Past Medical History',
              url: '/menu/past-medical-history',
              icon: 'clipboard',
              viewable: this.pastMedicalHistoryViewable
            }, {
              title: 'Pertinent Signs and Symptoms',
              url: '/menu/signs-and-symptoms',
              icon: 'list',
              viewable: this.signsAndSymptomsViewable
            }, {
              title: 'Vital Signs',
              url: '/menu/vital-signs',
              icon: 'pulse',
              viewable: this.vitalSignsViewable
            }, {
              title: 'Referred from another HCI',
              url: '/menu/hci-referral',
              icon: 'heart-empty',
              viewable: this.hciReferralViewable
            }, {
              title: 'Physical Examinations',
              url: '/menu/physical-examinations',
              icon: 'body',
              viewable: this.physicalExaminationsViewable
            }, {
              title: 'Result',
              url: '/menu/view-result',
              icon: 'ios-book',
              viewable: this.viewResultsViewable
            }, {
              title: 'Drugs and Medicines',
              url: '/menu/drugs-and-medicines',
              icon: 'medkit',
              viewable: this.drugsAndMedicinesViewable
            }, {
              title: 'Plan Management',
              url: '/menu/plan-management',
              icon: 'save',
              viewable: this.planManagementViewable
            }, {
              title: 'Encounter History',
              url: '/menu/encounter-history',
              icon: 'ios-paper',
              viewable: this.encounterHistoryViewable
            }, {
              title: 'Referrals',
              url: '/menu/referrals',
              icon: 'ios-photos',
              viewable: this.referralsViewable
            }, {
              title: 'End of care',
              url: '/menu/end-of-care',
              icon: 'today',
              viewable: this.endOfCareViewable
            }]
          }];

          if (this.user.role.role_name.toLocaleLowerCase().indexOf('nurse') !== -1) {
            this.pages = nursePages;
          } else {
            this.pages = doctorPages;
          }

          this.pages[1].visible = this.patient;
          console.log('this.pages', this.pages);
        }
      }]);

      return MenuService;
    }();

    MenuService.ctorParameters = function () {
      return [{
        type: _login_service__WEBPACK_IMPORTED_MODULE_2__["LoginService"]
      }, {
        type: _permission_validator_service__WEBPACK_IMPORTED_MODULE_3__["PermissionValidatorService"]
      }];
    };

    MenuService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_login_service__WEBPACK_IMPORTED_MODULE_2__["LoginService"], _permission_validator_service__WEBPACK_IMPORTED_MODULE_3__["PermissionValidatorService"]])], MenuService);
    /***/
  }
}]);
//# sourceMappingURL=default~dashboard-dashboard-module~pages-menu-menu-module~soap-soap-module-es5.js.map