{"version":3,"sources":["src/app/services/soap-api.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map, catchError, timeout } from 'rxjs/operators';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { PatientSoapData } from '../models/patient-soap-data';\r\nimport { IcdSearch } from '../models/icd-search';\r\nimport { AuditTrail } from '../models/audit-trail';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SoapApiService {\r\n  private url = 'http://localhost:3000';\r\n  private token: string;\r\n  private patientSoapPath = '/api/doctor/patient/soap/data';\r\n  private patientSoapOptionsPath = '/api/doctor/patient/soap/options';\r\n  private saveSubjectivePath = '/api/doctor/patient/soap/subjective/save';\r\n  private saveObjectivePath = '/api/doctor/patient/soap/objective/save';\r\n  private saveClinicalImpressionPath = '/api/doctor/patient/soap/assessment/clinicalimp/save';\r\n  private saveDiagnosisPath = '/api/doctor/patient/soap/assessment/diagnosis/save';\r\n  private saveClinicalSummaryPath = '/api/doctor/patient/soap/plan/save';\r\n  private searchIcdPath = '/api/selectData/GetICDFinalDiagnosisWho';\r\n  private addIcdPath = '/api/doctor/patient/soap/assessment/icd/save';\r\n  private removeIcdPath = '/api/doctor/patient/soap/assessment/icd/delete';\r\n  private getAuditTrailPath = '/api/doctor/patient/soap/assessment/diagnosis/trail';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private http: HTTP,\r\n    private platform: Platform\r\n  ) { }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public getPatientSoapData(encounter_no: string): Observable<PatientSoapData> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        id: encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.patientSoapPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Sopa error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<PatientSoapData>(this.url + this.patientSoapPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: PatientSoapData) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  public getPatientSoapOptions(): Observable<PatientSoapData> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {};\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.patientSoapOptionsPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Sopa error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const httpOptions = {\r\n        // params: new HttpParams(),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<PatientSoapData>(this.url + this.patientSoapOptionsPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: PatientSoapData) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveSubjective(encounter_no: string, chiefComplaint_tag: any, chiefComplaint_others: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        chiefComplaint_others: '',\r\n        chiefComplaint_tag:[]\r\n      };\r\n      \r\n      for (let i = 0; i < chiefComplaint_tag.length; i++) {\r\n        body.chiefComplaint_tag.push(chiefComplaint_tag[i]);\r\n      }\r\n      body.chiefComplaint_others = chiefComplaint_others;\r\n\r\n      console.log('body: ', body);\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.saveSubjectivePath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap Subj: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap Subj error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      for (let i = 0; i < chiefComplaint_tag.length; i++) {\r\n        input.append('chiefComplaint_tag[' + i + ']', chiefComplaint_tag[i]);\r\n      }\r\n      input.append('chiefComplaint_others', chiefComplaint_others);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      console.log(httpOptions);\r\n  \t\t  return this.httpClient.post(this.url + this.saveSubjectivePath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveSubjective API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveObjective(encounter_no: string, objective: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-objective': objective\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveObjectivePath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap Obj: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap Obj error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-objective', objective);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.post(this.url + this.saveObjectivePath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveObjective API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveClinicalImpression(encounter_no: string, impression: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        impression\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveClinicalImpressionPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap clinical: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap clinical error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('impression', impression);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.post(this.url + this.saveClinicalImpressionPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveClinicalImpression API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public searchIcd(keyword: string): Observable<IcdSearch[]> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        q: keyword\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.searchIcdPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('q', keyword),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<IcdSearch[]>(this.url + this.searchIcdPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: IcdSearch[]) => {\r\n          console.log('Entered searchIcd API:', results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public addICD(encounter_no: string, icd_code: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        id: encounter_no,\r\n        icd_code\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.addIcdPath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('id', encounter_no);\r\n      input.append('icd_code', icd_code);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.addIcdPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered addICD API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public removeICD(id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        id,\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.removeIcdPath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap icd: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap icd error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('id', id);\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.removeIcdPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered removeICD API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveDiagnosis(encounter_no: string, final_diagnosis: string, other_diagnosis: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-assessment-final': final_diagnosis,\r\n        'text-assessment-other': other_diagnosis\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveDiagnosisPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap diagnostics: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap diagnostics error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-assessment-final', final_diagnosis);\r\n      input.append('text-assessment-other', other_diagnosis);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.saveDiagnosisPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveDiagnosis API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public saveClinicalSummary(encounter_no: string, clinical_summary: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      const body = {\r\n        'text-assessment-plan': clinical_summary\r\n      };\r\n\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveClinicalSummaryPath + '?id=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap clinical summary: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap clinical summary error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('text-assessment-plan', clinical_summary);\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n  \t\t  return this.httpClient.post(this.url + this.saveClinicalSummaryPath, input, httpOptions).pipe(\r\n  \t\t\tmap((response: any) => {\r\n  \t\t\t\tconsole.log('Entered saveClinicalSummary API:', response);\r\n  \t\t\t\treturn response;\r\n  \t\t\t}),\r\n  \t\t\tcatchError((err: any, caught: Observable<Response>) => {\r\n  \t\t\t\tconsole.log(err, caught);\r\n  \t\t\t\treturn throwError(err);\r\n  \t\t\t})\r\n  \t\t);\r\n    }\r\n\t}\r\n\r\n  public getAuditTrail(encounter_no: string): Observable<AuditTrail[]> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        id: encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getAuditTrailPath + '?id=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Soap audit trails: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Soap audit trails error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('id', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type':  'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get<AuditTrail[]>(this.url + this.getAuditTrailPath , httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: AuditTrail[]) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~audit-trail-audit-trail-module~soap-soap-module-es5.js"}