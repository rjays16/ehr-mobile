{"version":3,"sources":["src/app/services/nurse-dar-notes-api.service.ts","src/app/services/nurse-dar-notes-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,QAAa,uBAAb;AAAA;AAAA;AASE,uCACU,QADV,EAEU,UAFV,EAGU,IAHV,EAGoB;AAAA;;AAFV,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,UAAA,GAAA,UAAA;AACA,aAAA,IAAA,GAAA,IAAA;AAXF,aAAA,GAAA,GAAM,uBAAN;AAGA,aAAA,eAAA,GAAkB,oBAAlB;AACA,aAAA,sBAAA,GAAyB,uBAAzB;AACA,aAAA,wBAAA,GAA2B,yBAA3B;AACA,aAAA,sBAAA,GAAyB,uBAAzB;AAKiB;;AAZ3B;AAAA;AAAA,+BAcgB,GAdhB,EAc2B;AACvB,eAAK,GAAL,GAAW,GAAX;AACD;AAhBH;AAAA;AAAA,iCAkBkB,KAlBlB,EAkB+B;AAC3B,eAAK,KAAL,GAAa,KAAb;AACD;AApBH;AAAA;AAAA,yCAsB0B,YAtB1B,EAsB8C;AAC1C,cAAI,KAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,KAA2B,KAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,CAA/B,EAA4D;AAC1D,YAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAM,MAAM,GAAG;AACb,cAAA,YAAY,EAAZ;AADa,aAAf;AAIA,gBAAM,OAAO,GAAG;AACd,cAAA,MAAM,EAAE,kBADM;AAEd,cAAA,aAAa,EAAE,YAAY,KAAK;AAFlB,aAAhB;AAKA,mBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAK,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,GAAL,GAAW,KAAK,eAA9B,EAA+C,MAA/C,EAAuD,OAAvD,CAAL,EAAsE,IAAtE,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,QAAD,EAAkB;AACpB,kBAAM,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CAArB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,YAA/B;AACA,qBAAO,YAAP;AACD,aAJD,CAFK,EAOL,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,kBAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,oBAAI;AACF,kBAAA,GAAG,CAAC,KAAJ,GAAY,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,KAAf,CAAZ;AACD,iBAFD,CAEE,OAAO,CAAP,EAAU;AACV,kBAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,CAAxC;AACD;AACF;;AACD,cAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,GAArC,EAA0C,MAA1C;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAVD,CAPK,CAAP;AAmBD,WA9BD,MA8BO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;;AACA,gBAAM,OAAM,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GACZ,GADY,CACR,cADQ,EACQ,YADR,CAAf;;AAGA,gBAAM,WAAW,GAAG;AAClB,cAAA,MAAM,EAAN,OADkB;AAElB,cAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,gBAAA,MAAM,EAAE,kBADe;AAEvB,gBAAA,aAAa,EAAE,YAAY,KAAK;AAFT,eAAhB;AAFS,aAApB;AAOA,YAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,WAA3B;AACA,mBAAO,KAAK,UAAL,CAAgB,GAAhB,CAAyB,KAAK,GAAL,GAAW,KAAK,eAAzC,EAA0D,WAA1D,EAAuE,IAAvE,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,OAAD,EAAiB;AACnB,cAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,qBAAO,OAAP;AACD,aAHD,CAFK,EAML,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,cAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAJD,CANK,CAAP;AAYD;AACF;AA/EH;AAAA;AAAA,8CAiF+B,YAjF/B,EAiFqD,EAjFrD,EAiF+D;AAC3D,cAAI,KAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,KAA2B,KAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,CAA/B,EAA4D;AAC1D,YAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAM,IAAI,GAAG;AACX,cAAA,YAAY,EAAZ,YADW;AAEX,cAAA,EAAE,EAAF;AAFW,aAAb;AAIA,gBAAM,OAAO,GAAG;AACd,cAAA,MAAM,EAAE,kBADM;AAEd,cAAA,aAAa,EAAE,YAAY,KAAK;AAFlB,aAAhB;AAKA,mBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAK,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,GAAL,GAAW,KAAK,wBAA/B,EAAyD,IAAzD,EAA+D,OAA/D,CAAL,EAA8E,IAA9E,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,QAAD,EAAkB;AACpB,kBAAM,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CAArB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,YAArC;AACA,qBAAO,YAAP;AACD,aAJD,CAFK,EAOL,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,kBAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,oBAAI;AACF,kBAAA,GAAG,CAAC,KAAJ,GAAY,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,KAAf,CAAZ;AACD,iBAFD,CAEE,OAAO,CAAP,EAAU;AACV,kBAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,CAAxC;AACD;AACF;;AACD,cAAA,OAAO,CAAC,GAAR,CAAY,6BAAZ,EAA2C,GAA3C,EAAgD,MAAhD;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAVD,CAPK,CAAP;AAmBD,WA9BD,MA8BO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,gBAAM,KAAI,GAAG;AACX,cAAA,EAAE,EAAF,EADW;AAEX,cAAA,YAAY,EAAZ;AAFW,aAAb;AAIA,gBAAM,WAAW,GAAG;AAClB;AACA;AACA;AACA,cAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,gBAAA,MAAM,EAAE,kBADe;AAEvB,gBAAA,aAAa,EAAE,YAAY,KAAK;AAFT,eAAhB;AAJS,aAApB;AASA,YAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,WAA3B;AACA,mBAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,KAAK,GAAL,GAAW,KAAK,wBAA1C,EAAoE,KAApE,EAA0E,WAA1E,EAAuF,IAAvF,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,OAAD,EAAiB;AACnB,cAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,qBAAO,OAAP;AACD,aAHD,CAFK,EAML,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,cAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAJD,CANK,CAAP;AAYD;AACF;AA7IH;AAAA;AAAA,yCA+I0B,YA/I1B,EA+IgD,KA/IhD,EA+I+D;AAC3D,cAAI,KAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,KAA2B,KAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,CAA/B,EAA4D;AAC1D,YAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAM,IAAI,GAAG;AACX,cAAA,IAAI,EAAE,KAAK,CAAC,IADD;AAEX,cAAA,MAAM,EAAE,KAAK,CAAC,MAFH;AAGX,cAAA,QAAQ,EAAE,KAAK,CAAC,QAHL;AAIX,cAAA,KAAK,EAAG,KAAK,CAAC,KAJH;AAKX,cAAA,WAAW,EAAE,KAAK,CAAC;AALR,aAAb;AAOA,gBAAM,OAAO,GAAG;AACd,cAAA,MAAM,EAAE,kBADM;AAEd,cAAA,aAAa,EAAE,YAAY,KAAK;AAFlB,aAAhB;AAKA,mBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAK,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,GAAL,GAAW,KAAK,sBAAhB,GAAyC,gBAAzC,GAA4D,YAA3E,EAAyF,IAAzF,EAA+F,OAA/F,CAAL,EAA8G,IAA9G,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,QAAD,EAAkB;AACpB,kBAAM,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CAArB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,YAAhC;AACA,qBAAO,YAAP;AACD,aAJD,CAFK,EAOL,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,kBAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,oBAAI;AACF,kBAAA,GAAG,CAAC,KAAJ,GAAY,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,KAAf,CAAZ;AACD,iBAFD,CAEE,OAAO,CAAP,EAAU;AACV,kBAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,CAAxC;AACD;AACF;;AACD,cAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ,EAAsC,GAAtC,EAA2C,MAA3C;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAVD,CAPK,CAAP;AAmBD,WAjCD,MAiCO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,gBAAM,MAAI,GAAG;AACX,cAAA,IAAI,EAAE,KAAK,CAAC,IADD;AAEX,cAAA,MAAM,EAAE,KAAK,CAAC,MAFH;AAGX,cAAA,QAAQ,EAAE,KAAK,CAAC,QAHL;AAIX,cAAA,KAAK,EAAG,KAAK,CAAC,KAJH;AAKX,cAAA,WAAW,EAAE,KAAK,CAAC;AALR,aAAb;AAOA,gBAAM,WAAW,GAAG;AAClB,cAAA,MAAM,EAAE,IAAI,iDAAA,CAAA,YAAA,CAAJ,GACL,GADK,CACD,cADC,EACe,YADf,CADU;AAGlB,cAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,gBAAA,MAAM,EAAE,kBADe;AAEvB,gBAAA,aAAa,EAAE,YAAY,KAAK;AAFT,eAAhB;AAHS,aAApB;AAQA,YAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,WAA3B;AACA,mBAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,KAAK,GAAL,GAAW,KAAK,sBAA1C,EAAkE,MAAlE,EAAwE,WAAxE,EAAqF,IAArF,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,OAAD,EAAiB;AACnB,cAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,qBAAO,OAAP;AACD,aAHD,CAFK,EAML,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,cAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAJD,CANK,CAAP;AAYD;AACF;AAhNH;AAAA;AAAA,2CAkN4B,EAlN5B,EAkNsC;AAClC,cAAI,KAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,KAA2B,KAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,CAA/B,EAA4D;AAC1D,YAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAM,IAAI,GAAG;AACX,cAAA,EAAE,EAAF;AADW,aAAb;AAGA,gBAAM,OAAO,GAAG;AACd,cAAA,MAAM,EAAE,kBADM;AAEd,cAAA,aAAa,EAAE,YAAY,KAAK;AAFlB,aAAhB;AAKA,mBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAK,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,GAAL,GAAW,KAAK,sBAA/B,EAAuD,IAAvD,EAA6D,OAA7D,CAAL,EAA4E,IAA5E,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,QAAD,EAAkB;AACpB,kBAAM,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CAArB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,YAAlC;AACA,qBAAO,YAAP;AACD,aAJD,CAFK,EAOL,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,kBAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,oBAAI;AACF,kBAAA,GAAG,CAAC,KAAJ,GAAY,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,KAAf,CAAZ;AACD,iBAFD,CAEE,OAAO,CAAP,EAAU;AACV,kBAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,CAAxC;AACD;AACF;;AACD,cAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,GAAxC,EAA6C,MAA7C;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAVD,CAPK,CAAP;AAmBD,WA7BD,MA6BO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,gBAAM,MAAI,GAAG;AACX,cAAA,EAAE,EAAF;AADW,aAAb;AAGA,gBAAM,WAAW,GAAG;AAClB,cAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,gBAAA,MAAM,EAAE,kBADe;AAEvB,gBAAA,aAAa,EAAE,YAAY,KAAK;AAFT,eAAhB;AADS,aAApB;AAMA,YAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,WAA3B;AACA,mBAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,KAAK,GAAL,GAAW,KAAK,sBAA1C,EAAkE,MAAlE,EAAwE,WAAxE,EAAqF,IAArF,CACL,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,KAAR,CADK,EAEL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,OAAD,EAAiB;AACnB,cAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,qBAAO,OAAP;AACD,aAHD,CAFK,EAML,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,GAAD,EAAW,MAAX,EAAsC;AAC/C,cAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,qBAAO,MAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,CAAA,CAAW,GAAX,CAAP;AACD,aAJD,CANK,CAAP;AAYD;AACF;AAzQH;;AAAA;AAAA,OAAA;;;;cAUsB,2CAAA,CAAA,UAAA;;cACE,iDAAA,CAAA,YAAA;;cACN,mDAAA,CAAA,MAAA;;;;AAZL,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHnC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGmC,E,uEAUd,2CAAA,CAAA,UAAA,C,EACE,iDAAA,CAAA,YAAA,C,EACN,mDAAA,CAAA,MAAA,C,EAZkB,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNb,QAAa,wBAAb;AAAA;AAAA;AAGE,0CAAA;AAAA;AAAiB;;AAHnB;AAAA;AAAA,kCAKS;AACL,iBAAO,KAAK,IAAZ;AACD;AAPH;AAAA;AAAA,gCASU,IATV,EASmB;AACf,eAAK,IAAL,GAAY,IAAZ;AACD;AAXH;;AAAA;AAAA,OAAA;;AAAa,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHpC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGoC,E,yEAAA,CAAA,EAAxB,wBAAwB,CAAxB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpEvent, HttpResponse} from '@angular/common/http';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { map, catchError, timeout, tap} from 'rxjs/operators';\r\nimport { Platform } from '@ionic/angular';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\nimport { DarNotes } from '../models/dar-notes';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NurseDarNotesApiService {\r\n  private url = 'http://localhost:3000';\r\n  private token: string;\r\n\r\n  private getNurseDarPath = '/api/nurse/dar/get';\r\n  private postNurseDarDeletePath = '/api/nurse/dar/delete';\r\n  private postNurseDarFinalizePath = '/api/nurse/dar/finalize';\r\n  private postNurseDarActionPath = '/api/nurse/dar/action';\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private httpClient: HttpClient,\r\n    private http: HTTP) { }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public getNurseDarNotes(encounter_no: string): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        encounter_no\r\n      };\r\n\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getNurseDarPath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Get DAR Notes: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Get DAR Notes error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('encounter_no', encounter_no);\r\n\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.get<any>(this.url + this.getNurseDarPath, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public finalizeNurseDarNotes(encounter_no: string, id: string): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        encounter_no,\r\n        id\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postNurseDarFinalizePath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Finalized DAR Notes: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Finalized DAR Notes error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        id,\r\n        encounter_no\r\n      };\r\n      const httpOptions = {\r\n        // params: new HttpParams()\r\n        //   .set('id', id)\r\n        //   .set('encounter_no', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post<any>(this.url + this.postNurseDarFinalizePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveNurseDarNote(encounter_no: string, notes: DarNotes): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        data:\tnotes.data,\r\n        action:\tnotes.action,\r\n        response:\tnotes.response,\r\n        focus\t:\tnotes.focus,\r\n        document_id:\tnotes.document_id,\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postNurseDarActionPath + '?encounter_no=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save DAR Notes: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save DAR Notes error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        data:\tnotes.data,\r\n        action:\tnotes.action,\r\n        response:\tnotes.response,\r\n        focus\t:\tnotes.focus,\r\n        document_id:\tnotes.document_id,\r\n      };\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('encounter_no', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post<any>(this.url + this.postNurseDarActionPath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteNurseDarNote(id: string): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        id\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postNurseDarDeletePath, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Delete DAR Notes: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Delete DAR Notes error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        id\r\n      };\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post<any>(this.url + this.postNurseDarDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NurseDarNotesDataService {\r\n  data: any;\r\n\r\n  constructor() { }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data: any) {\r\n    this.data = data;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~dar-note-dar-note-module~patient-chart-patient-chart-module-es5.js"}