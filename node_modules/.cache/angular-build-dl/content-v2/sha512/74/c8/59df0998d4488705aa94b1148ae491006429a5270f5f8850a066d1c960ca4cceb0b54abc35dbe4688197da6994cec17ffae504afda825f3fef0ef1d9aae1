{"version":3,"sources":["./src/app/services/plan-management-api.service.ts","./src/app/services/plan-management-data.service.ts"],"names":[],"mappings":"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","file":"default~doctor-order-doctor-order-module~laboratory-order-laboratory-order-module~plan-management-pl~5fb2b03d-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { map, catchError, timeout, tap} from 'rxjs/operators';\r\nimport { Platform } from '@ionic/angular';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanManagementApiService {\r\n  private url = 'http://localhost:3000';\r\n  private getAllOrdersPath = '/api/doctor/planmanagement/getAllOrders';\r\n  private postFinalizeRequrestOrdersPath = '/api/doctor/planmanagement/finalize/orders';\r\n  private postMedicineSearchPath = '/api/doctor/medicine/search';\r\n  private postPrescriptionSavePath = '/api/doctor/prescription/save';\r\n  private getPrescriptionPrintFilePath = '/api/doctor/patient/prescription/file/path';\r\n  private postCoursewardSavePath = '/api/doctor/courseward/save';\r\n  private postCoursewardDeletePath = '/api/doctor/courseward/delete';\r\n  private postReferralSavePath = '/api/doctor/referral/save';\r\n  private postReferralDeletePath = '/api/doctor/referral/delete';\r\n  private postDiagnosticLaboratorySavePath = '/api/doctor/diagnostic/lab/save';\r\n  private postDiagnosticLaboratoryDeletePath = '/api/doctor/diagnostic/lab/delete';\r\n  private postDiagnosticRadiologySavePath = '/api/doctor/diagnostic/rad/save';\r\n  private postDiagnosticRadiologyDeletePath = '/api/doctor/diagnostic/rad/delete';\r\n  private postRepetitiveDeletePath = '/api/doctor/repetitive/delete';\r\n  private postRepetitiveSavePath = '/api/doctor/repetitive/save';\r\n  private postFinalizedRepetitiveDeletePath = '/api/doctor/finalized/repetitive/delete';\r\n\r\n  private token: string;\r\n  constructor(private platform: Platform,\r\n              private httpClient: HttpClient,\r\n              private http: HTTP) {\r\n\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public finalizeRequestOrders(encounter_no: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postFinalizeRequrestOrdersPath + '?encounterNo=' + encounter_no, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postFinalizeRequrestOrdersPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public getAllOrders(encounter_no: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.getAllOrdersPath + '?encounterNo=' + encounter_no, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.getAllOrdersPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public searchMedicine(query: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.postMedicineSearchPath + '?q=' + query, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const params = new HttpParams()\r\n        .set('q', query);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postMedicineSearchPath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public savePrescription(encounter_no: string, prescription_list: any[]): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders: prescription_list\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postPrescriptionSavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders: prescription_list\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postPrescriptionSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveCourseward(courseward: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(courseward).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = courseward[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postCoursewardSavePath + '?encounterNo=' + courseward.encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(courseward).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = courseward[key];\r\n        }\r\n      });\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', courseward.encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postCoursewardSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteCourseward(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postCoursewardDeletePath + '?encounterNo=' + encounter_no + '&orders=' + id, {}, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no)\r\n        .set('orders', id);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postCoursewardDeletePath, {}, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveReferral(referral: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(referral).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = referral[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postReferralSavePath + '?encounterNo=' + referral.encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(referral).forEach(key => {\r\n        if (key !== 'encounter_no') {\r\n          data[key] = referral[key];\r\n        }\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', referral.encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postReferralSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteReferral(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const body = {\r\n        'data': {\r\n          'id': id\r\n        } \r\n      };\r\n      this.http.setDataSerializer('json');\r\n      console.log('body: ', body);\r\n      return from(this.http.post(this.url + this.postReferralDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Plan management all orders: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Plan management all orders error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postReferralDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveDiagnosticLaboratory(encounter_no: string, orders: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postDiagnosticLaboratorySavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticLaboratorySavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteDiagnosticLaboratory(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postDiagnosticLaboratoryDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticLaboratoryDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public saveDiagnosticRadiology(encounter_no: string, orders: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        orders\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      this.http.setDataSerializer('json');\r\n      return from(this.http.post(this.url + this.postDiagnosticRadiologySavePath + '?encounterNo=' + encounter_no, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = {\r\n        orders\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticRadiologySavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteDiagnosticRadiology(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data[id]': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postDiagnosticRadiologyDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Save prescriptions: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Save prescriptions error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data[id]', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postDiagnosticRadiologyDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public saveRepetitive(encounter_no: string, repetitiveData: any): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      \r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      const data = {};\r\n      Object.keys(repetitiveData).forEach(key => {\r\n        data[key] = repetitiveData[key];\r\n      });\r\n\r\n      const body = {\r\n        data\r\n      };\r\n\r\n      console.log('body: ', body);\r\n\r\n      this.http.setDataSerializer('json');\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postRepetitiveSavePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const data = {};\r\n      Object.keys(repetitiveData).forEach(key => {\r\n        data[key] = repetitiveData[key];\r\n      });\r\n      const body = {\r\n        data\r\n      };\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postRepetitiveSavePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteRepetitive(encounter_no: string, id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data': id\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postRepetitiveDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data', id);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postRepetitiveDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public deleteFinalizedRepetitive(encounter_no: string, id: string, encounterCourseWardID: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        'data': id,\r\n        'encounterCourseWardID' : encounterCourseWardID\r\n      };\r\n      console.log('body: ', body);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      return from(this.http.post(this.url + this.postFinalizedRepetitiveDeletePath + '?encounterNo=' + encounter_no, body, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      const body = new FormData();\r\n      body.append('data', id);\r\n      body.append('encounterCourseWardID', encounterCourseWardID);\r\n      console.log('body: ', body);\r\n      const params = new HttpParams()\r\n        .set('encounterNo', encounter_no);\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.post(this.url + this.postFinalizedRepetitiveDeletePath, body, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public getPrescriptionPrintFile(encounter_no: string, prescriptions: any): Observable<any>  {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params: any = {\r\n        encounter_no,\r\n        is_group: '1',\r\n      };\r\n      Object.keys(prescriptions).forEach(key => {\r\n        params[key] = prescriptions[key];\r\n      });\r\n      console.log('params: ', params);\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      console.log('headers: ', headers);\r\n      return from(this.http.get(this.url + this.getPrescriptionPrintFilePath, params, headers)).pipe(\r\n        timeout(30000),\r\n        map((response: any) => {\r\n          const responseData = JSON.parse(response.data);\r\n          console.log('Prescription Print File: ', responseData);\r\n          return responseData;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              console.log('err.error parse failed: ', e);\r\n            }\r\n          }\r\n          console.log('Prescription Print File error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      console.log('browser');\r\n      let params: HttpParams;\r\n      params = new HttpParams()\r\n        .set('encounterNo', encounter_no)\r\n        .set('is_group', '1');\r\n      Object.keys(prescriptions).forEach(key => {\r\n        params.append(key, prescriptions[key]);\r\n      });\r\n      console.log('params: ', params);\r\n      const httpOptions = {\r\n        params,\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + this.token\r\n        })\r\n      };\r\n      console.log('httpOptions', httpOptions);\r\n      return this.httpClient.get(this.url + this.getPrescriptionPrintFilePath, httpOptions).pipe(\r\n        timeout(30000),\r\n        map((results: any) => {\r\n          console.log(results);\r\n          return results;\r\n        }),\r\n        catchError((err: any, caught: Observable<any>) => {\r\n          console.log(caught);\r\n          console.error(err);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Courseward } from '../models/courseward';\r\nimport { Prescription } from '../models/prescription';\r\nimport { Referral } from '../models/referral-order';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanManagementDataService {\r\n  batch: any;\r\n\r\n\r\n  constructor() { }\r\n\r\n  public setUnfinalizedBatch(batch: any) {\r\n    this.batch = batch;\r\n  }\r\n\r\n  public getUnfinalizedBatch(): any {\r\n    return this.batch;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}