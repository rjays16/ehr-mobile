(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"j+ZQ":function(e,t,o){"use strict";o.d(t,"a",(function(){return s}));var r=o("8Y7J");let s=(()=>{class e{constructor(){}setUnfinalizedBatch(e){this.batch=e}getUnfinalizedBatch(){return this.batch}}return e.ngInjectableDef=r.bc({factory:function(){return new e},token:e,providedIn:"root"}),e})()},kERx:function(e,t,o){"use strict";o.d(t,"a",(function(){return g}));var r=o("IheW"),s=o("Cfvw"),a=o("z6cu"),n=o("tS1D"),i=o("lJxs"),c=o("JIr8"),l=o("ZZ/e"),p=o("yp2w"),h=o("8Y7J");let g=(()=>{class e{constructor(e,t,o){this.platform=e,this.httpClient=t,this.http=o,this.url="http://localhost:3000",this.getAllOrdersPath="/api/doctor/planmanagement/getAllOrders",this.postFinalizeRequrestOrdersPath="/api/doctor/planmanagement/finalize/orders",this.postMedicineSearchPath="/api/doctor/medicine/search",this.postPrescriptionSavePath="/api/doctor/prescription/save",this.getPrescriptionPrintFilePath="/api/doctor/patient/prescription/file/path",this.postCoursewardSavePath="/api/doctor/courseward/save",this.postCoursewardDeletePath="/api/doctor/courseward/delete",this.postReferralSavePath="/api/doctor/referral/save",this.postReferralDeletePath="/api/doctor/referral/delete",this.postDiagnosticLaboratorySavePath="/api/doctor/diagnostic/lab/save",this.postDiagnosticLaboratoryDeletePath="/api/doctor/diagnostic/lab/delete",this.postDiagnosticRadiologySavePath="/api/doctor/diagnostic/rad/save",this.postDiagnosticRadiologyDeletePath="/api/doctor/diagnostic/rad/delete",this.postRepetitiveDeletePath="/api/doctor/repetitive/delete",this.postRepetitiveSavePath="/api/doctor/repetitive/save",this.postFinalizedRepetitiveDeletePath="/api/doctor/finalized/repetitive/delete"}setUrl(e){this.url=e}setToken(e){this.token=e}finalizeRequestOrders(e){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const t={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postFinalizeRequrestOrdersPath+"?encounterNo="+e,{},t)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const t=(new r.h).set("encounterNo",e);console.log("params: ",t);const o={params:t,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",o),this.httpClient.post(this.url+this.postFinalizeRequrestOrdersPath,{},o).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}getAllOrders(e){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const t={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.getAllOrdersPath+"?encounterNo="+e,{},t)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const t=(new r.h).set("encounterNo",e);console.log("params: ",t);const o={params:t,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",o),this.httpClient.post(this.url+this.getAllOrdersPath,{},o).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}searchMedicine(e){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const t={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postMedicineSearchPath+"?q="+e,{},t)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const t=(new r.h).set("q",e);console.log("params: ",t);const o={params:t,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",o),this.httpClient.post(this.url+this.postMedicineSearchPath,{},o).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}savePrescription(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={orders:t},r={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token};return this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postPrescriptionSavePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Save prescriptions: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Save prescriptions error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o={orders:t};console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postPrescriptionSavePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}saveCourseward(e){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const t={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token},o={};Object.keys(e).forEach(t=>{"encounter_no"!==t&&(o[t]=e[t])});const r={data:o};return console.log("body: ",r),this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postCoursewardSavePath+"?encounterNo="+e.encounter_no,r,t)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const t={};Object.keys(e).forEach(o=>{"encounter_no"!==o&&(t[o]=e[o])});const o={data:t};console.log("body: ",o);const s=(new r.h).set("encounterNo",e.encounter_no);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postCoursewardSavePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteCourseward(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={Accept:"application/json",Authorization:"Bearer "+this.token};return console.log("body: ",{"data[id]":t}),Object(s.a)(this.http.post(this.url+this.postCoursewardDeletePath+"?encounterNo="+e+"&orders="+t,{},o)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o=new FormData;o.append("data[id]",t),console.log("body: ",o);const s=(new r.h).set("encounterNo",e).set("orders",t);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postCoursewardDeletePath,{},l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}saveReferral(e){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const t={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token},o={};Object.keys(e).forEach(t=>{"encounter_no"!==t&&(o[t]=e[t])});const r={data:o};return console.log("body: ",r),this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postReferralSavePath+"?encounterNo="+e.encounter_no,r,t)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const t={};Object.keys(e).forEach(o=>{"encounter_no"!==o&&(t[o]=e[o])});const o={data:t};console.log("body: ",o);const s=(new r.h).set("encounterNo",e.encounter_no);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postReferralSavePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteReferral(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={Accept:"application/json",Authorization:"Bearer "+this.token},r={data:{id:t}};return this.http.setDataSerializer("json"),console.log("body: ",r),Object(s.a)(this.http.post(this.url+this.postReferralDeletePath+"?encounterNo="+e,r,o)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Plan management all orders: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Plan management all orders error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o=new FormData;o.append("data[id]",t),console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postReferralDeletePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}saveDiagnosticLaboratory(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={orders:t},r={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token};return this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postDiagnosticLaboratorySavePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Save prescriptions: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Save prescriptions error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o={orders:t};console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postDiagnosticLaboratorySavePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteDiagnosticLaboratory(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={"data[id]":t};console.log("body: ",o);const r={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postDiagnosticLaboratoryDeletePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Save prescriptions: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Save prescriptions error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o=new FormData;o.append("data[id]",t),console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postDiagnosticLaboratoryDeletePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}saveDiagnosticRadiology(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={orders:t},r={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token};return this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postDiagnosticRadiologySavePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Save prescriptions: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Save prescriptions error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o={orders:t};console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postDiagnosticRadiologySavePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteDiagnosticRadiology(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={"data[id]":t};console.log("body: ",o);const r={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postDiagnosticRadiologyDeletePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Save prescriptions: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Save prescriptions error: ",e,t),Object(a.a)(e)}))}{console.log("browser");const o=new FormData;o.append("data[id]",t),console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postDiagnosticRadiologyDeletePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}saveRepetitive(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={Accept:"application/json",Authorization:"Bearer "+this.token},r={};Object.keys(t).forEach(e=>{r[e]=t[e]});const l={data:r};return console.log("body: ",l),this.http.setDataSerializer("json"),Object(s.a)(this.http.post(this.url+this.postRepetitiveSavePath+"?encounterNo="+e,l,o)).pipe(Object(n.a)(3e4),Object(i.a)(e=>JSON.parse(e.data)),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return Object(a.a)(e)}))}{console.log("browser");const o={};Object.keys(t).forEach(e=>{o[e]=t[e]});const s={data:o};console.log("body: ",s);const l=(new r.h).set("encounterNo",e);console.log("params: ",l);const p={params:l,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",p),this.httpClient.post(this.url+this.postRepetitiveSavePath,s,p).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteRepetitive(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={data:t};console.log("body: ",o);const r={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postRepetitiveDeletePath+"?encounterNo="+e,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>JSON.parse(e.data)),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return Object(a.a)(e)}))}{console.log("browser");const o=new FormData;o.append("data",t),console.log("body: ",o);const s=(new r.h).set("encounterNo",e);console.log("params: ",s);const l={params:s,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",l),this.httpClient.post(this.url+this.postRepetitiveDeletePath,o,l).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}deleteFinalizedRepetitive(e,t,o){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const r={data:t,encounterCourseWardID:o};console.log("body: ",r);const l={Accept:"application/json",Authorization:"Bearer "+this.token};return Object(s.a)(this.http.post(this.url+this.postFinalizedRepetitiveDeletePath+"?encounterNo="+e,r,l)).pipe(Object(n.a)(3e4),Object(i.a)(e=>JSON.parse(e.data)),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return Object(a.a)(e)}))}{console.log("browser");const s=new FormData;s.append("data",t),s.append("encounterCourseWardID",o),console.log("body: ",s);const l=(new r.h).set("encounterNo",e);console.log("params: ",l);const p={params:l,headers:new r.g({Accept:"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",p),this.httpClient.post(this.url+this.postFinalizedRepetitiveDeletePath,s,p).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}getPrescriptionPrintFile(e,t){if(this.platform.is("ios")||this.platform.is("android")){console.log("native");const o={encounter_no:e,is_group:"1"};Object.keys(t).forEach(e=>{o[e]=t[e]}),console.log("params: ",o);const r={Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token};return console.log("headers: ",r),Object(s.a)(this.http.get(this.url+this.getPrescriptionPrintFilePath,o,r)).pipe(Object(n.a)(3e4),Object(i.a)(e=>{const t=JSON.parse(e.data);return console.log("Prescription Print File: ",t),t}),Object(c.a)((e,t)=>{if("string"==typeof e.error)try{e.error=JSON.parse(e.error)}catch(o){console.log("err.error parse failed: ",o)}return console.log("Prescription Print File error: ",e,t),Object(a.a)(e)}))}{let o;console.log("browser"),o=(new r.h).set("encounterNo",e).set("is_group","1"),Object.keys(t).forEach(e=>{o.append(e,t[e])}),console.log("params: ",o);const s={params:o,headers:new r.g({Accept:"application/json","Content-Type":"application/json",Authorization:"Bearer "+this.token})};return console.log("httpOptions",s),this.httpClient.get(this.url+this.getPrescriptionPrintFilePath,s).pipe(Object(n.a)(3e4),Object(i.a)(e=>(console.log(e),e)),Object(c.a)((e,t)=>(console.log(t),console.error(e),Object(a.a)(e))))}}}return e.ngInjectableDef=h.bc({factory:function(){return new e(h.cc(l.Nb),h.cc(r.c),h.cc(p.a))},token:e,providedIn:"root"}),e})()}}]);