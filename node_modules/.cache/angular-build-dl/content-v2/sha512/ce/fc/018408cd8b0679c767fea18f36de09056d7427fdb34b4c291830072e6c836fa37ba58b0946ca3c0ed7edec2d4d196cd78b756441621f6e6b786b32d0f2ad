{"version":3,"sources":["./src/app/pages/account-settings/account-settings.page.html","./src/app/pages/account-settings/account-settings.module.ts","./src/app/pages/account-settings/account-settings.page.scss","./src/app/pages/account-settings/account-settings.page.ts","./src/app/services/storage.service.ts"],"names":[],"mappings":"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","file":"account-settings-account-settings-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Settings</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Authentication</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Auto sign in</ion-label>\\r\\n      <ion-toggle [(ngModel)]=\\\"autoLogin\\\" (ionChange)=\\\"fnAutoLoginEvent()\\\"></ion-toggle>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Build {{env?.build}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AccountSettingsPage } from './account-settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountSettingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AccountSettingsPage]\r\n})\r\nexport class AccountSettingsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtc2V0dGluZ3MvYWNjb3VudC1zZXR0aW5ncy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { StorageService } from './../../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.page.html',\r\n  styleUrls: ['./account-settings.page.scss'],\r\n})\r\nexport class AccountSettingsPage implements OnInit {\r\n  env:any;\r\n  autoLogin:boolean = true;\r\n  constructor(\r\n    private storageService: StorageService,\r\n  ) { \r\n    this.env = environment;\r\n  }\r\n  ngOnInit() {\r\n    console.log('ngOnInit AccountSettingsPage');\r\n    this.storageService.get('isAutologin').then((val)=>{\r\n      if(val == null || val == \"null\")\r\n        val = true;\r\n      this.autoLogin = val;\r\n      console.log('isAutologin', this.autoLogin);\r\n    });\r\n  }\r\n\r\n  \r\n  fnAutoLoginEvent(){\r\n    this.storageService.setObject('isAutologin', this.autoLogin);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor(public storage: Storage) { }\r\n\r\n  async set(key: string, value: any): Promise<any> {\r\n    try {\r\n      const result = await this.storage.set(key, value);\r\n      console.log('set string in storage: ' + result);\r\n      return true;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async get(key: string): Promise<any> {\r\n    try {\r\n      const result = await this.storage.get(key);\r\n      console.log('storageGET: ' + key + ': ' + result);\r\n      if (result != null) {\r\n        return result;\r\n      }\r\n      return null;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async setObject(key: string, object: any) {\r\n    try {\r\n      const result = await this.storage.set(key, JSON.stringify(object));\r\n      console.log('set Object in storage: ' + result);\r\n      return true;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getObject(key: string): Promise<any> {\r\n    try {\r\n      const result = await this.storage.get(key);\r\n      if (result != null) {\r\n        return JSON.parse(result);\r\n      }\r\n      return null;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.storage.remove(key);\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}