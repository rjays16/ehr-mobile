{"version":3,"sources":["src/app/app/services/alert-service.service.ts","src/app/services/drugs-and-medicines-api.service.ts","src/app/services/drugs-and-medicines-detail-data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ToastController, ModalController, AlertController } from '@ionic/angular';\r\nimport { PromptModalPage } from 'src/app/pages/prompt-modal/prompt-modal.page';\r\nimport { PromptModalCPage } from 'src/app/pages/prompt-modal-c/prompt-modal-c.page';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertServiceService {\r\n  private nativeAlert;\r\n  \r\n  constructor(\r\n    private toastCtrl: ToastController,\r\n    private modalController: ModalController,\r\n    private alertController: AlertController,\r\n  ) { }\r\n    \r\n\r\n  async alertToast(message){\r\n    console.log('AlertToast Message:', message);\r\n    const toast = await this.toastCtrl.create({\r\n      message: message,\r\n      duration: 8000\r\n    });\r\n    toast.onclick = (ev)=>{\r\n      toast.dismiss();\r\n    }\r\n    toast.present();\r\n  }\r\n\r\n  async openAlertModalValidation(alert: string, title: string, message: string, messageArray, ok: string = 'Done', okCallBack = (result)=>{}) {\r\n    const modal = await this.modalController.create({\r\n      component: PromptModalPage,\r\n      cssClass: 'my-custom-modal-array-css',\r\n      componentProps: {\r\n        alert,\r\n        title,\r\n        message,\r\n        messageArray,\r\n        ok\r\n      }\r\n    });\r\n\r\n    modal.onDidDismiss().then((result) => {\r\n      okCallBack(result);\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  async openSearchModal(options=[], value=\"\",placeholder=\"Enter here...\",maxLength=null, okCallBack = (result)=>{}) {\r\n    const modal = await this.modalController.create({\r\n      component: PromptModalCPage,\r\n      cssClass: 'my-custom-modal-css',\r\n      componentProps: {\r\n        searchData: {\r\n          isForSearch:true,\r\n          libs:options,\r\n          searchQuery:value,\r\n          maxLength:maxLength,\r\n          placeholder:placeholder\r\n        },\r\n      }\r\n    });\r\n\r\n    modal.onDidDismiss().then((result) => {\r\n      okCallBack(result);\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  async openPromptModal(title: string, message: string,  ok: string = 'Save', okCallBack = (result)=>{}, cancel: string = 'Cancel', cancelCallBack = (result)=>{}) {\r\n    const modal = await this.modalController.create({\r\n      component: PromptModalPage,\r\n      cssClass: 'my-custom-modal-css',\r\n      componentProps: {\r\n        prompt,\r\n        title,\r\n        message,\r\n        cancel,\r\n        ok\r\n      }\r\n    });\r\n\r\n    modal.onDidDismiss().then((result) => {\r\n      okCallBack(result);\r\n      cancelCallBack(result);\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n  \r\n\r\n  async openAlertModal(alert: string, title: string, message: string, ok: string = 'Done', okCallBack = (result)=>{}) {\r\n    const modal = await this.modalController.create({\r\n      component: PromptModalPage,\r\n      // cssClass: 'auto-height',\r\n      cssClass: 'my-custom-modal-css',\r\n      componentProps: {\r\n        alert,\r\n        title,\r\n        message,\r\n        ok\r\n      }\r\n    });\r\n\r\n    modal.onDidDismiss().then((result) => {\r\n      okCallBack(result);\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n\r\n  async prompNAlert(\r\n    header='',\r\n    subHeader='',\r\n    message='',\r\n    inputs=[], \r\n    buttons=[],\r\n    backdropDismiss=true,\r\n    keyboardClose=true\r\n  ){\r\n  \r\n  this.nativeAlert = this.alertController.create({\r\n      header,\r\n      subHeader,\r\n      message,\r\n      backdropDismiss,\r\n      keyboardClose,\r\n      inputs,\r\n      buttons\r\n    }).then(alert => {\r\n      this.nativeAlert.present();\r\n    });\r\n  }\r\n\r\n\r\n  async prompInputNAlert(\r\n    header='',\r\n    subHeader='',\r\n    message='',\r\n    backdropDismiss=true,\r\n    keyboardClose=true,\r\n    inputs=[], \r\n    buttons:any = [],\r\n    callBackOk = ()=>{}, \r\n    callBackNo = ()=>{}\r\n  ){\r\n    \r\n    if(buttons.length == 0)\r\n      buttons = [\r\n        {\r\n          text: 'OK',\r\n          handler: data => {\r\n            callBackOk();\r\n          }\r\n        },\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => {\r\n            callBackNo();\r\n          }\r\n        }\r\n      ];\r\n\r\n\r\n    this.nativeAlert = this.alertController.create({\r\n      header:'',\r\n      subHeader:'',\r\n      backdropDismiss,\r\n      keyboardClose,\r\n      message:'',\r\n      inputs,\r\n      buttons\r\n    }).then(alert => {\r\n      this.nativeAlert.present();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, catchError, timeout } from 'rxjs/operators';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { HTTP } from '@ionic-native/http/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DrugsAndMedicinesApiService {\r\n  private url = 'http://localhost:3000';\r\n  private token: string;\r\n  private getDrugsAndMedicinesPath = '/api/doctor/patient/doctor/pharma/getdata';\r\n  private getMedicationDataPath = '/api/doctor/patient/doctor/pharma/getMedication';\r\n  private getMedicationDefaultOptionsPath = '/api/doctor/patient/doctor/pharma/defaultOptions';\r\n  private saveMedicationDataPath = '/api/doctor/patient/medication/action';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private http: HTTP,\r\n    private platform: Platform\r\n  ) { }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  public getDrugsAndMedicines(encounter_no: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getDrugsAndMedicinesPath, params, headers)).pipe(\r\n        map((response: any) => {\r\n          const drugsAndMedicines = JSON.parse(response.data);\r\n          console.log('Drugs and Medicines: ', drugsAndMedicines);\r\n          return drugsAndMedicines;\r\n        }),\r\n        catchError((err: any, caught: Observable<Response>) => {\r\n          if (typeof err.error === 'string') {\r\n            try {\r\n              err.error = JSON.parse(err.error);\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          }\r\n          console.log('Drugs and Medicines error: ', err, caught);\r\n          return throwError(err);\r\n        })\r\n      );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('encounter_no', encounter_no),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get(this.url + this.getDrugsAndMedicinesPath, httpOptions).pipe(\r\n          map((response: any) => {\r\n            console.log('Drugs and Medicines: ', response);\r\n            return response;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            console.log('Drugs and Medicines error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  public getMedicationData(encounter_no: string, refno: string, item_id: string): Observable<any> {\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n        encounter_no,\r\n        refno,\r\n        item_id\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getMedicationDataPath, params, headers)).pipe(\r\n          map((response: any) => {\r\n            const medicineData = JSON.parse(response.data);\r\n            console.log('Medication data: ', medicineData);\r\n            return medicineData;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            if (typeof err.error === 'string') {\r\n              try {\r\n                err.error = JSON.parse(err.error);\r\n              } catch (e) {\r\n                // do nothing\r\n              }\r\n            }\r\n            console.log('Medication data error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams()\r\n          .set('encounter_no', encounter_no)\r\n          .set('refno', refno)\r\n          .set('item_id', item_id),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get(this.url + this.getMedicationDataPath, httpOptions).pipe(\r\n          map((response: any) => {\r\n            console.log('Medication data: ', response);\r\n            return response;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            console.log('Medication data error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n  }\r\n  \r\n\r\n  public getMedicationDefaultOptions(): Observable<any> {\r\n    console.log('API fetching: getMedicationDefaultOptions');\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const params = {\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.get(this.url + this.getMedicationDefaultOptionsPath, params, headers)).pipe(\r\n          map((response: any) => {\r\n            const medicineData = JSON.parse(response.data);\r\n            console.log('Medication data: ', medicineData);\r\n            return medicineData;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            if (typeof err.error === 'string') {\r\n              try {\r\n                err.error = JSON.parse(err.error);\r\n              } catch (e) {\r\n                // do nothing\r\n              }\r\n            }\r\n            console.log('Medication data error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    } else {\r\n      const httpOptions = {\r\n        params: new HttpParams(),\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.get(this.url + this.getMedicationDefaultOptionsPath, httpOptions).pipe(\r\n          map((response: any) => {\r\n            console.log('Medication data: ', response);\r\n            return response;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            console.log('Medication data error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n\t}\r\n\r\n  public saveMedicationData(medication: any): Observable<any> {\r\n    console.log(medication);\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      console.log('native');\r\n      const body = {\r\n        refno: medication.refno,\r\n        itemID: medication.item_id,\r\n        frequency: medication.frequency,\r\n        route: medication.route,\r\n        dosage: medication.dosage,\r\n        source: medication.source,\r\n        encounter_no: medication.encounter_no\r\n      };\r\n      const headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + this.token\r\n      };\r\n\r\n      return from(this.http.post(this.url + this.saveMedicationDataPath, body, headers)).pipe(\r\n          timeout(30000),\r\n          map((response: any) => {\r\n            const medicationData = JSON.parse(response.data);\r\n            console.log('Save Medication data: ', medicationData);\r\n            return medicationData;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            if (typeof err.error === 'string') {\r\n              try {\r\n                err.error = JSON.parse(err.error);\r\n              } catch (e) {\r\n                // do nothing\r\n              }\r\n            }\r\n            console.log('Save Medication data error: ', err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    } else {\r\n      const input = new FormData();\r\n      input.append('refno', medication.refno);\r\n      input.append('itemID', medication.item_id);\r\n      input.append('frequency', medication.frequency);\r\n      input.append('dosage', medication.dosage);\r\n      input.append('route', medication.route);\r\n      input.append('source', medication.source);\r\n      input.append('encounter_no', medication.encounter_no);\r\n\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer ' + this.token,\r\n          'Access-Control-Allow-Origin': '*',\r\n        })\r\n      };\r\n      return this.httpClient.post(this.url + this.saveMedicationDataPath, input, httpOptions).pipe(\r\n          timeout(30000),\r\n          map((response: any) => {\r\n            console.log('Entered saveMedicationData API:', response);\r\n            return response;\r\n          }),\r\n          catchError((err: any, caught: Observable<Response>) => {\r\n            console.log(err, caught);\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { defaults } from 'ngx-chips/defaults';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DrugsAndMedicinesDetailDataService {\r\n  detail: any;\r\n\r\n  constructor() { }\r\n\r\n  setDetails(detail: any) {\r\n    this.detail = detail;\r\n  }\r\n\r\n  getDetails() {\r\n    return this.detail;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~drugs-and-medicines-drugs-and-medicines-module~drugs-and-medicines-view-drugs-and-medicines-~44b7cc1b-es5.js"}