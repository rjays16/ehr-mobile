{"version":3,"sources":["src/app/pages/account-settings/account-settings.page.html","src/app/pages/account-settings/account-settings.module.ts","src/app/pages/account-settings/account-settings.page.scss","src/app/pages/account-settings/account-settings.page.ts","src/app/services/storage.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Settings</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Authentication</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Auto sign in</ion-label>\\r\\n      <ion-toggle [(ngModel)]=\\\"autoLogin\\\" (ionChange)=\\\"fnAutoLoginEvent()\\\"></ion-toggle>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Build {{env?.build}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AccountSettingsPage } from './account-settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountSettingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AccountSettingsPage]\r\n})\r\nexport class AccountSettingsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtc2V0dGluZ3MvYWNjb3VudC1zZXR0aW5ncy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { StorageService } from './../../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.page.html',\r\n  styleUrls: ['./account-settings.page.scss'],\r\n})\r\nexport class AccountSettingsPage implements OnInit {\r\n  env:any;\r\n  autoLogin:boolean = true;\r\n  constructor(\r\n    private storageService: StorageService,\r\n  ) { \r\n    this.env = environment;\r\n  }\r\n  ngOnInit() {\r\n    console.log('ngOnInit AccountSettingsPage');\r\n    this.storageService.get('isAutologin').then((val)=>{\r\n      if(val == null || val == \"null\")\r\n        val = true;\r\n      this.autoLogin = val;\r\n      console.log('isAutologin', this.autoLogin);\r\n    });\r\n  }\r\n\r\n  \r\n  fnAutoLoginEvent(){\r\n    this.storageService.setObject('isAutologin', this.autoLogin);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor(public storage: Storage) { }\r\n\r\n  async set(key: string, value: any): Promise<any> {\r\n    try {\r\n      const result = await this.storage.set(key, value);\r\n      console.log('set string in storage: ' + result);\r\n      return true;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async get(key: string): Promise<any> {\r\n    try {\r\n      const result = await this.storage.get(key);\r\n      console.log('storageGET: ' + key + ': ' + result);\r\n      if (result != null) {\r\n        return result;\r\n      }\r\n      return null;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async setObject(key: string, object: any) {\r\n    try {\r\n      const result = await this.storage.set(key, JSON.stringify(object));\r\n      console.log('set Object in storage: ' + result);\r\n      return true;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getObject(key: string): Promise<any> {\r\n    try {\r\n      const result = await this.storage.get(key);\r\n      if (result != null) {\r\n        return JSON.parse(result);\r\n      }\r\n      return null;\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.storage.remove(key);\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"account-settings-account-settings-module-es5.js"}