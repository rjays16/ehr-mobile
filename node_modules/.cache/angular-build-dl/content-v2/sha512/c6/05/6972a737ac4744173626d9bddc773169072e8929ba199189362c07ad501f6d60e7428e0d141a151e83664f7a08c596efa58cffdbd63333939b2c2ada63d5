function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~dashboard-dashboard-module~encounter-details-encounter-details-module~encounter-history-enco~acaa7485"], {
  /***/
  "./src/app/services/patient-api.service.ts":
  /*!*************************************************!*\
    !*** ./src/app/services/patient-api.service.ts ***!
    \*************************************************/

  /*! exports provided: PatientApiService */

  /***/
  function srcAppServicesPatientApiServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PatientApiService", function () {
      return PatientApiService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @ionic-native/http/ngx */
    "./node_modules/@ionic-native/http/ngx/index.js");

    var PatientApiService =
    /*#__PURE__*/
    function () {
      function PatientApiService(platform, httpClient, http) {
        _classCallCheck(this, PatientApiService);

        this.platform = platform;
        this.httpClient = httpClient;
        this.http = http;
        this.url = 'http://localhost:3000';
        this.patientListPath = '/api/doctor/patient/lists';
        this.myPatientListPath = '/api/doctor/favorite/patients';
        this.nursePatientListPath = '/api/nurse/patient/lists';
        this.doctorPatientInformationPath = '/api/doctor/patient/information';
        this.nursePatientInformationPath = '/api/nurse/patient/information';
        this.tagUntagPatientPath = '/api/doctor/tag/patient';
      }

      _createClass(PatientApiService, [{
        key: "setUrl",
        value: function setUrl(url) {
          this.url = url;
        }
      }, {
        key: "setToken",
        value: function setToken(token) {
          this.token = token;
        }
      }, {
        key: "getPatientList",
        value: function getPatientList(type, searchKey) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params;

            if (searchKey) {
              params = {
                patient_type: type,
                person_search: searchKey
              };
            } else {
              params = {
                patient_type: type
              };
            }

            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.patientListPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Patient List: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Patient List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');

            var _params;

            if (searchKey) {
              _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('patient_type', type.toLocaleUpperCase()).set('person_search', searchKey);
            } else {
              _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('patient_type', type.toLocaleUpperCase());
            }

            var httpOptions = {
              params: _params,
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                Accept: 'application/json',
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.patientListPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log(results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "getMyPatientList",
        value: function getMyPatientList() {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var headers = {
              Accept: 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.myPatientListPath, {}, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('My Patient List: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('My Patient List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');
            var httpOptions = {
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.myPatientListPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log(results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "getNursePatientList",
        value: function getNursePatientList(wardId, searchKey) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params;

            if (wardId) {
              params = {
                ward_search: wardId,
                person_search: searchKey
              };
            } else {
              params = {
                person_search: searchKey
              };
            }

            console.log('params: ', params);
            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            console.log('headers: ', headers);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.nursePatientListPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Patient List: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Patient List error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');

            var _params2;

            if (wardId) {
              _params2 = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('ward_search', wardId).set('person_search', searchKey);
            } else {
              _params2 = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('person_search', searchKey);
            }

            console.log('params: ', _params2);
            var httpOptions = {
              params: _params2,
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                Accept: 'application/json',
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            console.log('httpOptions', httpOptions);
            return this.httpClient.get(this.url + this.nursePatientListPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log(results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "getPatientProfileById",
        value: function getPatientProfileById(encounter_no) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              id: encounter_no
            };
            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.doctorPatientInformationPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Patient Profile: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Patient Profile error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');
            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('id', encounter_no),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            return this.httpClient.get(this.url + this.doctorPatientInformationPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log(results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "getPatientProfileByIdForNurse",
        value: function getPatientProfileByIdForNurse(encounter_no) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              id: encounter_no
            };
            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.nursePatientInformationPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Patient Profile: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Patient Profile error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');
            var httpOptions = {
              params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]().set('id', encounter_no),
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
              })
            };
            return this.httpClient.get(this.url + this.nursePatientInformationPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log(results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }, {
        key: "tagUntagPatient",
        value: function tagUntagPatient(encounter_no) {
          if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            var params = {
              encounter_no: encounter_no
            };
            var headers = {
              Accept: 'application/json',
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + this.token
            };
            this.http.setDataSerializer('json');
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.post(this.url + this.tagUntagPatientPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (response) {
              var responseData = JSON.parse(response.data);
              console.log('Untag Patient: ', responseData);
              return responseData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              if (typeof err.error === 'string') {
                try {
                  err.error = JSON.parse(err.error);
                } catch (e) {
                  console.log('err.error parse failed: ', e);
                }
              }

              console.log('Untag Patient error: ', err, caught);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          } else {
            console.log('browser');
            var input = new FormData();
            input.append('encounter_no', encounter_no);
            var httpOptions = {
              headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token,
                'Access-Control-Allow-Origin': '*'
              })
            };
            return this.httpClient.post(this.url + this.tagUntagPatientPath, input, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (results) {
              console.log('Entered tagUntagPatient API:', results);
              return results;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(function (err, caught) {
              console.log(caught);
              console.error(err);
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
          }
        }
      }]);

      return PatientApiService;
    }();

    PatientApiService.ctorParameters = function () {
      return [{
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["Platform"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
      }, {
        type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_6__["HTTP"]
      }];
    };

    PatientApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_5__["Platform"], _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_6__["HTTP"]])], PatientApiService);
    /***/
  }
}]);
//# sourceMappingURL=default~dashboard-dashboard-module~encounter-details-encounter-details-module~encounter-history-enco~acaa7485-es5.js.map