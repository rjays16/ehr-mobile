(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["dashboard-dashboard-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/dashboard/dashboard.page.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/dashboard/dashboard.page.html ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header no-border-bottom no-border-top no-border>\r\n  <ion-toolbar class=\"topToolbar\" color=\"dark\" no-border-bottom no-border-top no-border>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button color=\"light\" class=\"menuIcon\" menu=\"mainMenu\"></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>{{toolbarTitle}}</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button class=\"subIcons\" (click)=\"showNotifications()\">\r\n        <ion-icon slot=\"icon-only\" ios=\"ios-notifications\" md=\"md-notifications\"></ion-icon>\r\n      </ion-button>\r\n      <ion-menu-toggle menu=\"accountMenu\" >\r\n        <ion-button class=\"subIcons\">\r\n          <ion-icon slot=\"icon-only\" ios=\"ios-contact\" md=\"md-contact\" ></ion-icon>\r\n        </ion-button>\r\n      </ion-menu-toggle>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n  <ion-toolbar [hidden]=\"!isDoctor\" *ngIf=\"filterTab === 'all-patient'\" class=\"topToolbar\" color=\"dark\" no-border-bottom no-border-top no-border>\r\n    <div class=\"searchBar\">\r\n      <ion-select id=\"items\" [(ngModel)]=\"filterType\" interface=\"popover\" placeholder=\"All\" mode=\"ios\" (ngModelChange)=\"onTypeChange($event)\">\r\n        <ion-select-option *ngFor=\"let type of filterTypes\" value=\"{{type.id}}\">{{type.name}}</ion-select-option>\r\n      </ion-select>\r\n      <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterSearchKeyword\" (search)=\"onSearchInputChange($event)\">\r\n      </ion-searchbar>\r\n    </div>\r\n  </ion-toolbar>\r\n  <ion-toolbar [hidden]=\"!isNurse\" class=\"topToolbar\" color=\"dark\" no-border-bottom no-border-top no-border>\r\n    <div class=\"searchBar\">\r\n      <ion-select id=\"items\" [(ngModel)]=\"filterWard\" interface=\"popover\" placeholder=\"Ward\" mode=\"ios\" (ngModelChange)=\"onNurseSearchModeChange($event)\">\r\n        <ion-select-option value=\"WARD\">Ward</ion-select-option>\r\n        <ion-select-option value=\"PATIENT\">Patient</ion-select-option>\r\n      </ion-select>\r\n      <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterSearchKeyword\" (search)=\"onSearchInputChange($event)\">\r\n      </ion-searchbar>\r\n    </div>\r\n  </ion-toolbar>\r\n  <ion-toolbar *ngIf=\"isNurse && this.showWardSearch\" class=\"topToolbar\" color=\"dark\" no-border-bottom no-border-top no-border>\r\n    <div class=\"searchBar\">\r\n      <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterWardSearchKeyword\" (search)=\"onSearchInputChange($event)\" placeholder=\"Enter ward name here\" (ionChange)=\"onSearchWardChange($event)\" (ionBlur)=\"onSearchWardBlur()\" (ionFocus)=\"onSearchWardFocus()\">\r\n      </ion-searchbar>\r\n    </div>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-refresher slot=\"fixed\" pullFactor=\"0.5\" pullMin=\"100\" pullMax=\"200\" (ionRefresh)=\"doRefreshPatientList($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-list class=\"wardSuggestion\" *ngIf=\"showWardSuggestion\">\r\n    <ion-item *ngFor=\"let ward of filteredNurseWards; let i = index\" (click)=\"onSelectWard(i)\">\r\n      <ion-label>{{ward.name}}</ion-label>\r\n    </ion-item>\r\n  </ion-list>\r\n  <div class=\"testServer\" *ngIf=\"loginService.inTestServer\">\r\n    TEST SERVER CONECTED\r\n  </div>\r\n  <ion-list *ngIf=\"filterTab === 'all-patient' && isDoctor\" style=\"text-align:center\">\r\n    <div class=\"noresult\" *ngIf=\"patientList.length < 1\">\r\n      No result found\r\n    </div>\r\n    <div *ngIf=\"patientList.length >= 1\">\r\n      <ion-item class=\"ion-no-padding\" id=\"patientItem\" lines=\"full\" *ngFor=\"let patient of patientList\" (click)=\"onPatientSelect(patient)\">\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ere}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.is_discharged == 1 || !patient.deptenc_code || (patient.deptenc_code && !(patient.deptenc_code.toLowerCase().indexOf('ope') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ere') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ipe') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('phs') > -1))\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.discharged}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ope}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.phs}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ipe}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <ion-label class=\"patientInfoLabel\">\r\n          <h2 class=\"name\" style=\"white-space: normal;word-break: unset;\">{{patient.name_last}}, {{patient.name_first}} {{patient.name_middle}} {{patient.suffix}}</h2>\r\n          <h5 *ngIf=\"patient.is_discharged == 1\" [ngStyle]=\"{'color':encounterTypesColors.discharged}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ere}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ope}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.phs}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ipe}\">{{patient.pid}}</h5>\r\n          <div style=\"display: flex;\">\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1\">{{encounterTypes.ere}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1\">{{encounterTypes.ope}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1\">{{encounterTypes.ipe}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1\">{{otherEncounterTypes.phs}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code\">&nbsp;-&nbsp;</h5>\r\n            <h5>{{patient.area_desc}}</h5>\r\n          </div>\r\n          <h5 *ngIf=\"patient.encounter_date\">{{patient.encounter_date * 1000 | date: 'MMMM dd, yyyy'}}</h5>\r\n          <p *ngIf=\"patient.birth_date\">{{patient.birth_date * 1000 | date:'MMM dd, yyyy'}}&nbsp;{{patient.age}}</p>\r\n        </ion-label>\r\n        <ion-avatar *ngIf=\"filterTab === 'all-patient'\" slot=\"end\" id=\"star\">\r\n          <ion-icon style=\"font-size: xx-large;\" *ngIf=\"patient.is_favorite\" name=\"star-outline\" color=\"warning\"></ion-icon>\r\n          <ion-icon style=\"font-size: xx-large;\" *ngIf=\"!patient.is_favorite\" name=\"star-outline\" color=\"light\"></ion-icon>\r\n        </ion-avatar>\r\n      </ion-item>\r\n    </div>\r\n  </ion-list>\r\n  <ion-list *ngIf=\"filterTab === 'my-patient' && isDoctor\" style=\"text-align:center\">\r\n    <div class=\"noresult\" *ngIf=\"myPatientList.length < 1\">\r\n      No result found\r\n    </div>\r\n    <div *ngIf=\"myPatientList.length >= 1\">\r\n      <ion-item class=\"ion-no-padding\" id=\"patientItem\" lines=\"full\" *ngFor=\"let patient of myPatientList\" (click)=\"onPatientSelect(patient)\">\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ere}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.is_discharged == 1 || !patient.deptenc_code || (patient.deptenc_code && !(patient.deptenc_code.toLowerCase().indexOf('ope') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ere') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ipe') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('phs') > -1))\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.discharged}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ope}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.phs}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ipe}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <ion-label class=\"patientInfoLabel\">\r\n          <h2 class=\"name\" style=\"white-space: normal;word-break: unset;\">{{patient.name_last}}, {{patient.name_first}} {{patient.name_middle}} {{patient.suffix}}</h2>\r\n          <h5 *ngIf=\"patient.is_discharged == 1\" [ngStyle]=\"{'color':encounterTypesColors.discharged}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ere}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ope}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.phs}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ipe}\">{{patient.pid}}</h5>\r\n          <div style=\"display: flex;\">\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1\">{{encounterTypes.ere}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1\">{{encounterTypes.ope}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1\">{{encounterTypes.ipe}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1\">{{otherEncounterTypes.phs}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code\">&nbsp;-&nbsp;</h5>\r\n            <h5>{{patient.area_desc}}</h5>\r\n          </div>\r\n          <h5 *ngIf=\"patient.encounter_date\">{{patient.encounter_date * 1000 | date: 'MMMM dd, yyyy'}}</h5>\r\n          <p *ngIf=\"patient.birth_date\">{{patient.birth_date * 1000 | date: 'yyyy.MM.dd'}}&nbsp;{{patient.age}}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </div>\r\n  </ion-list>\r\n  <ion-list *ngIf=\"isNurse\" style=\"text-align:center\">\r\n    <div class=\"noresult\" *ngIf=\"nursePatientList.length < 1\">\r\n      No result found\r\n    </div>\r\n    <div *ngIf=\"nursePatientList.length >= 1\">\r\n      <ion-item class=\"ion-no-padding\" id=\"patientItem\" lines=\"full\" *ngFor=\"let patient of nursePatientList\" (click)=\"onPatientSelect(patient)\">\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ere}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.is_discharged == 1 || !patient.deptenc_code || (patient.deptenc_code && !(patient.deptenc_code.toLowerCase().indexOf('ope') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ere') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ipe') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('phs') > -1))\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.discharged}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ope}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.phs}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ipe}\">\r\n          <h1>{{patient.name_last?.charAt(0).toUpperCase()}}</h1>\r\n        </div>\r\n        <ion-label class=\"patientInfoLabel\">\r\n          <h2 class=\"name\" style=\"white-space: normal;word-break: unset;\">{{patient.name_last}}, {{patient.name_first}} {{patient.name_middle}} {{patient.suffix}}</h2>\r\n          <h5 *ngIf=\"patient.is_discharged == 1\" [ngStyle]=\"{'color':encounterTypesColors.discharged}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ere}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ope}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.phs}\">{{patient.pid}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ipe}\">{{patient.pid}}</h5>\r\n          <div style=\"display: flex;\">\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1\">{{encounterTypes.ere}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1\">{{encounterTypes.ope}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1\">{{otherEncounterTypes.phs}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1\">{{encounterTypes.ipe}}</h5>\r\n            <h5 *ngIf=\"patient.deptenc_code\">&nbsp;-&nbsp;</h5>\r\n            <h5>{{patient.area_desc}}</h5>\r\n          </div>\r\n          <h5 *ngIf=\"patient.encounter_date\">{{patient.encounter_date * 1000 | date: 'MMMM dd, yyyy'}}</h5>\r\n          <p *ngIf=\"patient.birth_date\">{{patient.birth_date * 1000 | date: 'yyyy.MM.dd'}}&nbsp;{{patient.age}}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </div>\r\n  </ion-list>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar [hidden]=\"!isDoctor\">\r\n    <ion-segment [(ngModel)]=\"filterTab\" (ionChange)=\"onSegmentChange($event)\">\r\n      <ion-segment-button value=\"all-patient\" style=\"text-transform: none;\">\r\n        <ion-icon name=\"contacts\"></ion-icon>\r\n        <ion-label>All Patient</ion-label>\r\n      </ion-segment-button>\r\n      <ion-segment-button value=\"my-patient\" style=\"text-transform: none;\">\r\n        <ion-icon name=\"star-outline\"></ion-icon>\r\n        <ion-label>My Patient</ion-label>\r\n      </ion-segment-button>\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n");

/***/ }),

/***/ "./src/app/pages/dashboard/dashboard.module.ts":
/*!*****************************************************!*\
  !*** ./src/app/pages/dashboard/dashboard.module.ts ***!
  \*****************************************************/
/*! exports provided: DashboardPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardPageModule", function() { return DashboardPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _dashboard_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dashboard.page */ "./src/app/pages/dashboard/dashboard.page.ts");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/dist/ngx-pagination.js");








const routes = [
    {
        path: '',
        component: _dashboard_page__WEBPACK_IMPORTED_MODULE_6__["DashboardPage"]
    }
];
let DashboardPageModule = class DashboardPageModule {
};
DashboardPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes),
            ngx_pagination__WEBPACK_IMPORTED_MODULE_7__["NgxPaginationModule"]
        ],
        declarations: [_dashboard_page__WEBPACK_IMPORTED_MODULE_6__["DashboardPage"]]
    })
], DashboardPageModule);



/***/ }),

/***/ "./src/app/pages/dashboard/dashboard.page.scss":
/*!*****************************************************!*\
  !*** ./src/app/pages/dashboard/dashboard.page.scss ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-header ion-title {\n  text-align: center;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n}\nion-header .topToolbar {\n  box-shadow: none;\n  border: none;\n  --background: #3C3F52;\n}\nion-header .searchBar {\n  background: #3C3F52;\n  display: -webkit-box;\n  display: flex;\n  width: 100%;\n}\nion-header .menuIcon {\n  --padding-top: 0px !important;\n  --padding-end: 0px !important;\n  --padding-bottom: 0px !important;\n  --padding-start: 0px !important;\n  --border-radius: 50% !important;\n  margin-left: 0 !important;\n  margin-right: 0 !important;\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n  width: 36px !important;\n  height: 36px !important;\n}\nion-header .subIcons {\n  --padding-top: 4px !important;\n  --padding-end: 4px !important;\n  --padding-bottom: 4px !important;\n  --padding-start: 4px !important;\n  --border-radius: 50% !important;\n  margin-left: 0 !important;\n  margin-right: 2px !important;\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n  width: 30px !important;\n  height: 30px !important;\n}\n.toolbar-background {\n  border: none;\n}\n#items {\n  color: white;\n  margin: 0px;\n  width: 35vw;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n}\nion-refresher {\n  z-index: 1;\n}\nion-content {\n  overflow: hidden;\n  background: white;\n  height: 100%;\n  width: 100%;\n}\nion-content .wardSuggestion {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  max-height: 30vh;\n}\nion-content .patientInfoLabel {\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n}\nion-content .patientInfoLabel .name {\n  font-weight: bold;\n  color: #3C3F52;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\nion-content .patientInfoLabel h5 {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\nion-content .patientInfoLabel p {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\nion-content .noresult {\n  color: #949494;\n  font-size: larger;\n  margin-top: 3vh;\n  font-style: italic;\n}\n.pager {\n  --background: red !important;\n  font-size: 3vh;\n}\n#avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  margin-left: 10px !important;\n  margin-right: 10px;\n  display: table;\n}\n#avatar h1 {\n  display: table-cell;\n  text-align: center;\n  vertical-align: middle;\n  color: white;\n  font-weight: bold;\n}\n#star {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n}\nion-segment ion-segment-button {\n  padding-left: 10px;\n  padding-right: 10px;\n  max-width: 100%;\n}\nion-segment ion-segment-button p {\n  font-weight: 600;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/pages/dashboard/dashboard.page.ts":
/*!***************************************************!*\
  !*** ./src/app/pages/dashboard/dashboard.page.ts ***!
  \***************************************************/
/*! exports provided: DashboardPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardPage", function() { return DashboardPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/patient-api.service */ "./src/app/services/patient-api.service.ts");
/* harmony import */ var _services_patient_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../services/patient.service */ "./src/app/services/patient.service.ts");
/* harmony import */ var _services_login_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../services/login.service */ "./src/app/services/login.service.ts");
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../services/api.service */ "./src/app/services/api.service.ts");
/* harmony import */ var _services_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../services/storage.service */ "./src/app/services/storage.service.ts");
/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../services/loading.service */ "./src/app/services/loading.service.ts");
/* harmony import */ var _services_string_utils_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../services/string-utils.service */ "./src/app/services/string-utils.service.ts");
/* harmony import */ var _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../services/permission-validator.service */ "./src/app/services/permission-validator.service.ts");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var src_app_app_services_update_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/app/services/update-service.service */ "./src/app/app/services/update-service.service.ts");
/* harmony import */ var src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/app/services/alert-service.service */ "./src/app/app/services/alert-service.service.ts");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
















let DashboardPage = class DashboardPage {
    constructor(patientApiService, patientService, loginService, apiService, storageService, loadingService, stringUtilsService, permissionValidatorService, events, router, menuService, menuController, updateServ, alertServ) {
        this.patientApiService = patientApiService;
        this.patientService = patientService;
        this.loginService = loginService;
        this.apiService = apiService;
        this.storageService = storageService;
        this.loadingService = loadingService;
        this.stringUtilsService = stringUtilsService;
        this.permissionValidatorService = permissionValidatorService;
        this.events = events;
        this.router = router;
        this.menuService = menuService;
        this.menuController = menuController;
        this.updateServ = updateServ;
        this.alertServ = alertServ;
        this.patientList = [];
        this.myPatientList = [];
        this.nursePatientList = [];
        this.filterSearchKeyword = '';
        this.filterType = 'ALL';
        this.filterTab = 'all-patient';
        this.filterWard = 'PATIENT';
        this.filterWardSearchKeyword = '';
        this.toolbarTitle = 'Doctor\'s Dashboard';
        this.showWardSearch = false;
        this.showWardSuggestion = false;
        this.isNurse = false;
        this.isDoctor = true;
        console.log('dashboard');
        const authentication = this.loginService.getAuthentication();
        this.patientApiService.setUrl(this.apiService.getUrl());
        this.patientApiService.setToken(authentication.token);
        const role = authentication.user.role.role_name;
        this.isNurse = role.toLocaleLowerCase().indexOf('nurse') !== -1;
        this.isDoctor = !this.isNurse;
        if (this.isNurse) {
            this.toolbarTitle = 'Nurse\'s Dashboard';
            this.getNursePatientList();
        }
        else if (this.isDoctor) {
            // this.getPatientList();  //prevent initial loading of patients
        }
        const wardsConfig = this.loginService.getConfigAndDefaults().wards;
        this.nurseWards = wardsConfig['m-patient-wards-lists']['default-options']['nurse-wards'].wards;
        console.log('this.nurseWards', this.nurseWards);
        const patientlistConfig = this.loginService.getConfigAndDefaults().patientlist;
        this.encounterTypes = patientlistConfig['m-patient-list']['default-options']['encounter-types'];
        this.otherEncounterTypes = patientlistConfig['m-patient-list']['default-options']['other-encounter-types'];
        this.encounterTypesColors = patientlistConfig['m-patient-list']['default-options']['encounter-types-color'];
        this.filterTypes = [];
        this.filterTypes.push({
            id: 'ALL',
            name: 'All'
        });
        Object.keys(this.encounterTypes).forEach(key => {
            this.filterTypes.push({
                id: key,
                name: this.encounterTypes[key]
            });
        });
        this.updateServ.checkCodePush();
    }
    ionViewWillEnter() {
        console.log('ionViewWillEnter');
        const tempSelectedEncounterNo = this.patientService.getSelectedEncounterNo();
        if (tempSelectedEncounterNo) {
            console.log('de selectedPatient');
            this.patientService.setSelectedPatientBriefInformation(null);
            this.patientService.setSelectedEncounterNo('');
            this.events.publish('patient:selected', '', Date.now());
        }
        this.menuService.initMenuByConfig();
        // window.addEventListener('native.keyboardshow', this.keyboardShowHandler);
        // window.addEventListener('native.keyboardhide', this.keyboardHideHandler);
        setTimeout(() => {
            try {
                this.menuController.swipeGesture(true, 'mainMenu');
                this.menuController.swipeGesture(true, 'accountMenu');
            }
            catch (err) {
                console.log(err);
            }
        }, 1500);
    }
    ionViewWillLeave() {
        console.log('ionViewWillLeave');
        // window.removeEventListener('native.keyboardshow', this.keyboardShowHandler);
        // window.removeEventListener('native.keyboardhide', this.keyboardHideHandler);
        // this.removeIonAppStyles();
    }
    ngOnInit() {
    }
    loadPreviousFilter() {
        if (this.isDoctor) {
            this.filterType = this.patientService.getType();
        }
        else if (this.isNurse) {
            this.filterWard = this.patientService.getWard();
        }
        this.filterSearchKeyword = this.patientService.getSearchKeyword();
    }
    sortList(array, key) {
        return array.sort((a, b) => {
            if (a[key] < b[key]) {
                return -1;
            }
            if (a[key] > b[key]) {
                return 1;
            }
            return 0;
        });
    }
    onPatientSelect(selectedPatient) {
        console.log(selectedPatient);
        if (this.isDoctor) {
            this.loadingService.present();
            this.patientApiService.getPatientProfileById(selectedPatient.encounter_no).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    this.patientService.setSelectedPatientBriefInformation(result);
                    this.patientService.setSelectedEncounterNo(result.encounter_no);
                    this.permissionValidatorService.setSelectedPatient(result);
                    this.events.publish('patient:selected', result, Date.now());
                    this.router.navigate(['/menu/patient-profile']);
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                });
            });
        }
        else if (this.isNurse) {
            this.loadingService.present();
            this.patientApiService.getPatientProfileByIdForNurse(selectedPatient.encounter_no).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    this.patientService.setSelectedPatientBriefInformation(result);
                    this.patientService.setSelectedEncounterNo(result.encounter_no);
                    this.permissionValidatorService.setSelectedPatient(result);
                    this.events.publish('patient:selected', result, Date.now());
                    this.router.navigate(['/menu/patient-profile-nurse']);
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                });
            });
        }
    }
    onSegmentChange(event) {
        console.log('onSegmentChange: ', event);
        console.log('filterTab: ', this.filterTab);
        this.filterBySegment(event.detail.value);
    }
    filterBySegment(segment) {
        if ('my-patient' === segment) {
            if (this.patientService.getMyPatientList()) {
                this.myPatientList = this.patientService.getMyPatientList();
                this.loadPreviousFilter();
            }
            else {
                this.getMyPatientList();
            }
        }
    }
    onTypeChange(event) {
        console.log(event);
        this.getPatientList();
    }
    onSearchInputChange(event) {
        console.log(event);
        if (this.isDoctor) {
            this.getPatientList();
        }
        else if (this.isNurse) {
            this.filterWardSearchId = '';
            if (this.filterWardSearchKeyword) {
                const selectedWard = this.nurseWards.find(item => {
                    return item.name.toLocaleLowerCase() === this.filterWardSearchKeyword.toLocaleLowerCase();
                });
                if (!selectedWard) {
                    this.alertServ.openAlertModal('fail', 'Failed', 'Please input proper ward name!', 'Ok');
                    return;
                }
                this.filterWardSearchId = selectedWard.nr.toString();
            }
            this.getNursePatientList();
        }
    }
    onNurseSearchModeChange(event) {
        this.showWardSearch = this.filterWard === 'WARD';
    }
    onSearchWardBlur() {
        if (this.filterWardSearchKeyword.length <= 0) {
            this.showWardSuggestion = false;
        }
    }
    onSearchWardFocus() {
        this.showWardSuggestion = true;
    }
    onSelectWard(i) {
        console.log(this.filteredNurseWards[i]);
        const selectedWard = this.filteredNurseWards[i];
        this.filterWardSearchKeyword = selectedWard.name;
        this.showWardSuggestion = false;
    }
    onSearchWardChange(event) {
        this.filterWardSearchId = '';
        if (this.filterWardSearchKeyword) {
            this.showWardSuggestion = true;
            this.filteredNurseWards = this.nurseWards.filter(ward => {
                return ward.name.toLocaleLowerCase().indexOf(this.filterWardSearchKeyword.toLocaleLowerCase()) !== -1;
            });
        }
        else {
            this.showWardSuggestion = false;
        }
    }
    getPatientList() {
        return new Promise((resolve, reject) => {
            if (this.filterSearchKeyword.trim() == "" || !(this.filterSearchKeyword)) {
                resolve([]);
            }
            else {
                console.log('present loading: ', this.filterType, this.filterSearchKeyword);
                this.loadingService.present();
                this.patientApiService.getPatientList(this.filterType, this.filterSearchKeyword).subscribe((result) => {
                    console.log(result);
                    this.loadingService.dismiss().then(_ => {
                        if (result.length > 0) {
                            result.forEach(patient => {
                                // check birth_date is valid date, if not remove birth_date key
                                if (patient.birth_date) {
                                    const date = moment__WEBPACK_IMPORTED_MODULE_12__(patient.birth_date);
                                    if (!date.isValid()) {
                                        delete patient.birth_date;
                                    }
                                }
                            });
                        }
                        this.patientList = result;
                        console.log('this.patientList', this.patientList);
                        this.patientService.setPatientList(this.patientList);
                        resolve(result);
                    });
                }, (err) => {
                    console.log('err ', err);
                    this.loadingService.dismiss().then(_ => {
                        const message = this.stringUtilsService.parseErrorMessage(err);
                        this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                        reject(err);
                    });
                });
            }
        });
    }
    getMyPatientList() {
        return new Promise((resolve, reject) => {
            this.loadingService.present();
            this.patientApiService.getMyPatientList().subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    if (result.length > 0) {
                        result.forEach(patient => {
                            // check birth_date is valid date, if not remove birth_date key
                            if (patient.birth_date) {
                                const date = moment__WEBPACK_IMPORTED_MODULE_12__(patient.birth_date);
                                if (!date.isValid()) {
                                    delete patient.birth_date;
                                }
                            }
                        });
                    }
                    this.myPatientList = result;
                    this.patientService.setMyPatientList(this.myPatientList);
                    resolve(result);
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                    reject(err);
                });
            });
        });
    }
    getNursePatientList() {
        return new Promise((resolve, reject) => {
            console.log('getNursePatientList: ', this.filterWardSearchId, this.filterSearchKeyword);
            this.loadingService.present();
            this.patientApiService.getNursePatientList(this.filterWardSearchId, this.filterSearchKeyword).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    if (result.length > 0) {
                        result.forEach(patient => {
                            // check birth_date is valid date, if not remove birth_date key
                            if (patient.birth_date) {
                                const date = moment__WEBPACK_IMPORTED_MODULE_12__(patient.birth_date);
                                if (!date.isValid()) {
                                    delete patient.birth_date;
                                }
                            }
                        });
                    }
                    this.nursePatientList = result;
                    this.patientService.setNursePatientList(this.nursePatientList);
                    resolve(result);
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                    reject(err);
                });
            });
        });
    }
    doRefreshPatientList(event) {
        if (this.filterTab === 'all-patient' && this.isDoctor) {
            const currentFilterType = this.filterType;
            this.getPatientList().then(_ => {
                event.target.complete();
                this.filterType = currentFilterType;
            }, (_) => {
                event.target.complete();
            });
        }
        else if (this.filterTab === 'my-patient' && this.isDoctor) {
            this.getMyPatientList().then(_ => {
                event.target.complete();
            }, (_) => {
                event.target.complete();
            });
        }
        else if (this.isNurse) {
            const currentFilterWard = this.filterWard;
            this.getNursePatientList().then(_ => {
                event.target.complete();
                this.filterWard = currentFilterWard;
            }, (_) => {
                event.target.complete();
            });
        }
    }
    showNotifications() {
        // do nothing
    }
    tapCoordinates(e) {
        this.y = e.touches[0].clientY;
        this.h = window.innerHeight;
        this.offsetY = (this.h - this.y);
        console.log('offset: ', this.offsetY);
    }
    keyboardShowHandler(e) {
        const kH = e.keyboardHeight;
        console.log('show: ', e.keyboardHeight);
        const bodyMove = document.querySelector('ion-app'), bodyMoveStyle = bodyMove.style;
        // Adjust full keyboard height
        bodyMoveStyle.bottom = kH + 'px';
        /*
        if (this.offsetY < kH + 40) {
          bodyMoveStyle.bottom = (kH - this.offsetY + 40) + 'px';
          // bodyMoveStyle.top = 'initial';
        }
        */
        console.log(bodyMoveStyle.bottom);
    }
    keyboardHideHandler() {
        console.log('gone');
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
    removeIonAppStyles() {
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
};
DashboardPage.ctorParameters = () => [
    { type: _services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__["PatientApiService"] },
    { type: _services_patient_service__WEBPACK_IMPORTED_MODULE_3__["PatientService"] },
    { type: _services_login_service__WEBPACK_IMPORTED_MODULE_4__["LoginService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: _services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageService"] },
    { type: _services_loading_service__WEBPACK_IMPORTED_MODULE_7__["LoadingService"] },
    { type: _services_string_utils_service__WEBPACK_IMPORTED_MODULE_8__["StringUtilsService"] },
    { type: _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_9__["PermissionValidatorService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__["Events"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_15__["MenuService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__["MenuController"] },
    { type: src_app_app_services_update_service_service__WEBPACK_IMPORTED_MODULE_13__["UpdateServiceService"] },
    { type: src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__["AlertServiceService"] }
];
DashboardPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dashboard',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./dashboard.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/dashboard/dashboard.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./dashboard.page.scss */ "./src/app/pages/dashboard/dashboard.page.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__["PatientApiService"],
        _services_patient_service__WEBPACK_IMPORTED_MODULE_3__["PatientService"],
        _services_login_service__WEBPACK_IMPORTED_MODULE_4__["LoginService"],
        _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"],
        _services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageService"],
        _services_loading_service__WEBPACK_IMPORTED_MODULE_7__["LoadingService"],
        _services_string_utils_service__WEBPACK_IMPORTED_MODULE_8__["StringUtilsService"],
        _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_9__["PermissionValidatorService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_10__["Events"],
        _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"],
        src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_15__["MenuService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_10__["MenuController"],
        src_app_app_services_update_service_service__WEBPACK_IMPORTED_MODULE_13__["UpdateServiceService"],
        src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_14__["AlertServiceService"]])
], DashboardPage);



/***/ })

}]);
//# sourceMappingURL=dashboard-dashboard-module-es2015.js.map