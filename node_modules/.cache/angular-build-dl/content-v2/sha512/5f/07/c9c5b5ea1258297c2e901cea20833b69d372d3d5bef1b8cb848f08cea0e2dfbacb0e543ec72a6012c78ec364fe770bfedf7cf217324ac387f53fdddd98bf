(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~drugs-and-medicines-drugs-and-medicines-module~drugs-and-medicines-view-drugs-and-medicines-~44b7cc1b"],{

/***/ "./src/app/app/services/alert-service.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/app/services/alert-service.service.ts ***!
  \*******************************************************/
/*! exports provided: AlertServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertServiceService", function() { return AlertServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/pages/prompt-modal/prompt-modal.page */ "./src/app/pages/prompt-modal/prompt-modal.page.ts");
/* harmony import */ var src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/pages/prompt-modal-c/prompt-modal-c.page */ "./src/app/pages/prompt-modal-c/prompt-modal-c.page.ts");





let AlertServiceService = class AlertServiceService {
    constructor(toastCtrl, modalController, alertController) {
        this.toastCtrl = toastCtrl;
        this.modalController = modalController;
        this.alertController = alertController;
    }
    alertToast(message) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            console.log('AlertToast Message:', message);
            const toast = yield this.toastCtrl.create({
                message: message,
                duration: 8000
            });
            toast.onclick = (ev) => {
                toast.dismiss();
            };
            toast.present();
        });
    }
    openAlertModalValidation(alert, title, message, messageArray, ok = 'Done', okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                cssClass: 'my-custom-modal-array-css',
                componentProps: {
                    alert,
                    title,
                    message,
                    messageArray,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    openSearchModal(options = [], value = "", placeholder = "Enter here...", maxLength = null, okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__["PromptModalCPage"],
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    searchData: {
                        isForSearch: true,
                        libs: options,
                        searchQuery: value,
                        maxLength: maxLength,
                        placeholder: placeholder
                    },
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    openPromptModal(title, message, ok = 'Save', okCallBack = (result) => { }, cancel = 'Cancel', cancelCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    prompt,
                    title,
                    message,
                    cancel,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
                cancelCallBack(result);
            });
            return yield modal.present();
        });
    }
    openAlertModal(alert, title, message, ok = 'Done', okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                // cssClass: 'auto-height',
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    alert,
                    title,
                    message,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    prompNAlert(header = '', subHeader = '', message = '', inputs = [], buttons = [], backdropDismiss = true, keyboardClose = true) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.nativeAlert = this.alertController.create({
                header,
                subHeader,
                message,
                backdropDismiss,
                keyboardClose,
                inputs,
                buttons
            }).then(alert => {
                this.nativeAlert.present();
            });
        });
    }
    prompInputNAlert(header = '', subHeader = '', message = '', backdropDismiss = true, keyboardClose = true, inputs = [], buttons = [], callBackOk = () => { }, callBackNo = () => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            if (buttons.length == 0)
                buttons = [
                    {
                        text: 'OK',
                        handler: data => {
                            callBackOk();
                        }
                    },
                    {
                        text: 'Cancel',
                        handler: data => {
                            callBackNo();
                        }
                    }
                ];
            this.nativeAlert = this.alertController.create({
                header: '',
                subHeader: '',
                backdropDismiss,
                keyboardClose,
                message: '',
                inputs,
                buttons
            }).then(alert => {
                this.nativeAlert.present();
            });
        });
    }
};
AlertServiceService.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"] }
];
AlertServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"]])
], AlertServiceService);



/***/ }),

/***/ "./src/app/services/drugs-and-medicines-api.service.ts":
/*!*************************************************************!*\
  !*** ./src/app/services/drugs-and-medicines-api.service.ts ***!
  \*************************************************************/
/*! exports provided: DrugsAndMedicinesApiService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DrugsAndMedicinesApiService", function() { return DrugsAndMedicinesApiService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic-native/http/ngx */ "./node_modules/@ionic-native/http/ngx/index.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");







let DrugsAndMedicinesApiService = class DrugsAndMedicinesApiService {
    constructor(httpClient, http, platform) {
        this.httpClient = httpClient;
        this.http = http;
        this.platform = platform;
        this.url = 'http://localhost:3000';
        this.getDrugsAndMedicinesPath = '/api/doctor/patient/doctor/pharma/getdata';
        this.getMedicationDataPath = '/api/doctor/patient/doctor/pharma/getMedication';
        this.getMedicationDefaultOptionsPath = '/api/doctor/patient/doctor/pharma/defaultOptions';
        this.saveMedicationDataPath = '/api/doctor/patient/medication/action';
    }
    setUrl(url) {
        this.url = url;
    }
    setToken(token) {
        this.token = token;
    }
    getDrugsAndMedicines(encounter_no) {
        if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            const params = {
                encounter_no
            };
            const headers = {
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.getDrugsAndMedicinesPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                const drugsAndMedicines = JSON.parse(response.data);
                console.log('Drugs and Medicines: ', drugsAndMedicines);
                return drugsAndMedicines;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                if (typeof err.error === 'string') {
                    try {
                        err.error = JSON.parse(err.error);
                    }
                    catch (e) {
                        // do nothing
                    }
                }
                console.log('Drugs and Medicines error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
        else {
            const httpOptions = {
                params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]()
                    .set('encounter_no', encounter_no),
                headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                    Accept: 'application/json',
                    Authorization: 'Bearer ' + this.token,
                    'Access-Control-Allow-Origin': '*',
                })
            };
            return this.httpClient.get(this.url + this.getDrugsAndMedicinesPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                console.log('Drugs and Medicines: ', response);
                return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                console.log('Drugs and Medicines error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
    }
    getMedicationData(encounter_no, refno, item_id) {
        if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            const params = {
                encounter_no,
                refno,
                item_id
            };
            const headers = {
                Accept: 'application/json',
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.getMedicationDataPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                const medicineData = JSON.parse(response.data);
                console.log('Medication data: ', medicineData);
                return medicineData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                if (typeof err.error === 'string') {
                    try {
                        err.error = JSON.parse(err.error);
                    }
                    catch (e) {
                        // do nothing
                    }
                }
                console.log('Medication data error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
        else {
            const httpOptions = {
                params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"]()
                    .set('encounter_no', encounter_no)
                    .set('refno', refno)
                    .set('item_id', item_id),
                headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                    Accept: 'application/json',
                    Authorization: 'Bearer ' + this.token,
                    'Access-Control-Allow-Origin': '*',
                })
            };
            return this.httpClient.get(this.url + this.getMedicationDataPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                console.log('Medication data: ', response);
                return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                console.log('Medication data error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
    }
    getMedicationDefaultOptions() {
        console.log('API fetching: getMedicationDefaultOptions');
        if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            const params = {};
            const headers = {
                Accept: 'application/json',
                'Content-Type': 'application/json',
                Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.get(this.url + this.getMedicationDefaultOptionsPath, params, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                const medicineData = JSON.parse(response.data);
                console.log('Medication data: ', medicineData);
                return medicineData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                if (typeof err.error === 'string') {
                    try {
                        err.error = JSON.parse(err.error);
                    }
                    catch (e) {
                        // do nothing
                    }
                }
                console.log('Medication data error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
        else {
            const httpOptions = {
                params: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpParams"](),
                headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                    Accept: 'application/json',
                    Authorization: 'Bearer ' + this.token,
                    'Access-Control-Allow-Origin': '*',
                })
            };
            return this.httpClient.get(this.url + this.getMedicationDefaultOptionsPath, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                console.log('Medication data: ', response);
                return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                console.log('Medication data error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
    }
    saveMedicationData(medication) {
        console.log(medication);
        if (this.platform.is('ios') || this.platform.is('android')) {
            console.log('native');
            const body = {
                refno: medication.refno,
                itemID: medication.item_id,
                frequency: medication.frequency,
                route: medication.route,
                dosage: medication.dosage,
                source: medication.source,
                encounter_no: medication.encounter_no
            };
            const headers = {
                Accept: 'application/json',
                Authorization: 'Bearer ' + this.token
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.http.post(this.url + this.saveMedicationDataPath, body, headers)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                const medicationData = JSON.parse(response.data);
                console.log('Save Medication data: ', medicationData);
                return medicationData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                if (typeof err.error === 'string') {
                    try {
                        err.error = JSON.parse(err.error);
                    }
                    catch (e) {
                        // do nothing
                    }
                }
                console.log('Save Medication data error: ', err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
        else {
            const input = new FormData();
            input.append('refno', medication.refno);
            input.append('itemID', medication.item_id);
            input.append('frequency', medication.frequency);
            input.append('dosage', medication.dosage);
            input.append('route', medication.route);
            input.append('source', medication.source);
            input.append('encounter_no', medication.encounter_no);
            const httpOptions = {
                headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
                    Accept: 'application/json',
                    Authorization: 'Bearer ' + this.token,
                    'Access-Control-Allow-Origin': '*',
                })
            };
            return this.httpClient.post(this.url + this.saveMedicationDataPath, input, httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["timeout"])(30000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((response) => {
                console.log('Entered saveMedicationData API:', response);
                return response;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((err, caught) => {
                console.log(err, caught);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
            }));
        }
    }
};
DrugsAndMedicinesApiService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"] },
    { type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__["HTTP"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["Platform"] }
];
DrugsAndMedicinesApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"],
        _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__["HTTP"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["Platform"]])
], DrugsAndMedicinesApiService);



/***/ }),

/***/ "./src/app/services/drugs-and-medicines-detail-data.service.ts":
/*!*********************************************************************!*\
  !*** ./src/app/services/drugs-and-medicines-detail-data.service.ts ***!
  \*********************************************************************/
/*! exports provided: DrugsAndMedicinesDetailDataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DrugsAndMedicinesDetailDataService", function() { return DrugsAndMedicinesDetailDataService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let DrugsAndMedicinesDetailDataService = class DrugsAndMedicinesDetailDataService {
    constructor() { }
    setDetails(detail) {
        this.detail = detail;
    }
    getDetails() {
        return this.detail;
    }
};
DrugsAndMedicinesDetailDataService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], DrugsAndMedicinesDetailDataService);



/***/ })

}]);
//# sourceMappingURL=default~drugs-and-medicines-drugs-and-medicines-module~drugs-and-medicines-view-drugs-and-medicines-~44b7cc1b-es2015.js.map