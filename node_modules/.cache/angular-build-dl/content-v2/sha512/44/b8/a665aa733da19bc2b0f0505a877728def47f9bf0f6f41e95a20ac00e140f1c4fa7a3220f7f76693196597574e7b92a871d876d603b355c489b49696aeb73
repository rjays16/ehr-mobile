(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["quick-search-quick-search-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/quick-search/quick-search.page.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/quick-search/quick-search.page.html ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\r\n  <ion-toolbar class=\"topToolbar\">\r\n      <ion-buttons slot=\"start\">\r\n        <ion-back-button></ion-back-button>\r\n      </ion-buttons>\r\n      <div class=\"searchBar\" [hidden]=\"!isDoctor\">\r\n        <ion-select id=\"items\" [(ngModel)]=\"filterType\" interface=\"popover\" placeholder=\"All\" mode=\"ios\" (ngModelChange)=\"onTypeChange($event)\">\r\n          <ion-select-option value=\"ALL\">All</ion-select-option>\r\n          <ion-select-option value=\"ERE\">ER</ion-select-option>\r\n          <ion-select-option value=\"IPE\">IPD</ion-select-option>\r\n          <ion-select-option value=\"OPE\">OPD</ion-select-option>\r\n        </ion-select>\r\n        <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterSearchKeyword\" (search)=\"onSearchInputChange($event)\">\r\n        </ion-searchbar>\r\n      </div>\r\n      <div class=\"searchBar\" [hidden]=\"!isNurse\">\r\n        <ion-select id=\"items\" [(ngModel)]=\"filterWard\" interface=\"popover\" placeholder=\"Ward\" mode=\"ios\" (ngModelChange)=\"onNurseSearchModeChange($event)\">\r\n          <ion-select-option value=\"WARD\">Ward</ion-select-option>\r\n          <ion-select-option value=\"PATIENT\">Patient</ion-select-option>\r\n        </ion-select>\r\n        <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterSearchKeyword\" (search)=\"onSearchInputChange($event)\">\r\n        </ion-searchbar>\r\n      </div>\r\n  </ion-toolbar>\r\n  <ion-toolbar *ngIf=\"isNurse && this.showWardSearch\" class=\"topToolbar\" color=\"dark\" no-border-bottom no-border-top no-border>\r\n    <div class=\"searchBarWard\">\r\n      <ion-searchbar cancelButtonText=\"\" color=\"dark\" mode=\"ios\" showCancelButton=\"focus\" [(ngModel)]=\"filterWardSearchKeyword\" (search)=\"onSearchInputChange($event)\" placeholder=\"Enter ward name here\" (ionChange)=\"onSearchWardChange($event)\" (ionBlur)=\"onSearchWardBlur()\" (ionFocus)=\"onSearchWardFocus()\">\r\n      </ion-searchbar>\r\n    </div>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ion-list class=\"wardSuggestion\" *ngIf=\"showWardSuggestion\">\r\n    <ion-item *ngFor=\"let ward of filteredNurseWards; let i = index\" (click)=\"onSelectWard(i)\">\r\n      <ion-label>{{ward.name}}</ion-label>\r\n    </ion-item>\r\n  </ion-list>\r\n  <ion-list style=\"text-align:center\">\r\n    <ion-item class=\"ion-no-padding\" id=\"patientItem\" lines=\"full\" *ngFor=\"let patient of patientList\" (click)=\"onPatientSelect(patient)\">\r\n      <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ere}\">\r\n        <h1>{{patient.name_last.charAt(0).toUpperCase()}}</h1>\r\n      </div>\r\n      <div *ngIf=\"patient.is_discharged == 1 || !patient.deptenc_code || (patient.deptenc_code && !(patient.deptenc_code.toLowerCase().indexOf('ope') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ere') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('ipe') > -1) && !(patient.deptenc_code.toLowerCase().indexOf('phs') > -1))\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.discharged}\">\r\n        <h1>{{patient.name_last.charAt(0).toUpperCase()}}</h1>\r\n      </div>\r\n      <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ope}\">\r\n        <h1>{{patient.name_last.charAt(0).toUpperCase()}}</h1>\r\n      </div>\r\n      <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.ipe}\">\r\n        <h1>{{patient.name_last.charAt(0).toUpperCase()}}</h1>\r\n      </div>\r\n      <div *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" id=\"avatar\" slot=\"start\" [ngStyle]=\"{'background-color':encounterTypesColors.phs}\">\r\n        <h1>{{patient.name_last.charAt(0).toUpperCase()}}</h1>\r\n      </div>\r\n      <ion-label class=\"patientInfoLabel\">\r\n        <h2 class=\"name\">{{patient.name_last}}, {{patient.name_first}} {{patient.name_middle}} {{patient.suffix}}</h2>\r\n        <h5 *ngIf=\"patient.is_discharged == 1\" [ngStyle]=\"{'color':encounterTypesColors.discharged}\">{{patient.pid}}</h5>\r\n        <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ere}\">{{patient.pid}}</h5>\r\n        <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ope}\">{{patient.pid}}</h5>\r\n        <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.ipe}\">{{patient.pid}}</h5>\r\n        <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1 && patient.is_discharged == 0\" [ngStyle]=\"{'color':encounterTypesColors.phs}\">{{patient.pid}}</h5>\r\n        <div style=\"display: flex;\"> \r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ere') > -1\">{{encounterTypes.ere}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ope') > -1\">{{encounterTypes.ope}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('ipe') > -1\">{{encounterTypes.ipe}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code && patient.deptenc_code.toLowerCase().indexOf('phs') > -1\">{{otherEncounterTypes.phs}}</h5>\r\n          <h5 *ngIf=\"patient.deptenc_code\">&nbsp;-&nbsp;</h5>\r\n          <h5>{{patient.area_desc}}</h5>\r\n        </div>\r\n        <h5 *ngIf=\"patient.encounter_date\">{{patient.encounter_date | date: 'MMMM dd, yyyy'}}</h5>\r\n        <p *ngIf=\"patient.birth_date\">{{patient.birth_date | date: 'yyyy.MM.dd'}}&nbsp;{{patient.age}}</p>\r\n      </ion-label>\r\n      <ion-avatar slot=\"end\" id=\"star\">\r\n        <ion-icon style=\"zoom:4.0;\" *ngIf=\"patient.is_favorite\" name=\"star-outline\" color=\"warning\"></ion-icon>\r\n        <ion-icon style=\"zoom:4.0;\" *ngIf=\"!patient.is_favorite\" name=\"star-outline\" color=\"light\"></ion-icon>\r\n      </ion-avatar>\r\n    </ion-item>\r\n  </ion-list>\r\n</ion-content>\r\n");

/***/ }),

/***/ "./src/app/app/services/alert-service.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/app/services/alert-service.service.ts ***!
  \*******************************************************/
/*! exports provided: AlertServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertServiceService", function() { return AlertServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/pages/prompt-modal/prompt-modal.page */ "./src/app/pages/prompt-modal/prompt-modal.page.ts");
/* harmony import */ var src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/pages/prompt-modal-c/prompt-modal-c.page */ "./src/app/pages/prompt-modal-c/prompt-modal-c.page.ts");





let AlertServiceService = class AlertServiceService {
    constructor(toastCtrl, modalController, alertController) {
        this.toastCtrl = toastCtrl;
        this.modalController = modalController;
        this.alertController = alertController;
    }
    alertToast(message) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            console.log('AlertToast Message:', message);
            const toast = yield this.toastCtrl.create({
                message: message,
                duration: 8000
            });
            toast.onclick = (ev) => {
                toast.dismiss();
            };
            toast.present();
        });
    }
    openAlertModalValidation(alert, title, message, messageArray, ok = 'Done', okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                cssClass: 'my-custom-modal-array-css',
                componentProps: {
                    alert,
                    title,
                    message,
                    messageArray,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    openSearchModal(options = [], value = "", placeholder = "Enter here...", maxLength = null, okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_c_prompt_modal_c_page__WEBPACK_IMPORTED_MODULE_4__["PromptModalCPage"],
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    searchData: {
                        isForSearch: true,
                        libs: options,
                        searchQuery: value,
                        maxLength: maxLength,
                        placeholder: placeholder
                    },
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    openPromptModal(title, message, ok = 'Save', okCallBack = (result) => { }, cancel = 'Cancel', cancelCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    prompt,
                    title,
                    message,
                    cancel,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
                cancelCallBack(result);
            });
            return yield modal.present();
        });
    }
    openAlertModal(alert, title, message, ok = 'Done', okCallBack = (result) => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const modal = yield this.modalController.create({
                component: src_app_pages_prompt_modal_prompt_modal_page__WEBPACK_IMPORTED_MODULE_3__["PromptModalPage"],
                // cssClass: 'auto-height',
                cssClass: 'my-custom-modal-css',
                componentProps: {
                    alert,
                    title,
                    message,
                    ok
                }
            });
            modal.onDidDismiss().then((result) => {
                okCallBack(result);
            });
            return yield modal.present();
        });
    }
    prompNAlert(header = '', subHeader = '', message = '', inputs = [], buttons = [], backdropDismiss = true, keyboardClose = true) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.nativeAlert = this.alertController.create({
                header,
                subHeader,
                message,
                backdropDismiss,
                keyboardClose,
                inputs,
                buttons
            }).then(alert => {
                this.nativeAlert.present();
            });
        });
    }
    prompInputNAlert(header = '', subHeader = '', message = '', backdropDismiss = true, keyboardClose = true, inputs = [], buttons = [], callBackOk = () => { }, callBackNo = () => { }) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            if (buttons.length == 0)
                buttons = [
                    {
                        text: 'OK',
                        handler: data => {
                            callBackOk();
                        }
                    },
                    {
                        text: 'Cancel',
                        handler: data => {
                            callBackNo();
                        }
                    }
                ];
            this.nativeAlert = this.alertController.create({
                header: '',
                subHeader: '',
                backdropDismiss,
                keyboardClose,
                message: '',
                inputs,
                buttons
            }).then(alert => {
                this.nativeAlert.present();
            });
        });
    }
};
AlertServiceService.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"] }
];
AlertServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ModalController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["AlertController"]])
], AlertServiceService);



/***/ }),

/***/ "./src/app/pages/quick-search/quick-search.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/pages/quick-search/quick-search.module.ts ***!
  \***********************************************************/
/*! exports provided: QuickSearchPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickSearchPageModule", function() { return QuickSearchPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _quick_search_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quick-search.page */ "./src/app/pages/quick-search/quick-search.page.ts");







const routes = [
    {
        path: '',
        component: _quick_search_page__WEBPACK_IMPORTED_MODULE_6__["QuickSearchPage"]
    }
];
let QuickSearchPageModule = class QuickSearchPageModule {
};
QuickSearchPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes)
        ],
        declarations: [_quick_search_page__WEBPACK_IMPORTED_MODULE_6__["QuickSearchPage"]]
    })
], QuickSearchPageModule);



/***/ }),

/***/ "./src/app/pages/quick-search/quick-search.page.scss":
/*!***********************************************************!*\
  !*** ./src/app/pages/quick-search/quick-search.page.scss ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-header .back {\n  margin-left: 2vw;\n}\nion-header .back ion-icon {\n  font-size: 48px;\n}\nion-header ion-title {\n  text-align: center;\n  color: white;\n  font-size: 1em;\n  font-weight: bold;\n}\nion-header .topToolbar {\n  box-shadow: none;\n  border: none;\n  --background: white;\n}\nion-header .searchBar {\n  background: white;\n  display: -webkit-box;\n  display: flex;\n  width: 100%;\n}\n#items {\n  color: black;\n  margin: 0px;\n  width: 100px;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n  margin-left: 10px;\n}\nion-content {\n  overflow: hidden;\n  background: white;\n  height: 100%;\n  width: 100%;\n}\nion-content .wardSuggestion {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  max-height: 30vh;\n}\nion-content .patientInfoLabel {\n  margin-top: 0.5vh;\n  margin-bottom: 0.5vh;\n}\nion-content .patientInfoLabel .name {\n  font-weight: bold;\n  color: #3C3F52;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\nion-content .patientInfoLabel h5 {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\nion-content .patientInfoLabel p {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n#avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  margin-left: 10px !important;\n  margin-right: 10px;\n  display: table;\n}\n#avatar h1 {\n  display: table-cell;\n  text-align: center;\n  vertical-align: middle;\n  color: white;\n  font-weight: bold;\n}\n#star {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcXVpY2stc2VhcmNoL0Q6XFxwcm9qZWN0c1xcaW9uaWNzXFxlaHItbW9iaWxlL3NyY1xcYXBwXFxwYWdlc1xccXVpY2stc2VhcmNoXFxxdWljay1zZWFyY2gucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9xdWljay1zZWFyY2gvcXVpY2stc2VhcmNoLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGdCQUFBO0FDQVI7QURFUTtFQUNJLGVBQUE7QUNBWjtBRElJO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDRlI7QURLSTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FDSFI7QURNSTtFQUNJLGlCQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EsV0FBQTtBQ0pSO0FEUUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFFQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0EsaUJBQUE7QUNMSjtBRFFBO0VBQ0ksZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDTEo7QURPSTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDTFI7QURRSTtFQUNJLGlCQUFBO0VBQ0Esb0JBQUE7QUNOUjtBRFFRO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FDTlo7QURTUTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtBQ1BaO0FEVVE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUNSWjtBRGFBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLDRCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FDVko7QURZSTtFQUNHLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQ1ZQO0FEY0E7RUFFSSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0FDWEoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9xdWljay1zZWFyY2gvcXVpY2stc2VhcmNoLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIge1xyXG4gICAgLmJhY2sge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAydnc7XHJcbiAgICBcclxuICAgICAgICBpb24taWNvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDhweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW9uLXRpdGxlIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgIC50b3BUb29sYmFyIHtcclxuICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgIC5zZWFyY2hCYXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNpdGVtcyB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIHdpZHRoOiAxMDBweDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbmlvbi1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgIC53YXJkU3VnZ2VzdGlvbiB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IDEwMDtcclxuICAgICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDMwdmg7XHJcbiAgICB9XHJcblxyXG4gICAgLnBhdGllbnRJbmZvTGFiZWwge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41dmg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjV2aDtcclxuXHJcbiAgICAgICAgLm5hbWUge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgY29sb3I6ICMzQzNGNTI7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaDUge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHAge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDsgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuI2F2YXRhciB7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIGhlaWdodDogNjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuXHJcbiAgICBoMSB7XHJcbiAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG59XHJcblxyXG4jc3RhciB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4iLCJpb24taGVhZGVyIC5iYWNrIHtcbiAgbWFyZ2luLWxlZnQ6IDJ2dztcbn1cbmlvbi1oZWFkZXIgLmJhY2sgaW9uLWljb24ge1xuICBmb250LXNpemU6IDQ4cHg7XG59XG5pb24taGVhZGVyIGlvbi10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDFlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5pb24taGVhZGVyIC50b3BUb29sYmFyIHtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufVxuaW9uLWhlYWRlciAuc2VhcmNoQmFyIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jaXRlbXMge1xuICBjb2xvcjogYmxhY2s7XG4gIG1hcmdpbjogMHB4O1xuICB3aWR0aDogMTAwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5pb24tY29udGVudCAud2FyZFN1Z2dlc3Rpb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTAwO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgbWF4LWhlaWdodDogMzB2aDtcbn1cbmlvbi1jb250ZW50IC5wYXRpZW50SW5mb0xhYmVsIHtcbiAgbWFyZ2luLXRvcDogMC41dmg7XG4gIG1hcmdpbi1ib3R0b206IDAuNXZoO1xufVxuaW9uLWNvbnRlbnQgLnBhdGllbnRJbmZvTGFiZWwgLm5hbWUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICMzQzNGNTI7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuaW9uLWNvbnRlbnQgLnBhdGllbnRJbmZvTGFiZWwgaDUge1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cbmlvbi1jb250ZW50IC5wYXRpZW50SW5mb0xhYmVsIHAge1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuI2F2YXRhciB7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IDEwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbiNhdmF0YXIgaDEge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbiNzdGFyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/pages/quick-search/quick-search.page.ts":
/*!*********************************************************!*\
  !*** ./src/app/pages/quick-search/quick-search.page.ts ***!
  \*********************************************************/
/*! exports provided: QuickSearchPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickSearchPage", function() { return QuickSearchPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/patient-api.service */ "./src/app/services/patient-api.service.ts");
/* harmony import */ var _services_patient_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../services/patient.service */ "./src/app/services/patient.service.ts");
/* harmony import */ var _services_login_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../services/login.service */ "./src/app/services/login.service.ts");
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../services/api.service */ "./src/app/services/api.service.ts");
/* harmony import */ var _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../services/permission-validator.service */ "./src/app/services/permission-validator.service.ts");
/* harmony import */ var _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../services/string-utils.service */ "./src/app/services/string-utils.service.ts");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/dist/fesm5.js");
/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../services/loading.service */ "./src/app/services/loading.service.ts");
/* harmony import */ var src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/app/services/alert-service.service */ "./src/app/app/services/alert-service.service.ts");











let QuickSearchPage = class QuickSearchPage {
    constructor(patientApiService, patientService, loginService, apiService, loadingService, stringUtilsService, navController, alertServ, permissionValidatorService, events, modalController) {
        this.patientApiService = patientApiService;
        this.patientService = patientService;
        this.loginService = loginService;
        this.apiService = apiService;
        this.loadingService = loadingService;
        this.stringUtilsService = stringUtilsService;
        this.navController = navController;
        this.alertServ = alertServ;
        this.permissionValidatorService = permissionValidatorService;
        this.events = events;
        this.modalController = modalController;
        this.filterSearchKeyword = '';
        this.filterType = 'ALL';
        this.role = 'doctor';
        this.showWardSearch = false;
        this.filterWard = 'PATIENT';
        this.showWardSuggestion = false;
        this.filterWardSearchKeyword = '';
        this.isNurse = false;
        this.isDoctor = true;
        this.patientApiService.setUrl(this.apiService.getUrl());
        this.patientApiService.setToken(this.loginService.getAuthentication().token);
        this.authentication = this.loginService.getAuthentication();
        this.patientApiService.setUrl(this.apiService.getUrl());
        this.patientApiService.setToken(this.authentication.token);
        this.role = this.authentication.user.role.role_name;
        this.isNurse = this.role.toLocaleLowerCase().indexOf('nurse') !== -1;
        this.isDoctor = !this.isNurse;
        if (this.isNurse) {
            const wards = this.loginService.getConfigAndDefaults().wards;
            console.log('wards', wards);
            const defaultOptions = wards['m-patient-wards-lists']['default-options'];
            console.log('default-options', defaultOptions);
            this.nurseWards = defaultOptions['nurse-wards'].wards;
        }
        const patientlistConfig = this.loginService.getConfigAndDefaults().patientlist;
        this.encounterTypes = patientlistConfig['m-patient-list']['default-options']['encounter-types'];
        this.otherEncounterTypes = patientlistConfig['m-patient-list']['default-options']['other-encounter-types'];
        this.encounterTypesColors = patientlistConfig['m-patient-list']['default-options']['encounter-types-color'];
    }
    ngOnInit() {
    }
    ionViewWillEnter() {
        console.log('ionViewWillEnter');
        // window.addEventListener('native.keyboardshow', this.keyboardShowHandler);
        // window.addEventListener('native.keyboardhide', this.keyboardHideHandler);
    }
    ionViewWillLeave() {
        console.log('ionViewWillLeave');
        // window.removeEventListener('native.keyboardshow', this.keyboardShowHandler);
        // window.removeEventListener('native.keyboardhide', this.keyboardHideHandler);
        // this.removeIonAppStyles();
    }
    onTypeChange(event) {
        console.log(event);
        if (this.filterSearchKeyword) {
            this.getPatientList().then(_ => {
                // do nothing
            }, err => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        }
    }
    onSearchInputChange(event) {
        console.log(event);
        if (this.isDoctor) {
            this.getPatientList().then(_ => {
                // do nothing
            }, err => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        }
        else if (this.isNurse) {
            this.filterWardSearchId = '';
            if (this.filterWardSearchKeyword) {
                const selectedWard = this.nurseWards.find(item => {
                    return item.name.toLocaleLowerCase() === this.filterWardSearchKeyword.toLocaleLowerCase();
                });
                if (!selectedWard) {
                    this.alertServ.openAlertModal('fail', 'Failed', 'Please input proper ward name!', 'Ok');
                    return;
                }
                this.filterWardSearchId = selectedWard.nr.toString();
            }
            this.getNursePatientList().then(_ => {
                // do nothing
            }, (err) => {
                const message = this.stringUtilsService.parseErrorMessage(err);
                this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
            });
        }
    }
    onNurseSearchModeChange(event) {
        this.showWardSearch = this.filterWard === 'WARD';
    }
    onSearchWardBlur() {
        if (this.filterWardSearchKeyword.length <= 0) {
            this.showWardSuggestion = false;
        }
    }
    onSearchWardFocus() {
        this.showWardSuggestion = true;
    }
    onSelectWard(i) {
        console.log(this.filteredNurseWards[i]);
        const selectedWard = this.filteredNurseWards[i];
        this.filterWardSearchKeyword = selectedWard.name;
        this.showWardSuggestion = false;
    }
    onSearchWardChange(event) {
        this.filterWardSearchId = '';
        if (this.filterWardSearchKeyword) {
            this.showWardSuggestion = true;
            this.filteredNurseWards = this.nurseWards.filter(ward => {
                return ward.name.toLocaleLowerCase().indexOf(this.filterWardSearchKeyword.toLocaleLowerCase()) !== -1;
            });
        }
        else {
            this.showWardSuggestion = false;
        }
    }
    onPatientSelect(selectedPatient) {
        console.log(selectedPatient);
        // this.listener.onQuickSearch(selectedPatient);
        if (this.isDoctor) {
            this.loadingService.present();
            this.patientApiService.getPatientProfileById(selectedPatient.encounter_no).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    this.patientService.setSelectedPatientBriefInformation(result);
                    this.patientService.setTempEncounterNo(result.encounter_no);
                    this.patientService.setSelectedEncounterNo(result.encounter_no);
                    this.permissionValidatorService.setSelectedPatient(result);
                    this.events.publish('patient:selected', result, Date.now());
                    // this.router.navigate(['/menu/patient-profile']);
                    this.navController.pop();
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                });
            });
        }
        else if (this.isNurse) {
            this.loadingService.present();
            this.patientApiService.getPatientProfileByIdForNurse(selectedPatient.encounter_no).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    this.patientService.setSelectedPatientBriefInformation(result);
                    this.patientService.setTempEncounterNo(result.encounter_no);
                    this.patientService.setSelectedEncounterNo(result.encounter_no);
                    this.permissionValidatorService.setSelectedPatient(result);
                    this.events.publish('patient:selected', result, Date.now());
                    // this.router.navigate(['/menu/patient-profile']);
                    this.navController.pop();
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    const message = this.stringUtilsService.parseErrorMessage(err);
                    this.alertServ.openAlertModal('fail', 'Failed', message, 'Ok');
                });
            });
        }
    }
    goBack() {
        console.log('back');
        this.navController.pop();
    }
    getPatientList() {
        return new Promise((resolve, reject) => {
            if (this.filterSearchKeyword.trim() == "" || !(this.filterSearchKeyword)) {
                resolve([]);
            }
            else {
                this.loadingService.present();
                this.patientApiService.getPatientList(this.filterType, this.filterSearchKeyword).subscribe((result) => {
                    console.log(result);
                    this.patientList = result;
                    this.loadingService.dismiss().then(_ => {
                        resolve(result);
                    });
                }, (err) => {
                    console.log('err ', err);
                    this.loadingService.dismiss().then(_ => {
                        reject(err);
                    });
                });
            }
        });
    }
    getNursePatientList() {
        return new Promise((resolve, reject) => {
            console.log('getNursePatientList: ', this.filterWardSearchId, this.filterSearchKeyword);
            this.loadingService.present();
            this.patientApiService.getNursePatientList(this.filterWardSearchId, this.filterSearchKeyword).subscribe((result) => {
                console.log(result);
                this.loadingService.dismiss().then(_ => {
                    this.nursePatientList = result;
                    this.patientService.setNursePatientList(this.nursePatientList);
                    resolve(result);
                });
            }, (err) => {
                console.log('err ', err);
                this.loadingService.dismiss().then(_ => {
                    reject(err);
                });
            });
        });
    }
    tapCoordinates(e) {
        this.y = e.touches[0].clientY;
        this.h = window.innerHeight;
        this.offsetY = (this.h - this.y);
        console.log('offset: ', this.offsetY);
    }
    keyboardShowHandler(e) {
        const kH = e.keyboardHeight;
        console.log('show: ', e.keyboardHeight);
        const bodyMove = document.querySelector('ion-app'), bodyMoveStyle = bodyMove.style;
        // Adjust full keyboard height
        bodyMoveStyle.bottom = kH + 'px';
        /*
        if (this.offsetY < kH + 40) {
          bodyMoveStyle.bottom = (kH - this.offsetY + 40) + 'px';
          // bodyMoveStyle.top = 'initial';
        }
        */
        console.log(bodyMoveStyle.bottom);
    }
    keyboardHideHandler() {
        console.log('gone');
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
    removeIonAppStyles() {
        const removeStyles = document.querySelector('ion-app');
        removeStyles.removeAttribute('style');
    }
};
QuickSearchPage.ctorParameters = () => [
    { type: _services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__["PatientApiService"] },
    { type: _services_patient_service__WEBPACK_IMPORTED_MODULE_3__["PatientService"] },
    { type: _services_login_service__WEBPACK_IMPORTED_MODULE_4__["LoginService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: _services_loading_service__WEBPACK_IMPORTED_MODULE_9__["LoadingService"] },
    { type: _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__["StringUtilsService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["NavController"] },
    { type: src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_10__["AlertServiceService"] },
    { type: _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_6__["PermissionValidatorService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["Events"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["ModalController"] }
];
QuickSearchPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-search',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./quick-search.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/quick-search/quick-search.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./quick-search.page.scss */ "./src/app/pages/quick-search/quick-search.page.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_patient_api_service__WEBPACK_IMPORTED_MODULE_2__["PatientApiService"],
        _services_patient_service__WEBPACK_IMPORTED_MODULE_3__["PatientService"],
        _services_login_service__WEBPACK_IMPORTED_MODULE_4__["LoginService"],
        _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"],
        _services_loading_service__WEBPACK_IMPORTED_MODULE_9__["LoadingService"],
        _services_string_utils_service__WEBPACK_IMPORTED_MODULE_7__["StringUtilsService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["NavController"],
        src_app_app_services_alert_service_service__WEBPACK_IMPORTED_MODULE_10__["AlertServiceService"],
        _services_permission_validator_service__WEBPACK_IMPORTED_MODULE_6__["PermissionValidatorService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["Events"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["ModalController"]])
], QuickSearchPage);



/***/ })

}]);
//# sourceMappingURL=quick-search-quick-search-module-es2015.js.map